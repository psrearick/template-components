{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/addEventListeners.js","src/js/vendor/highlight.min.js","src/js/updateResponsiveClasses.js","src/js/addContainerQueries.js","src/js/loadSiteJS.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/path-browserify/index.js","node_modules/process/browser.js","src/js/utilities.js","node_modules/@parcel/runtime-js/lib/runtime-b043e0b22ae4cddf.js","src/js/loadFonts.js","node_modules/fontfaceobserver/fontfaceobserver.standalone.js","src/js/componentGenerator.js","src/js/elementDefinitions.js","node_modules/@parcel/runtime-js/lib/runtime-2930c7b7212758f3.js","node_modules/@parcel/runtime-js/lib/runtime-f89fc290301200c4.js","node_modules/@parcel/runtime-js/lib/runtime-bf0598ed65cd137e.js","node_modules/@parcel/runtime-js/lib/runtime-51147dcbf29f2575.js","node_modules/@parcel/runtime-js/lib/runtime-9027c57e4d9333d3.js","node_modules/@parcel/runtime-js/lib/runtime-ab013ed6c6237749.js","node_modules/@parcel/runtime-js/lib/runtime-4359e85fe353544d.js","node_modules/@parcel/runtime-js/lib/runtime-2b7d2c54df3fe79b.js","node_modules/@parcel/runtime-js/lib/runtime-014c90f586f383a6.js","node_modules/@parcel/runtime-js/lib/runtime-2cf9f7c8f6e067f6.js","node_modules/@parcel/runtime-js/lib/runtime-ab71c9d7dc8e7168.js","node_modules/@parcel/runtime-js/lib/runtime-d313cf5bde524dcf.js","node_modules/@parcel/runtime-js/lib/runtime-e7229f85005312ff.js","node_modules/@parcel/runtime-js/lib/runtime-c43f033081df557f.js","node_modules/@parcel/runtime-js/lib/runtime-55869818bfe7e3cd.js","node_modules/@parcel/runtime-js/lib/runtime-1daadeb7c1bbc020.js","node_modules/@parcel/runtime-js/lib/runtime-9ec7953a0941e2f6.js","node_modules/@parcel/runtime-js/lib/runtime-926177c6b34766c7.js","src/js/pageBuilder.js","node_modules/acorn/dist/acorn.mjs","node_modules/acorn-walk/dist/walk.mjs","node_modules/@parcel/runtime-js/lib/runtime-e70569b036058d31.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire3ad2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire3ad2\"] = parcelRequire;\n}\n// import { addElementsToDom, createComponents, createSections } from \"./createElements\";\nvar $9ffb2da3f7eeeaad$exports = {};\n/*!\n  Highlight.js v11.8.0 (git: 65687a907b)\n  (c) 2006-2023 undefined and other contributors\n  License: BSD-3-Clause\n */ var $9ffb2da3f7eeeaad$var$hljs = function() {\n    \"use strict\";\n    function e(n) {\n        return n instanceof Map ? n.clear = n.delete = n.set = ()=>{\n            throw Error(\"map is read-only\");\n        } : n instanceof Set && (n.add = n.clear = n.delete = ()=>{\n            throw Error(\"set is read-only\");\n        }), Object.freeze(n), Object.getOwnPropertyNames(n).forEach((t)=>{\n            const a = n[t], i = typeof a;\n            \"object\" !== i && \"function\" !== i || Object.isFrozen(a) || e(a);\n        }), n;\n    }\n    class n {\n        constructor(e){\n            void 0 === e.data && (e.data = {}), this.data = e.data, this.isMatchIgnored = !1;\n        }\n        ignoreMatch() {\n            this.isMatchIgnored = !0;\n        }\n    }\n    function t(e) {\n        return e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n    }\n    function a(e, ...n) {\n        const t = Object.create(null);\n        for(const n in e)t[n] = e[n];\n        return n.forEach((e)=>{\n            for(const n in e)t[n] = e[n];\n        }), t;\n    }\n    const i = (e)=>!!e.scope;\n    class r {\n        constructor(e, n){\n            this.buffer = \"\", this.classPrefix = n.classPrefix, e.walk(this);\n        }\n        addText(e) {\n            this.buffer += t(e);\n        }\n        openNode(e) {\n            if (!i(e)) return;\n            const n = ((e, { prefix: n })=>{\n                if (e.startsWith(\"language:\")) return e.replace(\"language:\", \"language-\");\n                if (e.includes(\".\")) {\n                    const t = e.split(\".\");\n                    return [\n                        `${n}${t.shift()}`,\n                        ...t.map((e, n)=>`${e}${\"_\".repeat(n + 1)}`)\n                    ].join(\" \");\n                }\n                return `${n}${e}`;\n            })(e.scope, {\n                prefix: this.classPrefix\n            });\n            this.span(n);\n        }\n        closeNode(e) {\n            i(e) && (this.buffer += \"</span>\");\n        }\n        value() {\n            return this.buffer;\n        }\n        span(e) {\n            this.buffer += `<span class=\"${e}\">`;\n        }\n    }\n    const s = (e = {})=>{\n        const n = {\n            children: []\n        };\n        return Object.assign(n, e), n;\n    };\n    class o {\n        constructor(){\n            this.rootNode = s(), this.stack = [\n                this.rootNode\n            ];\n        }\n        get top() {\n            return this.stack[this.stack.length - 1];\n        }\n        get root() {\n            return this.rootNode;\n        }\n        add(e) {\n            this.top.children.push(e);\n        }\n        openNode(e) {\n            const n = s({\n                scope: e\n            });\n            this.add(n), this.stack.push(n);\n        }\n        closeNode() {\n            if (this.stack.length > 1) return this.stack.pop();\n        }\n        closeAllNodes() {\n            for(; this.closeNode(););\n        }\n        toJSON() {\n            return JSON.stringify(this.rootNode, null, 4);\n        }\n        walk(e) {\n            return this.constructor._walk(e, this.rootNode);\n        }\n        static _walk(e, n) {\n            return \"string\" == typeof n ? e.addText(n) : n.children && (e.openNode(n), n.children.forEach((n)=>this._walk(e, n)), e.closeNode(n)), e;\n        }\n        static _collapse(e) {\n            \"string\" != typeof e && e.children && (e.children.every((e)=>\"string\" == typeof e) ? e.children = [\n                e.children.join(\"\")\n            ] : e.children.forEach((e)=>{\n                o._collapse(e);\n            }));\n        }\n    }\n    class l extends o {\n        constructor(e){\n            super(), this.options = e;\n        }\n        addText(e) {\n            \"\" !== e && this.add(e);\n        }\n        startScope(e) {\n            this.openNode(e);\n        }\n        endScope() {\n            this.closeNode();\n        }\n        __addSublanguage(e, n) {\n            const t = e.root;\n            n && (t.scope = \"language:\" + n), this.add(t);\n        }\n        toHTML() {\n            return new r(this, this.options).value();\n        }\n        finalize() {\n            return this.closeAllNodes(), !0;\n        }\n    }\n    function c(e) {\n        return e ? \"string\" == typeof e ? e : e.source : null;\n    }\n    function d(e) {\n        return b(\"(?=\", e, \")\");\n    }\n    function g(e) {\n        return b(\"(?:\", e, \")*\");\n    }\n    function u(e) {\n        return b(\"(?:\", e, \")?\");\n    }\n    function b(...e) {\n        return e.map((e)=>c(e)).join(\"\");\n    }\n    function m(...e) {\n        const n = ((e)=>{\n            const n = e[e.length - 1];\n            return \"object\" == typeof n && n.constructor === Object ? (e.splice(e.length - 1, 1), n) : {};\n        })(e);\n        return \"(\" + (n.capture ? \"\" : \"?:\") + e.map((e)=>c(e)).join(\"|\") + \")\";\n    }\n    function p(e) {\n        return RegExp(e.toString() + \"|\").exec(\"\").length - 1;\n    }\n    const _ = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n    function h(e, { joinWith: n }) {\n        let t = 0;\n        return e.map((e)=>{\n            t += 1;\n            const n = t;\n            let a = c(e), i = \"\";\n            for(; a.length > 0;){\n                const e = _.exec(a);\n                if (!e) {\n                    i += a;\n                    break;\n                }\n                i += a.substring(0, e.index), a = a.substring(e.index + e[0].length), \"\\\\\" === e[0][0] && e[1] ? i += \"\\\\\" + (Number(e[1]) + n) : (i += e[0], \"(\" === e[0] && t++);\n            }\n            return i;\n        }).map((e)=>`(${e})`).join(n);\n    }\n    const f = \"[a-zA-Z]\\\\w*\", E = \"[a-zA-Z_]\\\\w*\", y = \"\\\\b\\\\d+(\\\\.\\\\d+)?\", N = \"(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\", w = \"\\\\b(0b[01]+)\", v = {\n        begin: \"\\\\\\\\[\\\\s\\\\S]\",\n        relevance: 0\n    }, O = {\n        scope: \"string\",\n        begin: \"'\",\n        end: \"'\",\n        illegal: \"\\\\n\",\n        contains: [\n            v\n        ]\n    }, k = {\n        scope: \"string\",\n        begin: '\"',\n        end: '\"',\n        illegal: \"\\\\n\",\n        contains: [\n            v\n        ]\n    }, x = (e, n, t = {})=>{\n        const i = a({\n            scope: \"comment\",\n            begin: e,\n            end: n,\n            contains: []\n        }, t);\n        i.contains.push({\n            scope: \"doctag\",\n            begin: \"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)\",\n            end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n            excludeBegin: !0,\n            relevance: 0\n        });\n        const r = m(\"I\", \"a\", \"is\", \"so\", \"us\", \"to\", \"at\", \"if\", \"in\", \"it\", \"on\", /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, /[A-Za-z]+[-][a-z]+/, /[A-Za-z][a-z]{2,}/);\n        return i.contains.push({\n            begin: b(/[ ]+/, \"(\", r, /[.]?[:]?([.][ ]|[ ])/, \"){3}\")\n        }), i;\n    }, M = x(\"//\", \"$\"), S = x(\"/\\\\*\", \"\\\\*/\"), A = x(\"#\", \"$\");\n    var C = Object.freeze({\n        __proto__: null,\n        MATCH_NOTHING_RE: /\\b\\B/,\n        IDENT_RE: f,\n        UNDERSCORE_IDENT_RE: E,\n        NUMBER_RE: y,\n        C_NUMBER_RE: N,\n        BINARY_NUMBER_RE: w,\n        RE_STARTERS_RE: \"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\",\n        SHEBANG: (e = {})=>{\n            const n = /^#![ ]*\\//;\n            return e.binary && (e.begin = b(n, /.*\\b/, e.binary, /\\b.*/)), a({\n                scope: \"meta\",\n                begin: n,\n                end: /$/,\n                relevance: 0,\n                \"on:begin\": (e, n)=>{\n                    0 !== e.index && n.ignoreMatch();\n                }\n            }, e);\n        },\n        BACKSLASH_ESCAPE: v,\n        APOS_STRING_MODE: O,\n        QUOTE_STRING_MODE: k,\n        PHRASAL_WORDS_MODE: {\n            begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n        },\n        COMMENT: x,\n        C_LINE_COMMENT_MODE: M,\n        C_BLOCK_COMMENT_MODE: S,\n        HASH_COMMENT_MODE: A,\n        NUMBER_MODE: {\n            scope: \"number\",\n            begin: y,\n            relevance: 0\n        },\n        C_NUMBER_MODE: {\n            scope: \"number\",\n            begin: N,\n            relevance: 0\n        },\n        BINARY_NUMBER_MODE: {\n            scope: \"number\",\n            begin: w,\n            relevance: 0\n        },\n        REGEXP_MODE: {\n            begin: /(?=\\/[^/\\n]*\\/)/,\n            contains: [\n                {\n                    scope: \"regexp\",\n                    begin: /\\//,\n                    end: /\\/[gimuy]*/,\n                    illegal: /\\n/,\n                    contains: [\n                        v,\n                        {\n                            begin: /\\[/,\n                            end: /\\]/,\n                            relevance: 0,\n                            contains: [\n                                v\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        TITLE_MODE: {\n            scope: \"title\",\n            begin: f,\n            relevance: 0\n        },\n        UNDERSCORE_TITLE_MODE: {\n            scope: \"title\",\n            begin: E,\n            relevance: 0\n        },\n        METHOD_GUARD: {\n            begin: \"\\\\.\\\\s*\" + E,\n            relevance: 0\n        },\n        END_SAME_AS_BEGIN: (e)=>Object.assign(e, {\n                \"on:begin\": (e, n)=>{\n                    n.data._beginMatch = e[1];\n                },\n                \"on:end\": (e, n)=>{\n                    n.data._beginMatch !== e[1] && n.ignoreMatch();\n                }\n            })\n    });\n    function T(e, n) {\n        \".\" === e.input[e.index - 1] && n.ignoreMatch();\n    }\n    function R(e, n) {\n        void 0 !== e.className && (e.scope = e.className, delete e.className);\n    }\n    function D(e, n) {\n        n && e.beginKeywords && (e.begin = \"\\\\b(\" + e.beginKeywords.split(\" \").join(\"|\") + \")(?!\\\\.)(?=\\\\b|\\\\s)\", e.__beforeBegin = T, e.keywords = e.keywords || e.beginKeywords, delete e.beginKeywords, void 0 === e.relevance && (e.relevance = 0));\n    }\n    function I(e, n) {\n        Array.isArray(e.illegal) && (e.illegal = m(...e.illegal));\n    }\n    function L(e, n) {\n        if (e.match) {\n            if (e.begin || e.end) throw Error(\"begin & end are not supported with match\");\n            e.begin = e.match, delete e.match;\n        }\n    }\n    function B(e, n) {\n        void 0 === e.relevance && (e.relevance = 1);\n    }\n    const $ = (e, n)=>{\n        if (!e.beforeMatch) return;\n        if (e.starts) throw Error(\"beforeMatch cannot be used with starts\");\n        const t = Object.assign({}, e);\n        Object.keys(e).forEach((n)=>{\n            delete e[n];\n        }), e.keywords = t.keywords, e.begin = b(t.beforeMatch, d(t.begin)), e.starts = {\n            relevance: 0,\n            contains: [\n                Object.assign(t, {\n                    endsParent: !0\n                })\n            ]\n        }, e.relevance = 0, delete t.beforeMatch;\n    }, z = [\n        \"of\",\n        \"and\",\n        \"for\",\n        \"in\",\n        \"not\",\n        \"or\",\n        \"if\",\n        \"then\",\n        \"parent\",\n        \"list\",\n        \"value\"\n    ], F = \"keyword\";\n    function U(e, n, t = F) {\n        const a = Object.create(null);\n        return \"string\" == typeof e ? i(t, e.split(\" \")) : Array.isArray(e) ? i(t, e) : Object.keys(e).forEach((t)=>{\n            Object.assign(a, U(e[t], n, t));\n        }), a;\n        function i(e, t) {\n            n && (t = t.map((e)=>e.toLowerCase())), t.forEach((n)=>{\n                const t = n.split(\"|\");\n                a[t[0]] = [\n                    e,\n                    j(t[0], t[1])\n                ];\n            });\n        }\n    }\n    function j(e, n) {\n        return n ? Number(n) : ((e)=>z.includes(e.toLowerCase()))(e) ? 0 : 1;\n    }\n    const P = {}, K = (e)=>{\n        console.error(e);\n    }, q = (e, ...n)=>{\n        console.log(\"WARN: \" + e, ...n);\n    }, H = (e, n)=>{\n        P[`${e}/${n}`] || (console.log(`Deprecated as of ${e}. ${n}`), P[`${e}/${n}`] = !0);\n    }, G = Error();\n    function Z(e, n, { key: t }) {\n        let a = 0;\n        const i = e[t], r = {}, s = {};\n        for(let e = 1; e <= n.length; e++)s[e + a] = i[e], r[e + a] = !0, a += p(n[e - 1]);\n        e[t] = s, e[t]._emit = r, e[t]._multi = !0;\n    }\n    function W(e) {\n        ((e)=>{\n            e.scope && \"object\" == typeof e.scope && null !== e.scope && (e.beginScope = e.scope, delete e.scope);\n        })(e), \"string\" == typeof e.beginScope && (e.beginScope = {\n            _wrap: e.beginScope\n        }), \"string\" == typeof e.endScope && (e.endScope = {\n            _wrap: e.endScope\n        }), ((e)=>{\n            if (Array.isArray(e.begin)) {\n                if (e.skip || e.excludeBegin || e.returnBegin) throw K(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\"), G;\n                if (\"object\" != typeof e.beginScope || null === e.beginScope) throw K(\"beginScope must be object\"), G;\n                Z(e, e.begin, {\n                    key: \"beginScope\"\n                }), e.begin = h(e.begin, {\n                    joinWith: \"\"\n                });\n            }\n        })(e), ((e)=>{\n            if (Array.isArray(e.end)) {\n                if (e.skip || e.excludeEnd || e.returnEnd) throw K(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\"), G;\n                if (\"object\" != typeof e.endScope || null === e.endScope) throw K(\"endScope must be object\"), G;\n                Z(e, e.end, {\n                    key: \"endScope\"\n                }), e.end = h(e.end, {\n                    joinWith: \"\"\n                });\n            }\n        })(e);\n    }\n    function Q(e) {\n        function n(n, t) {\n            return RegExp(c(n), \"m\" + (e.case_insensitive ? \"i\" : \"\") + (e.unicodeRegex ? \"u\" : \"\") + (t ? \"g\" : \"\"));\n        }\n        class t {\n            constructor(){\n                this.matchIndexes = {}, this.regexes = [], this.matchAt = 1, this.position = 0;\n            }\n            addRule(e, n) {\n                n.position = this.position++, this.matchIndexes[this.matchAt] = n, this.regexes.push([\n                    n,\n                    e\n                ]), this.matchAt += p(e) + 1;\n            }\n            compile() {\n                0 === this.regexes.length && (this.exec = ()=>null);\n                const e = this.regexes.map((e)=>e[1]);\n                this.matcherRe = n(h(e, {\n                    joinWith: \"|\"\n                }), !0), this.lastIndex = 0;\n            }\n            exec(e) {\n                this.matcherRe.lastIndex = this.lastIndex;\n                const n = this.matcherRe.exec(e);\n                if (!n) return null;\n                const t = n.findIndex((e, n)=>n > 0 && void 0 !== e), a = this.matchIndexes[t];\n                return n.splice(0, t), Object.assign(n, a);\n            }\n        }\n        class i {\n            constructor(){\n                this.rules = [], this.multiRegexes = [], this.count = 0, this.lastIndex = 0, this.regexIndex = 0;\n            }\n            getMatcher(e) {\n                if (this.multiRegexes[e]) return this.multiRegexes[e];\n                const n = new t;\n                return this.rules.slice(e).forEach(([e, t])=>n.addRule(e, t)), n.compile(), this.multiRegexes[e] = n, n;\n            }\n            resumingScanAtSamePosition() {\n                return 0 !== this.regexIndex;\n            }\n            considerAll() {\n                this.regexIndex = 0;\n            }\n            addRule(e, n) {\n                this.rules.push([\n                    e,\n                    n\n                ]), \"begin\" === n.type && this.count++;\n            }\n            exec(e) {\n                const n = this.getMatcher(this.regexIndex);\n                n.lastIndex = this.lastIndex;\n                let t = n.exec(e);\n                if (this.resumingScanAtSamePosition()) {\n                    if (t && t.index === this.lastIndex) ;\n                    else {\n                        const n = this.getMatcher(0);\n                        n.lastIndex = this.lastIndex + 1, t = n.exec(e);\n                    }\n                }\n                return t && (this.regexIndex += t.position + 1, this.regexIndex === this.count && this.considerAll()), t;\n            }\n        }\n        if (e.compilerExtensions || (e.compilerExtensions = []), e.contains && e.contains.includes(\"self\")) throw Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n        return e.classNameAliases = a(e.classNameAliases || {}), function t(r, s) {\n            const o = r;\n            if (r.isCompiled) return o;\n            [\n                R,\n                L,\n                W,\n                $\n            ].forEach((e)=>e(r, s)), e.compilerExtensions.forEach((e)=>e(r, s)), r.__beforeBegin = null, [\n                D,\n                I,\n                B\n            ].forEach((e)=>e(r, s)), r.isCompiled = !0;\n            let l = null;\n            return \"object\" == typeof r.keywords && r.keywords.$pattern && (r.keywords = Object.assign({}, r.keywords), l = r.keywords.$pattern, delete r.keywords.$pattern), l = l || /\\w+/, r.keywords && (r.keywords = U(r.keywords, e.case_insensitive)), o.keywordPatternRe = n(l, !0), s && (r.begin || (r.begin = /\\B|\\b/), o.beginRe = n(o.begin), r.end || r.endsWithParent || (r.end = /\\B|\\b/), r.end && (o.endRe = n(o.end)), o.terminatorEnd = c(o.end) || \"\", r.endsWithParent && s.terminatorEnd && (o.terminatorEnd += (r.end ? \"|\" : \"\") + s.terminatorEnd)), r.illegal && (o.illegalRe = n(r.illegal)), r.contains || (r.contains = []), r.contains = [].concat(...r.contains.map((e)=>((e)=>(e.variants && !e.cachedVariants && (e.cachedVariants = e.variants.map((n)=>a(e, {\n                            variants: null\n                        }, n))), e.cachedVariants ? e.cachedVariants : X(e) ? a(e, {\n                        starts: e.starts ? a(e.starts) : null\n                    }) : Object.isFrozen(e) ? a(e) : e))(\"self\" === e ? r : e))), r.contains.forEach((e)=>{\n                t(e, o);\n            }), r.starts && t(r.starts, s), o.matcher = ((e)=>{\n                const n = new i;\n                return e.contains.forEach((e)=>n.addRule(e.begin, {\n                        rule: e,\n                        type: \"begin\"\n                    })), e.terminatorEnd && n.addRule(e.terminatorEnd, {\n                    type: \"end\"\n                }), e.illegal && n.addRule(e.illegal, {\n                    type: \"illegal\"\n                }), n;\n            })(o), o;\n        }(e);\n    }\n    function X(e) {\n        return !!e && (e.endsWithParent || X(e.starts));\n    }\n    class V extends Error {\n        constructor(e, n){\n            super(e), this.name = \"HTMLInjectionError\", this.html = n;\n        }\n    }\n    const J = t, Y = a, ee = Symbol(\"nomatch\"), ne = (t)=>{\n        const a = Object.create(null), i = Object.create(null), r = [];\n        let s = !0;\n        const o = \"Could not find the language '{}', did you forget to load/include a language module?\", c = {\n            disableAutodetect: !0,\n            name: \"Plain text\",\n            contains: []\n        };\n        let p = {\n            ignoreUnescapedHTML: !1,\n            throwUnescapedHTML: !1,\n            noHighlightRe: /^(no-?highlight)$/i,\n            languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n            classPrefix: \"hljs-\",\n            cssSelector: \"pre code\",\n            languages: null,\n            __emitter: l\n        };\n        function _(e) {\n            return p.noHighlightRe.test(e);\n        }\n        function h(e, n, t) {\n            let a = \"\", i = \"\";\n            \"object\" == typeof n ? (a = e, t = n.ignoreIllegals, i = n.language) : (H(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\"), H(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\"), i = e, a = n), void 0 === t && (t = !0);\n            const r = {\n                code: a,\n                language: i\n            };\n            x(\"before:highlight\", r);\n            const s = r.result ? r.result : f(r.language, r.code, t);\n            return s.code = r.code, x(\"after:highlight\", s), s;\n        }\n        function f(e, t, i, r) {\n            const l = Object.create(null);\n            function c() {\n                if (!x.keywords) return void S.addText(A);\n                let e = 0;\n                x.keywordPatternRe.lastIndex = 0;\n                let n = x.keywordPatternRe.exec(A), t = \"\";\n                for(; n;){\n                    t += A.substring(e, n.index);\n                    const i = w.case_insensitive ? n[0].toLowerCase() : n[0], r = (a = i, x.keywords[a]);\n                    if (r) {\n                        const [e, a] = r;\n                        if (S.addText(t), t = \"\", l[i] = (l[i] || 0) + 1, l[i] <= 7 && (C += a), e.startsWith(\"_\")) t += n[0];\n                        else {\n                            const t = w.classNameAliases[e] || e;\n                            g(n[0], t);\n                        }\n                    } else t += n[0];\n                    e = x.keywordPatternRe.lastIndex, n = x.keywordPatternRe.exec(A);\n                }\n                var a;\n                t += A.substring(e), S.addText(t);\n            }\n            function d() {\n                null != x.subLanguage ? (()=>{\n                    if (\"\" === A) return;\n                    let e = null;\n                    if (\"string\" == typeof x.subLanguage) {\n                        if (!a[x.subLanguage]) return void S.addText(A);\n                        e = f(x.subLanguage, A, !0, M[x.subLanguage]), M[x.subLanguage] = e._top;\n                    } else e = E(A, x.subLanguage.length ? x.subLanguage : null);\n                    x.relevance > 0 && (C += e.relevance), S.__addSublanguage(e._emitter, e.language);\n                })() : c(), A = \"\";\n            }\n            function g(e, n) {\n                \"\" !== e && (S.startScope(n), S.addText(e), S.endScope());\n            }\n            function u(e, n) {\n                let t = 1;\n                const a = n.length - 1;\n                for(; t <= a;){\n                    if (!e._emit[t]) {\n                        t++;\n                        continue;\n                    }\n                    const a = w.classNameAliases[e[t]] || e[t], i = n[t];\n                    a ? g(i, a) : (A = i, c(), A = \"\"), t++;\n                }\n            }\n            function b(e, n) {\n                return e.scope && \"string\" == typeof e.scope && S.openNode(w.classNameAliases[e.scope] || e.scope), e.beginScope && (e.beginScope._wrap ? (g(A, w.classNameAliases[e.beginScope._wrap] || e.beginScope._wrap), A = \"\") : e.beginScope._multi && (u(e.beginScope, n), A = \"\")), x = Object.create(e, {\n                    parent: {\n                        value: x\n                    }\n                }), x;\n            }\n            function m(e, t, a) {\n                let i = ((e, n)=>{\n                    const t = e && e.exec(n);\n                    return t && 0 === t.index;\n                })(e.endRe, a);\n                if (i) {\n                    if (e[\"on:end\"]) {\n                        const a = new n(e);\n                        e[\"on:end\"](t, a), a.isMatchIgnored && (i = !1);\n                    }\n                    if (i) {\n                        for(; e.endsParent && e.parent;)e = e.parent;\n                        return e;\n                    }\n                }\n                if (e.endsWithParent) return m(e.parent, t, a);\n            }\n            function _(e) {\n                return 0 === x.matcher.regexIndex ? (A += e[0], 1) : (D = !0, 0);\n            }\n            function h(e) {\n                const n = e[0], a = t.substring(e.index), i = m(x, e, a);\n                if (!i) return ee;\n                const r = x;\n                x.endScope && x.endScope._wrap ? (d(), g(n, x.endScope._wrap)) : x.endScope && x.endScope._multi ? (d(), u(x.endScope, e)) : r.skip ? A += n : (r.returnEnd || r.excludeEnd || (A += n), d(), r.excludeEnd && (A = n));\n                do x.scope && S.closeNode(), x.skip || x.subLanguage || (C += x.relevance), x = x.parent;\n                while (x !== i.parent);\n                return i.starts && b(i.starts, e), r.returnEnd ? 0 : n.length;\n            }\n            let y = {};\n            function N(a, r) {\n                const o = r && r[0];\n                if (A += a, null == o) return d(), 0;\n                if (\"begin\" === y.type && \"end\" === r.type && y.index === r.index && \"\" === o) {\n                    if (A += t.slice(r.index, r.index + 1), !s) {\n                        const n = Error(`0 width match regex (${e})`);\n                        throw n.languageName = e, n.badRule = y.rule, n;\n                    }\n                    return 1;\n                }\n                if (y = r, \"begin\" === r.type) return ((e)=>{\n                    const t = e[0], a = e.rule, i = new n(a), r = [\n                        a.__beforeBegin,\n                        a[\"on:begin\"]\n                    ];\n                    for (const n of r)if (n && (n(e, i), i.isMatchIgnored)) return _(t);\n                    return a.skip ? A += t : (a.excludeBegin && (A += t), d(), a.returnBegin || a.excludeBegin || (A = t)), b(a, e), a.returnBegin ? 0 : t.length;\n                })(r);\n                if (\"illegal\" === r.type && !i) {\n                    const e = Error('Illegal lexeme \"' + o + '\" for mode \"' + (x.scope || \"<unnamed>\") + '\"');\n                    throw e.mode = x, e;\n                }\n                if (\"end\" === r.type) {\n                    const e = h(r);\n                    if (e !== ee) return e;\n                }\n                if (\"illegal\" === r.type && \"\" === o) return 1;\n                if (R > 1e5 && R > 3 * r.index) throw Error(\"potential infinite loop, way more iterations than matches\");\n                return A += o, o.length;\n            }\n            const w = v(e);\n            if (!w) throw K(o.replace(\"{}\", e)), Error('Unknown language: \"' + e + '\"');\n            const O = Q(w);\n            let k = \"\", x = r || O;\n            const M = {}, S = new p.__emitter(p);\n            (()=>{\n                const e = [];\n                for(let n = x; n !== w; n = n.parent)n.scope && e.unshift(n.scope);\n                e.forEach((e)=>S.openNode(e));\n            })();\n            let A = \"\", C = 0, T = 0, R = 0, D = !1;\n            try {\n                if (w.__emitTokens) w.__emitTokens(t, S);\n                else {\n                    for(x.matcher.considerAll();;){\n                        R++, D ? D = !1 : x.matcher.considerAll(), x.matcher.lastIndex = T;\n                        const e = x.matcher.exec(t);\n                        if (!e) break;\n                        const n = N(t.substring(T, e.index), e);\n                        T = e.index + n;\n                    }\n                    N(t.substring(T));\n                }\n                return S.finalize(), k = S.toHTML(), {\n                    language: e,\n                    value: k,\n                    relevance: C,\n                    illegal: !1,\n                    _emitter: S,\n                    _top: x\n                };\n            } catch (n) {\n                if (n.message && n.message.includes(\"Illegal\")) return {\n                    language: e,\n                    value: J(t),\n                    illegal: !0,\n                    relevance: 0,\n                    _illegalBy: {\n                        message: n.message,\n                        index: T,\n                        context: t.slice(T - 100, T + 100),\n                        mode: n.mode,\n                        resultSoFar: k\n                    },\n                    _emitter: S\n                };\n                if (s) return {\n                    language: e,\n                    value: J(t),\n                    illegal: !1,\n                    relevance: 0,\n                    errorRaised: n,\n                    _emitter: S,\n                    _top: x\n                };\n                throw n;\n            }\n        }\n        function E(e, n) {\n            n = n || p.languages || Object.keys(a);\n            const t = ((e)=>{\n                const n = {\n                    value: J(e),\n                    illegal: !1,\n                    relevance: 0,\n                    _top: c,\n                    _emitter: new p.__emitter(p)\n                };\n                return n._emitter.addText(e), n;\n            })(e), i = n.filter(v).filter(k).map((n)=>f(n, e, !1));\n            i.unshift(t);\n            const r = i.sort((e, n)=>{\n                if (e.relevance !== n.relevance) return n.relevance - e.relevance;\n                if (e.language && n.language) {\n                    if (v(e.language).supersetOf === n.language) return 1;\n                    if (v(n.language).supersetOf === e.language) return -1;\n                }\n                return 0;\n            }), [s, o] = r, l = s;\n            return l.secondBest = o, l;\n        }\n        function y(e) {\n            let n = null;\n            const t = ((e)=>{\n                let n = e.className + \" \";\n                n += e.parentNode ? e.parentNode.className : \"\";\n                const t = p.languageDetectRe.exec(n);\n                if (t) {\n                    const n = v(t[1]);\n                    return n || (q(o.replace(\"{}\", t[1])), q(\"Falling back to no-highlight mode for this block.\", e)), n ? t[1] : \"no-highlight\";\n                }\n                return n.split(/\\s+/).find((e)=>_(e) || v(e));\n            })(e);\n            if (_(t)) return;\n            if (x(\"before:highlightElement\", {\n                el: e,\n                language: t\n            }), e.children.length > 0 && (p.ignoreUnescapedHTML || (console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\"), console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\"), console.warn(\"The element with unescaped HTML:\"), console.warn(e)), p.throwUnescapedHTML)) throw new V(\"One of your code blocks includes unescaped HTML.\", e.innerHTML);\n            n = e;\n            const a = n.textContent, r = t ? h(a, {\n                language: t,\n                ignoreIllegals: !0\n            }) : E(a);\n            e.innerHTML = r.value, ((e, n, t)=>{\n                const a = n && i[n] || t;\n                e.classList.add(\"hljs\"), e.classList.add(\"language-\" + a);\n            })(e, t, r.language), e.result = {\n                language: r.language,\n                re: r.relevance,\n                relevance: r.relevance\n            }, r.secondBest && (e.secondBest = {\n                language: r.secondBest.language,\n                relevance: r.secondBest.relevance\n            }), x(\"after:highlightElement\", {\n                el: e,\n                result: r,\n                text: a\n            });\n        }\n        let N = !1;\n        function w() {\n            \"loading\" !== document.readyState ? document.querySelectorAll(p.cssSelector).forEach(y) : N = !0;\n        }\n        function v(e) {\n            return e = (e || \"\").toLowerCase(), a[e] || a[i[e]];\n        }\n        function O(e, { languageName: n }) {\n            \"string\" == typeof e && (e = [\n                e\n            ]), e.forEach((e)=>{\n                i[e.toLowerCase()] = n;\n            });\n        }\n        function k(e) {\n            const n = v(e);\n            return n && !n.disableAutodetect;\n        }\n        function x(e, n) {\n            const t = e;\n            r.forEach((e)=>{\n                e[t] && e[t](n);\n            });\n        }\n        \"undefined\" != typeof window && window.addEventListener && window.addEventListener(\"DOMContentLoaded\", ()=>{\n            N && w();\n        }, !1), Object.assign(t, {\n            highlight: h,\n            highlightAuto: E,\n            highlightAll: w,\n            highlightElement: y,\n            highlightBlock: (e)=>(H(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\"), H(\"10.7.0\", \"Please use highlightElement now.\"), y(e)),\n            configure: (e)=>{\n                p = Y(p, e);\n            },\n            initHighlighting: ()=>{\n                w(), H(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n            },\n            initHighlightingOnLoad: ()=>{\n                w(), H(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n            },\n            registerLanguage: (e, n)=>{\n                let i = null;\n                try {\n                    i = n(t);\n                } catch (n) {\n                    if (K(\"Language definition for '{}' could not be registered.\".replace(\"{}\", e)), !s) throw n;\n                    K(n), i = c;\n                }\n                i.name || (i.name = e), a[e] = i, i.rawDefinition = n.bind(null, t), i.aliases && O(i.aliases, {\n                    languageName: e\n                });\n            },\n            unregisterLanguage: (e)=>{\n                delete a[e];\n                for (const n of Object.keys(i))i[n] === e && delete i[n];\n            },\n            listLanguages: ()=>Object.keys(a),\n            getLanguage: v,\n            registerAliases: O,\n            autoDetection: k,\n            inherit: Y,\n            addPlugin: (e)=>{\n                ((e)=>{\n                    e[\"before:highlightBlock\"] && !e[\"before:highlightElement\"] && (e[\"before:highlightElement\"] = (n)=>{\n                        e[\"before:highlightBlock\"](Object.assign({\n                            block: n.el\n                        }, n));\n                    }), e[\"after:highlightBlock\"] && !e[\"after:highlightElement\"] && (e[\"after:highlightElement\"] = (n)=>{\n                        e[\"after:highlightBlock\"](Object.assign({\n                            block: n.el\n                        }, n));\n                    });\n                })(e), r.push(e);\n            },\n            removePlugin: (e)=>{\n                const n = r.indexOf(e);\n                -1 !== n && r.splice(n, 1);\n            }\n        }), t.debugMode = ()=>{\n            s = !1;\n        }, t.safeMode = ()=>{\n            s = !0;\n        }, t.versionString = \"11.8.0\", t.regex = {\n            concat: b,\n            lookahead: d,\n            either: m,\n            optional: u,\n            anyNumberOfTimes: g\n        };\n        for(const n in C)\"object\" == typeof C[n] && e(C[n]);\n        return Object.assign(t, C), t;\n    }, te = ne({});\n    te.newInstance = ()=>ne({});\n    var ae = te;\n    const ie = (e)=>({\n            IMPORTANT: {\n                scope: \"meta\",\n                begin: \"!important\"\n            },\n            BLOCK_COMMENT: e.C_BLOCK_COMMENT_MODE,\n            HEXCOLOR: {\n                scope: \"number\",\n                begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n            },\n            FUNCTION_DISPATCH: {\n                className: \"built_in\",\n                begin: /[\\w-]+(?=\\()/\n            },\n            ATTRIBUTE_SELECTOR_MODE: {\n                scope: \"selector-attr\",\n                begin: /\\[/,\n                end: /\\]/,\n                illegal: \"$\",\n                contains: [\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE\n                ]\n            },\n            CSS_NUMBER_MODE: {\n                scope: \"number\",\n                begin: e.NUMBER_RE + \"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\",\n                relevance: 0\n            },\n            CSS_VARIABLE: {\n                className: \"attr\",\n                begin: /--[A-Za-z][A-Za-z0-9_-]*/\n            }\n        }), re = [\n        \"a\",\n        \"abbr\",\n        \"address\",\n        \"article\",\n        \"aside\",\n        \"audio\",\n        \"b\",\n        \"blockquote\",\n        \"body\",\n        \"button\",\n        \"canvas\",\n        \"caption\",\n        \"cite\",\n        \"code\",\n        \"dd\",\n        \"del\",\n        \"details\",\n        \"dfn\",\n        \"div\",\n        \"dl\",\n        \"dt\",\n        \"em\",\n        \"fieldset\",\n        \"figcaption\",\n        \"figure\",\n        \"footer\",\n        \"form\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"header\",\n        \"hgroup\",\n        \"html\",\n        \"i\",\n        \"iframe\",\n        \"img\",\n        \"input\",\n        \"ins\",\n        \"kbd\",\n        \"label\",\n        \"legend\",\n        \"li\",\n        \"main\",\n        \"mark\",\n        \"menu\",\n        \"nav\",\n        \"object\",\n        \"ol\",\n        \"p\",\n        \"q\",\n        \"quote\",\n        \"samp\",\n        \"section\",\n        \"span\",\n        \"strong\",\n        \"summary\",\n        \"sup\",\n        \"table\",\n        \"tbody\",\n        \"td\",\n        \"textarea\",\n        \"tfoot\",\n        \"th\",\n        \"thead\",\n        \"time\",\n        \"tr\",\n        \"ul\",\n        \"var\",\n        \"video\"\n    ], se = [\n        \"any-hover\",\n        \"any-pointer\",\n        \"aspect-ratio\",\n        \"color\",\n        \"color-gamut\",\n        \"color-index\",\n        \"device-aspect-ratio\",\n        \"device-height\",\n        \"device-width\",\n        \"display-mode\",\n        \"forced-colors\",\n        \"grid\",\n        \"height\",\n        \"hover\",\n        \"inverted-colors\",\n        \"monochrome\",\n        \"orientation\",\n        \"overflow-block\",\n        \"overflow-inline\",\n        \"pointer\",\n        \"prefers-color-scheme\",\n        \"prefers-contrast\",\n        \"prefers-reduced-motion\",\n        \"prefers-reduced-transparency\",\n        \"resolution\",\n        \"scan\",\n        \"scripting\",\n        \"update\",\n        \"width\",\n        \"min-width\",\n        \"max-width\",\n        \"min-height\",\n        \"max-height\"\n    ], oe = [\n        \"active\",\n        \"any-link\",\n        \"blank\",\n        \"checked\",\n        \"current\",\n        \"default\",\n        \"defined\",\n        \"dir\",\n        \"disabled\",\n        \"drop\",\n        \"empty\",\n        \"enabled\",\n        \"first\",\n        \"first-child\",\n        \"first-of-type\",\n        \"fullscreen\",\n        \"future\",\n        \"focus\",\n        \"focus-visible\",\n        \"focus-within\",\n        \"has\",\n        \"host\",\n        \"host-context\",\n        \"hover\",\n        \"indeterminate\",\n        \"in-range\",\n        \"invalid\",\n        \"is\",\n        \"lang\",\n        \"last-child\",\n        \"last-of-type\",\n        \"left\",\n        \"link\",\n        \"local-link\",\n        \"not\",\n        \"nth-child\",\n        \"nth-col\",\n        \"nth-last-child\",\n        \"nth-last-col\",\n        \"nth-last-of-type\",\n        \"nth-of-type\",\n        \"only-child\",\n        \"only-of-type\",\n        \"optional\",\n        \"out-of-range\",\n        \"past\",\n        \"placeholder-shown\",\n        \"read-only\",\n        \"read-write\",\n        \"required\",\n        \"right\",\n        \"root\",\n        \"scope\",\n        \"target\",\n        \"target-within\",\n        \"user-invalid\",\n        \"valid\",\n        \"visited\",\n        \"where\"\n    ], le = [\n        \"after\",\n        \"backdrop\",\n        \"before\",\n        \"cue\",\n        \"cue-region\",\n        \"first-letter\",\n        \"first-line\",\n        \"grammar-error\",\n        \"marker\",\n        \"part\",\n        \"placeholder\",\n        \"selection\",\n        \"slotted\",\n        \"spelling-error\"\n    ], ce = [\n        \"align-content\",\n        \"align-items\",\n        \"align-self\",\n        \"all\",\n        \"animation\",\n        \"animation-delay\",\n        \"animation-direction\",\n        \"animation-duration\",\n        \"animation-fill-mode\",\n        \"animation-iteration-count\",\n        \"animation-name\",\n        \"animation-play-state\",\n        \"animation-timing-function\",\n        \"backface-visibility\",\n        \"background\",\n        \"background-attachment\",\n        \"background-blend-mode\",\n        \"background-clip\",\n        \"background-color\",\n        \"background-image\",\n        \"background-origin\",\n        \"background-position\",\n        \"background-repeat\",\n        \"background-size\",\n        \"block-size\",\n        \"border\",\n        \"border-block\",\n        \"border-block-color\",\n        \"border-block-end\",\n        \"border-block-end-color\",\n        \"border-block-end-style\",\n        \"border-block-end-width\",\n        \"border-block-start\",\n        \"border-block-start-color\",\n        \"border-block-start-style\",\n        \"border-block-start-width\",\n        \"border-block-style\",\n        \"border-block-width\",\n        \"border-bottom\",\n        \"border-bottom-color\",\n        \"border-bottom-left-radius\",\n        \"border-bottom-right-radius\",\n        \"border-bottom-style\",\n        \"border-bottom-width\",\n        \"border-collapse\",\n        \"border-color\",\n        \"border-image\",\n        \"border-image-outset\",\n        \"border-image-repeat\",\n        \"border-image-slice\",\n        \"border-image-source\",\n        \"border-image-width\",\n        \"border-inline\",\n        \"border-inline-color\",\n        \"border-inline-end\",\n        \"border-inline-end-color\",\n        \"border-inline-end-style\",\n        \"border-inline-end-width\",\n        \"border-inline-start\",\n        \"border-inline-start-color\",\n        \"border-inline-start-style\",\n        \"border-inline-start-width\",\n        \"border-inline-style\",\n        \"border-inline-width\",\n        \"border-left\",\n        \"border-left-color\",\n        \"border-left-style\",\n        \"border-left-width\",\n        \"border-radius\",\n        \"border-right\",\n        \"border-right-color\",\n        \"border-right-style\",\n        \"border-right-width\",\n        \"border-spacing\",\n        \"border-style\",\n        \"border-top\",\n        \"border-top-color\",\n        \"border-top-left-radius\",\n        \"border-top-right-radius\",\n        \"border-top-style\",\n        \"border-top-width\",\n        \"border-width\",\n        \"bottom\",\n        \"box-decoration-break\",\n        \"box-shadow\",\n        \"box-sizing\",\n        \"break-after\",\n        \"break-before\",\n        \"break-inside\",\n        \"caption-side\",\n        \"caret-color\",\n        \"clear\",\n        \"clip\",\n        \"clip-path\",\n        \"clip-rule\",\n        \"color\",\n        \"column-count\",\n        \"column-fill\",\n        \"column-gap\",\n        \"column-rule\",\n        \"column-rule-color\",\n        \"column-rule-style\",\n        \"column-rule-width\",\n        \"column-span\",\n        \"column-width\",\n        \"columns\",\n        \"contain\",\n        \"content\",\n        \"content-visibility\",\n        \"counter-increment\",\n        \"counter-reset\",\n        \"cue\",\n        \"cue-after\",\n        \"cue-before\",\n        \"cursor\",\n        \"direction\",\n        \"display\",\n        \"empty-cells\",\n        \"filter\",\n        \"flex\",\n        \"flex-basis\",\n        \"flex-direction\",\n        \"flex-flow\",\n        \"flex-grow\",\n        \"flex-shrink\",\n        \"flex-wrap\",\n        \"float\",\n        \"flow\",\n        \"font\",\n        \"font-display\",\n        \"font-family\",\n        \"font-feature-settings\",\n        \"font-kerning\",\n        \"font-language-override\",\n        \"font-size\",\n        \"font-size-adjust\",\n        \"font-smoothing\",\n        \"font-stretch\",\n        \"font-style\",\n        \"font-synthesis\",\n        \"font-variant\",\n        \"font-variant-caps\",\n        \"font-variant-east-asian\",\n        \"font-variant-ligatures\",\n        \"font-variant-numeric\",\n        \"font-variant-position\",\n        \"font-variation-settings\",\n        \"font-weight\",\n        \"gap\",\n        \"glyph-orientation-vertical\",\n        \"grid\",\n        \"grid-area\",\n        \"grid-auto-columns\",\n        \"grid-auto-flow\",\n        \"grid-auto-rows\",\n        \"grid-column\",\n        \"grid-column-end\",\n        \"grid-column-start\",\n        \"grid-gap\",\n        \"grid-row\",\n        \"grid-row-end\",\n        \"grid-row-start\",\n        \"grid-template\",\n        \"grid-template-areas\",\n        \"grid-template-columns\",\n        \"grid-template-rows\",\n        \"hanging-punctuation\",\n        \"height\",\n        \"hyphens\",\n        \"icon\",\n        \"image-orientation\",\n        \"image-rendering\",\n        \"image-resolution\",\n        \"ime-mode\",\n        \"inline-size\",\n        \"isolation\",\n        \"justify-content\",\n        \"left\",\n        \"letter-spacing\",\n        \"line-break\",\n        \"line-height\",\n        \"list-style\",\n        \"list-style-image\",\n        \"list-style-position\",\n        \"list-style-type\",\n        \"margin\",\n        \"margin-block\",\n        \"margin-block-end\",\n        \"margin-block-start\",\n        \"margin-bottom\",\n        \"margin-inline\",\n        \"margin-inline-end\",\n        \"margin-inline-start\",\n        \"margin-left\",\n        \"margin-right\",\n        \"margin-top\",\n        \"marks\",\n        \"mask\",\n        \"mask-border\",\n        \"mask-border-mode\",\n        \"mask-border-outset\",\n        \"mask-border-repeat\",\n        \"mask-border-slice\",\n        \"mask-border-source\",\n        \"mask-border-width\",\n        \"mask-clip\",\n        \"mask-composite\",\n        \"mask-image\",\n        \"mask-mode\",\n        \"mask-origin\",\n        \"mask-position\",\n        \"mask-repeat\",\n        \"mask-size\",\n        \"mask-type\",\n        \"max-block-size\",\n        \"max-height\",\n        \"max-inline-size\",\n        \"max-width\",\n        \"min-block-size\",\n        \"min-height\",\n        \"min-inline-size\",\n        \"min-width\",\n        \"mix-blend-mode\",\n        \"nav-down\",\n        \"nav-index\",\n        \"nav-left\",\n        \"nav-right\",\n        \"nav-up\",\n        \"none\",\n        \"normal\",\n        \"object-fit\",\n        \"object-position\",\n        \"opacity\",\n        \"order\",\n        \"orphans\",\n        \"outline\",\n        \"outline-color\",\n        \"outline-offset\",\n        \"outline-style\",\n        \"outline-width\",\n        \"overflow\",\n        \"overflow-wrap\",\n        \"overflow-x\",\n        \"overflow-y\",\n        \"padding\",\n        \"padding-block\",\n        \"padding-block-end\",\n        \"padding-block-start\",\n        \"padding-bottom\",\n        \"padding-inline\",\n        \"padding-inline-end\",\n        \"padding-inline-start\",\n        \"padding-left\",\n        \"padding-right\",\n        \"padding-top\",\n        \"page-break-after\",\n        \"page-break-before\",\n        \"page-break-inside\",\n        \"pause\",\n        \"pause-after\",\n        \"pause-before\",\n        \"perspective\",\n        \"perspective-origin\",\n        \"pointer-events\",\n        \"position\",\n        \"quotes\",\n        \"resize\",\n        \"rest\",\n        \"rest-after\",\n        \"rest-before\",\n        \"right\",\n        \"row-gap\",\n        \"scroll-margin\",\n        \"scroll-margin-block\",\n        \"scroll-margin-block-end\",\n        \"scroll-margin-block-start\",\n        \"scroll-margin-bottom\",\n        \"scroll-margin-inline\",\n        \"scroll-margin-inline-end\",\n        \"scroll-margin-inline-start\",\n        \"scroll-margin-left\",\n        \"scroll-margin-right\",\n        \"scroll-margin-top\",\n        \"scroll-padding\",\n        \"scroll-padding-block\",\n        \"scroll-padding-block-end\",\n        \"scroll-padding-block-start\",\n        \"scroll-padding-bottom\",\n        \"scroll-padding-inline\",\n        \"scroll-padding-inline-end\",\n        \"scroll-padding-inline-start\",\n        \"scroll-padding-left\",\n        \"scroll-padding-right\",\n        \"scroll-padding-top\",\n        \"scroll-snap-align\",\n        \"scroll-snap-stop\",\n        \"scroll-snap-type\",\n        \"scrollbar-color\",\n        \"scrollbar-gutter\",\n        \"scrollbar-width\",\n        \"shape-image-threshold\",\n        \"shape-margin\",\n        \"shape-outside\",\n        \"speak\",\n        \"speak-as\",\n        \"src\",\n        \"tab-size\",\n        \"table-layout\",\n        \"text-align\",\n        \"text-align-all\",\n        \"text-align-last\",\n        \"text-combine-upright\",\n        \"text-decoration\",\n        \"text-decoration-color\",\n        \"text-decoration-line\",\n        \"text-decoration-style\",\n        \"text-emphasis\",\n        \"text-emphasis-color\",\n        \"text-emphasis-position\",\n        \"text-emphasis-style\",\n        \"text-indent\",\n        \"text-justify\",\n        \"text-orientation\",\n        \"text-overflow\",\n        \"text-rendering\",\n        \"text-shadow\",\n        \"text-transform\",\n        \"text-underline-position\",\n        \"top\",\n        \"transform\",\n        \"transform-box\",\n        \"transform-origin\",\n        \"transform-style\",\n        \"transition\",\n        \"transition-delay\",\n        \"transition-duration\",\n        \"transition-property\",\n        \"transition-timing-function\",\n        \"unicode-bidi\",\n        \"vertical-align\",\n        \"visibility\",\n        \"voice-balance\",\n        \"voice-duration\",\n        \"voice-family\",\n        \"voice-pitch\",\n        \"voice-range\",\n        \"voice-rate\",\n        \"voice-stress\",\n        \"voice-volume\",\n        \"white-space\",\n        \"widows\",\n        \"width\",\n        \"will-change\",\n        \"word-break\",\n        \"word-spacing\",\n        \"word-wrap\",\n        \"writing-mode\",\n        \"z-index\"\n    ].reverse(), de = oe.concat(le);\n    var ge = \"[0-9](_*[0-9])*\", ue = `\\\\.(${ge})`, be = \"[0-9a-fA-F](_*[0-9a-fA-F])*\", me = {\n        className: \"number\",\n        variants: [\n            {\n                begin: `(\\\\b(${ge})((${ue})|\\\\.)?|(${ue}))[eE][+-]?(${ge})[fFdD]?\\\\b`\n            },\n            {\n                begin: `\\\\b(${ge})((${ue})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`\n            },\n            {\n                begin: `(${ue})[fFdD]?\\\\b`\n            },\n            {\n                begin: `\\\\b(${ge})[fFdD]\\\\b`\n            },\n            {\n                begin: `\\\\b0[xX]((${be})\\\\.?|(${be})?\\\\.(${be}))[pP][+-]?(${ge})[fFdD]?\\\\b`\n            },\n            {\n                begin: \"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"\n            },\n            {\n                begin: `\\\\b0[xX](${be})[lL]?\\\\b`\n            },\n            {\n                begin: \"\\\\b0(_*[0-7])*[lL]?\\\\b\"\n            },\n            {\n                begin: \"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"\n            }\n        ],\n        relevance: 0\n    };\n    function pe(e, n, t) {\n        return -1 === t ? \"\" : e.replace(n, (a)=>pe(e, n, t - 1));\n    }\n    const _e = \"[A-Za-z$_][0-9A-Za-z$_]*\", he = [\n        \"as\",\n        \"in\",\n        \"of\",\n        \"if\",\n        \"for\",\n        \"while\",\n        \"finally\",\n        \"var\",\n        \"new\",\n        \"function\",\n        \"do\",\n        \"return\",\n        \"void\",\n        \"else\",\n        \"break\",\n        \"catch\",\n        \"instanceof\",\n        \"with\",\n        \"throw\",\n        \"case\",\n        \"default\",\n        \"try\",\n        \"switch\",\n        \"continue\",\n        \"typeof\",\n        \"delete\",\n        \"let\",\n        \"yield\",\n        \"const\",\n        \"class\",\n        \"debugger\",\n        \"async\",\n        \"await\",\n        \"static\",\n        \"import\",\n        \"from\",\n        \"export\",\n        \"extends\"\n    ], fe = [\n        \"true\",\n        \"false\",\n        \"null\",\n        \"undefined\",\n        \"NaN\",\n        \"Infinity\"\n    ], Ee = [\n        \"Object\",\n        \"Function\",\n        \"Boolean\",\n        \"Symbol\",\n        \"Math\",\n        \"Date\",\n        \"Number\",\n        \"BigInt\",\n        \"String\",\n        \"RegExp\",\n        \"Array\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"Int8Array\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"Int16Array\",\n        \"Int32Array\",\n        \"Uint16Array\",\n        \"Uint32Array\",\n        \"BigInt64Array\",\n        \"BigUint64Array\",\n        \"Set\",\n        \"Map\",\n        \"WeakSet\",\n        \"WeakMap\",\n        \"ArrayBuffer\",\n        \"SharedArrayBuffer\",\n        \"Atomics\",\n        \"DataView\",\n        \"JSON\",\n        \"Promise\",\n        \"Generator\",\n        \"GeneratorFunction\",\n        \"AsyncFunction\",\n        \"Reflect\",\n        \"Proxy\",\n        \"Intl\",\n        \"WebAssembly\"\n    ], ye = [\n        \"Error\",\n        \"EvalError\",\n        \"InternalError\",\n        \"RangeError\",\n        \"ReferenceError\",\n        \"SyntaxError\",\n        \"TypeError\",\n        \"URIError\"\n    ], Ne = [\n        \"setInterval\",\n        \"setTimeout\",\n        \"clearInterval\",\n        \"clearTimeout\",\n        \"require\",\n        \"exports\",\n        \"eval\",\n        \"isFinite\",\n        \"isNaN\",\n        \"parseFloat\",\n        \"parseInt\",\n        \"decodeURI\",\n        \"decodeURIComponent\",\n        \"encodeURI\",\n        \"encodeURIComponent\",\n        \"escape\",\n        \"unescape\"\n    ], we = [\n        \"arguments\",\n        \"this\",\n        \"super\",\n        \"console\",\n        \"window\",\n        \"document\",\n        \"localStorage\",\n        \"sessionStorage\",\n        \"module\",\n        \"global\"\n    ], ve = [].concat(Ne, Ee, ye);\n    function Oe(e) {\n        const n = e.regex, t = _e, a = {\n            begin: /<[A-Za-z0-9\\\\._:-]+/,\n            end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n            isTrulyOpeningTag: (e, n)=>{\n                const t = e[0].length + e.index, a = e.input[t];\n                if (\"<\" === a || \",\" === a) return void n.ignoreMatch();\n                let i;\n                \">\" === a && (((e, { after: n })=>{\n                    const t = \"</\" + e[0].slice(1);\n                    return -1 !== e.input.indexOf(t, n);\n                })(e, {\n                    after: t\n                }) || n.ignoreMatch());\n                const r = e.input.substring(t);\n                ((i = r.match(/^\\s*=/)) || (i = r.match(/^\\s+extends\\s+/)) && 0 === i.index) && n.ignoreMatch();\n            }\n        }, i = {\n            $pattern: _e,\n            keyword: he,\n            literal: fe,\n            built_in: ve,\n            \"variable.language\": we\n        }, r = \"[0-9](_?[0-9])*\", s = `\\\\.(${r})`, o = \"0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*\", l = {\n            className: \"number\",\n            variants: [\n                {\n                    begin: `(\\\\b(${o})((${s})|\\\\.)?|(${s}))[eE][+-]?(${r})\\\\b`\n                },\n                {\n                    begin: `\\\\b(${o})\\\\b((${s})\\\\b|\\\\.)?|(${s})\\\\b`\n                },\n                {\n                    begin: \"\\\\b(0|[1-9](_?[0-9])*)n\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\"\n                },\n                {\n                    begin: \"\\\\b0[0-7]+n?\\\\b\"\n                }\n            ],\n            relevance: 0\n        }, c = {\n            className: \"subst\",\n            begin: \"\\\\$\\\\{\",\n            end: \"\\\\}\",\n            keywords: i,\n            contains: []\n        }, d = {\n            begin: \"html`\",\n            end: \"\",\n            starts: {\n                end: \"`\",\n                returnEnd: !1,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    c\n                ],\n                subLanguage: \"xml\"\n            }\n        }, g = {\n            begin: \"css`\",\n            end: \"\",\n            starts: {\n                end: \"`\",\n                returnEnd: !1,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    c\n                ],\n                subLanguage: \"css\"\n            }\n        }, u = {\n            begin: \"gql`\",\n            end: \"\",\n            starts: {\n                end: \"`\",\n                returnEnd: !1,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    c\n                ],\n                subLanguage: \"graphql\"\n            }\n        }, b = {\n            className: \"string\",\n            begin: \"`\",\n            end: \"`\",\n            contains: [\n                e.BACKSLASH_ESCAPE,\n                c\n            ]\n        }, m = {\n            className: \"comment\",\n            variants: [\n                e.COMMENT(/\\/\\*\\*(?!\\/)/, \"\\\\*/\", {\n                    relevance: 0,\n                    contains: [\n                        {\n                            begin: \"(?=@[A-Za-z]+)\",\n                            relevance: 0,\n                            contains: [\n                                {\n                                    className: \"doctag\",\n                                    begin: \"@[A-Za-z]+\"\n                                },\n                                {\n                                    className: \"type\",\n                                    begin: \"\\\\{\",\n                                    end: \"\\\\}\",\n                                    excludeEnd: !0,\n                                    excludeBegin: !0,\n                                    relevance: 0\n                                },\n                                {\n                                    className: \"variable\",\n                                    begin: t + \"(?=\\\\s*(-)|$)\",\n                                    endsParent: !0,\n                                    relevance: 0\n                                },\n                                {\n                                    begin: /(?=[^\\n])\\s/,\n                                    relevance: 0\n                                }\n                            ]\n                        }\n                    ]\n                }),\n                e.C_BLOCK_COMMENT_MODE,\n                e.C_LINE_COMMENT_MODE\n            ]\n        }, p = [\n            e.APOS_STRING_MODE,\n            e.QUOTE_STRING_MODE,\n            d,\n            g,\n            u,\n            b,\n            {\n                match: /\\$\\d+/\n            },\n            l\n        ];\n        c.contains = p.concat({\n            begin: /\\{/,\n            end: /\\}/,\n            keywords: i,\n            contains: [\n                \"self\"\n            ].concat(p)\n        });\n        const _ = [].concat(m, c.contains), h = _.concat([\n            {\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: i,\n                contains: [\n                    \"self\"\n                ].concat(_)\n            }\n        ]), f = {\n            className: \"params\",\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: !0,\n            excludeEnd: !0,\n            keywords: i,\n            contains: h\n        }, E = {\n            variants: [\n                {\n                    match: [\n                        /class/,\n                        /\\s+/,\n                        t,\n                        /\\s+/,\n                        /extends/,\n                        /\\s+/,\n                        n.concat(t, \"(\", n.concat(/\\./, t), \")*\")\n                    ],\n                    scope: {\n                        1: \"keyword\",\n                        3: \"title.class\",\n                        5: \"keyword\",\n                        7: \"title.class.inherited\"\n                    }\n                },\n                {\n                    match: [\n                        /class/,\n                        /\\s+/,\n                        t\n                    ],\n                    scope: {\n                        1: \"keyword\",\n                        3: \"title.class\"\n                    }\n                }\n            ]\n        }, y = {\n            relevance: 0,\n            match: n.either(/\\bJSON/, /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/, /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/, /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/),\n            className: \"title.class\",\n            keywords: {\n                _: [\n                    ...Ee,\n                    ...ye\n                ]\n            }\n        }, N = {\n            variants: [\n                {\n                    match: [\n                        /function/,\n                        /\\s+/,\n                        t,\n                        /(?=\\s*\\()/\n                    ]\n                },\n                {\n                    match: [\n                        /function/,\n                        /\\s*(?=\\()/\n                    ]\n                }\n            ],\n            className: {\n                1: \"keyword\",\n                3: \"title.function\"\n            },\n            label: \"func.def\",\n            contains: [\n                f\n            ],\n            illegal: /%/\n        }, w = {\n            match: n.concat(/\\b/, (v = [\n                ...Ne,\n                \"super\",\n                \"import\"\n            ], n.concat(\"(?!\", v.join(\"|\"), \")\")), t, n.lookahead(/\\(/)),\n            className: \"title.function\",\n            relevance: 0\n        };\n        var v;\n        const O = {\n            begin: n.concat(/\\./, n.lookahead(n.concat(t, /(?![0-9A-Za-z$_(])/))),\n            end: t,\n            excludeBegin: !0,\n            keywords: \"prototype\",\n            className: \"property\",\n            relevance: 0\n        }, k = {\n            match: [\n                /get|set/,\n                /\\s+/,\n                t,\n                /(?=\\()/\n            ],\n            className: {\n                1: \"keyword\",\n                3: \"title.function\"\n            },\n            contains: [\n                {\n                    begin: /\\(\\)/\n                },\n                f\n            ]\n        }, x = \"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\" + e.UNDERSCORE_IDENT_RE + \")\\\\s*=>\", M = {\n            match: [\n                /const|var|let/,\n                /\\s+/,\n                t,\n                /\\s*/,\n                /=\\s*/,\n                /(async\\s*)?/,\n                n.lookahead(x)\n            ],\n            keywords: \"async\",\n            className: {\n                1: \"keyword\",\n                3: \"title.function\"\n            },\n            contains: [\n                f\n            ]\n        };\n        return {\n            name: \"JavaScript\",\n            aliases: [\n                \"js\",\n                \"jsx\",\n                \"mjs\",\n                \"cjs\"\n            ],\n            keywords: i,\n            exports: {\n                PARAMS_CONTAINS: h,\n                CLASS_REFERENCE: y\n            },\n            illegal: /#(?![$_A-z])/,\n            contains: [\n                e.SHEBANG({\n                    label: \"shebang\",\n                    binary: \"node\",\n                    relevance: 5\n                }),\n                {\n                    label: \"use_strict\",\n                    className: \"meta\",\n                    relevance: 10,\n                    begin: /^\\s*['\"]use (strict|asm)['\"]/\n                },\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE,\n                d,\n                g,\n                u,\n                b,\n                m,\n                {\n                    match: /\\$\\d+/\n                },\n                l,\n                y,\n                {\n                    className: \"attr\",\n                    begin: t + n.lookahead(\":\"),\n                    relevance: 0\n                },\n                M,\n                {\n                    begin: \"(\" + e.RE_STARTERS_RE + \"|\\\\b(case|return|throw)\\\\b)\\\\s*\",\n                    keywords: \"return throw case\",\n                    relevance: 0,\n                    contains: [\n                        m,\n                        e.REGEXP_MODE,\n                        {\n                            className: \"function\",\n                            begin: x,\n                            returnBegin: !0,\n                            end: \"\\\\s*=>\",\n                            contains: [\n                                {\n                                    className: \"params\",\n                                    variants: [\n                                        {\n                                            begin: e.UNDERSCORE_IDENT_RE,\n                                            relevance: 0\n                                        },\n                                        {\n                                            className: null,\n                                            begin: /\\(\\s*\\)/,\n                                            skip: !0\n                                        },\n                                        {\n                                            begin: /\\(/,\n                                            end: /\\)/,\n                                            excludeBegin: !0,\n                                            excludeEnd: !0,\n                                            keywords: i,\n                                            contains: h\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            begin: /,/,\n                            relevance: 0\n                        },\n                        {\n                            match: /\\s+/,\n                            relevance: 0\n                        },\n                        {\n                            variants: [\n                                {\n                                    begin: \"<>\",\n                                    end: \"</>\"\n                                },\n                                {\n                                    match: /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/\n                                },\n                                {\n                                    begin: a.begin,\n                                    \"on:begin\": a.isTrulyOpeningTag,\n                                    end: a.end\n                                }\n                            ],\n                            subLanguage: \"xml\",\n                            contains: [\n                                {\n                                    begin: a.begin,\n                                    end: a.end,\n                                    skip: !0,\n                                    contains: [\n                                        \"self\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                },\n                N,\n                {\n                    beginKeywords: \"while if switch catch for\"\n                },\n                {\n                    begin: \"\\\\b(?!function)\" + e.UNDERSCORE_IDENT_RE + \"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",\n                    returnBegin: !0,\n                    label: \"func.def\",\n                    contains: [\n                        f,\n                        e.inherit(e.TITLE_MODE, {\n                            begin: t,\n                            className: \"title.function\"\n                        })\n                    ]\n                },\n                {\n                    match: /\\.\\.\\./,\n                    relevance: 0\n                },\n                O,\n                {\n                    match: \"\\\\$\" + t,\n                    relevance: 0\n                },\n                {\n                    match: [\n                        /\\bconstructor(?=\\s*\\()/\n                    ],\n                    className: {\n                        1: \"title.function\"\n                    },\n                    contains: [\n                        f\n                    ]\n                },\n                w,\n                {\n                    relevance: 0,\n                    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n                    className: \"variable.constant\"\n                },\n                E,\n                k,\n                {\n                    match: /\\$[(.]/\n                }\n            ]\n        };\n    }\n    const ke = (e)=>b(/\\b/, e, /\\w$/.test(e) ? /\\b/ : /\\B/), xe = [\n        \"Protocol\",\n        \"Type\"\n    ].map(ke), Me = [\n        \"init\",\n        \"self\"\n    ].map(ke), Se = [\n        \"Any\",\n        \"Self\"\n    ], Ae = [\n        \"actor\",\n        \"any\",\n        \"associatedtype\",\n        \"async\",\n        \"await\",\n        /as\\?/,\n        /as!/,\n        \"as\",\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"class\",\n        \"continue\",\n        \"convenience\",\n        \"default\",\n        \"defer\",\n        \"deinit\",\n        \"didSet\",\n        \"distributed\",\n        \"do\",\n        \"dynamic\",\n        \"else\",\n        \"enum\",\n        \"extension\",\n        \"fallthrough\",\n        /fileprivate\\(set\\)/,\n        \"fileprivate\",\n        \"final\",\n        \"for\",\n        \"func\",\n        \"get\",\n        \"guard\",\n        \"if\",\n        \"import\",\n        \"indirect\",\n        \"infix\",\n        /init\\?/,\n        /init!/,\n        \"inout\",\n        /internal\\(set\\)/,\n        \"internal\",\n        \"in\",\n        \"is\",\n        \"isolated\",\n        \"nonisolated\",\n        \"lazy\",\n        \"let\",\n        \"mutating\",\n        \"nonmutating\",\n        /open\\(set\\)/,\n        \"open\",\n        \"operator\",\n        \"optional\",\n        \"override\",\n        \"postfix\",\n        \"precedencegroup\",\n        \"prefix\",\n        /private\\(set\\)/,\n        \"private\",\n        \"protocol\",\n        /public\\(set\\)/,\n        \"public\",\n        \"repeat\",\n        \"required\",\n        \"rethrows\",\n        \"return\",\n        \"set\",\n        \"some\",\n        \"static\",\n        \"struct\",\n        \"subscript\",\n        \"super\",\n        \"switch\",\n        \"throws\",\n        \"throw\",\n        /try\\?/,\n        /try!/,\n        \"try\",\n        \"typealias\",\n        /unowned\\(safe\\)/,\n        /unowned\\(unsafe\\)/,\n        \"unowned\",\n        \"var\",\n        \"weak\",\n        \"where\",\n        \"while\",\n        \"willSet\"\n    ], Ce = [\n        \"false\",\n        \"nil\",\n        \"true\"\n    ], Te = [\n        \"assignment\",\n        \"associativity\",\n        \"higherThan\",\n        \"left\",\n        \"lowerThan\",\n        \"none\",\n        \"right\"\n    ], Re = [\n        \"#colorLiteral\",\n        \"#column\",\n        \"#dsohandle\",\n        \"#else\",\n        \"#elseif\",\n        \"#endif\",\n        \"#error\",\n        \"#file\",\n        \"#fileID\",\n        \"#fileLiteral\",\n        \"#filePath\",\n        \"#function\",\n        \"#if\",\n        \"#imageLiteral\",\n        \"#keyPath\",\n        \"#line\",\n        \"#selector\",\n        \"#sourceLocation\",\n        \"#warn_unqualified_access\",\n        \"#warning\"\n    ], De = [\n        \"abs\",\n        \"all\",\n        \"any\",\n        \"assert\",\n        \"assertionFailure\",\n        \"debugPrint\",\n        \"dump\",\n        \"fatalError\",\n        \"getVaList\",\n        \"isKnownUniquelyReferenced\",\n        \"max\",\n        \"min\",\n        \"numericCast\",\n        \"pointwiseMax\",\n        \"pointwiseMin\",\n        \"precondition\",\n        \"preconditionFailure\",\n        \"print\",\n        \"readLine\",\n        \"repeatElement\",\n        \"sequence\",\n        \"stride\",\n        \"swap\",\n        \"swift_unboxFromSwiftValueWithType\",\n        \"transcode\",\n        \"type\",\n        \"unsafeBitCast\",\n        \"unsafeDowncast\",\n        \"withExtendedLifetime\",\n        \"withUnsafeMutablePointer\",\n        \"withUnsafePointer\",\n        \"withVaList\",\n        \"withoutActuallyEscaping\",\n        \"zip\"\n    ], Ie = m(/[/=\\-+!*%<>&|^~?]/, /[\\u00A1-\\u00A7]/, /[\\u00A9\\u00AB]/, /[\\u00AC\\u00AE]/, /[\\u00B0\\u00B1]/, /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/, /[\\u2016-\\u2017]/, /[\\u2020-\\u2027]/, /[\\u2030-\\u203E]/, /[\\u2041-\\u2053]/, /[\\u2055-\\u205E]/, /[\\u2190-\\u23FF]/, /[\\u2500-\\u2775]/, /[\\u2794-\\u2BFF]/, /[\\u2E00-\\u2E7F]/, /[\\u3001-\\u3003]/, /[\\u3008-\\u3020]/, /[\\u3030]/), Le = m(Ie, /[\\u0300-\\u036F]/, /[\\u1DC0-\\u1DFF]/, /[\\u20D0-\\u20FF]/, /[\\uFE00-\\uFE0F]/, /[\\uFE20-\\uFE2F]/), Be = b(Ie, Le, \"*\"), $e = m(/[a-zA-Z_]/, /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/, /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/, /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/, /[\\u1E00-\\u1FFF]/, /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/, /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/, /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/, /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/, /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/, /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/), ze = m($e, /\\d/, /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/), Fe = b($e, ze, \"*\"), Ue = b(/[A-Z]/, ze, \"*\"), je = [\n        \"autoclosure\",\n        b(/convention\\(/, m(\"swift\", \"block\", \"c\"), /\\)/),\n        \"discardableResult\",\n        \"dynamicCallable\",\n        \"dynamicMemberLookup\",\n        \"escaping\",\n        \"frozen\",\n        \"GKInspectable\",\n        \"IBAction\",\n        \"IBDesignable\",\n        \"IBInspectable\",\n        \"IBOutlet\",\n        \"IBSegueAction\",\n        \"inlinable\",\n        \"main\",\n        \"nonobjc\",\n        \"NSApplicationMain\",\n        \"NSCopying\",\n        \"NSManaged\",\n        b(/objc\\(/, Fe, /\\)/),\n        \"objc\",\n        \"objcMembers\",\n        \"propertyWrapper\",\n        \"requires_stored_property_inits\",\n        \"resultBuilder\",\n        \"testable\",\n        \"UIApplicationMain\",\n        \"unknown\",\n        \"usableFromInline\"\n    ], Pe = [\n        \"iOS\",\n        \"iOSApplicationExtension\",\n        \"macOS\",\n        \"macOSApplicationExtension\",\n        \"macCatalyst\",\n        \"macCatalystApplicationExtension\",\n        \"watchOS\",\n        \"watchOSApplicationExtension\",\n        \"tvOS\",\n        \"tvOSApplicationExtension\",\n        \"swift\"\n    ];\n    var Ke = Object.freeze({\n        __proto__: null,\n        grmr_bash: (e)=>{\n            const n = e.regex, t = {}, a = {\n                begin: /\\$\\{/,\n                end: /\\}/,\n                contains: [\n                    \"self\",\n                    {\n                        begin: /:-/,\n                        contains: [\n                            t\n                        ]\n                    }\n                ]\n            };\n            Object.assign(t, {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: n.concat(/\\$[\\w\\d#@][\\w\\d_]*/, \"(?![\\\\w\\\\d])(?![$])\")\n                    },\n                    a\n                ]\n            });\n            const i = {\n                className: \"subst\",\n                begin: /\\$\\(/,\n                end: /\\)/,\n                contains: [\n                    e.BACKSLASH_ESCAPE\n                ]\n            }, r = {\n                begin: /<<-?\\s*(?=\\w+)/,\n                starts: {\n                    contains: [\n                        e.END_SAME_AS_BEGIN({\n                            begin: /(\\w+)/,\n                            end: /(\\w+)/,\n                            className: \"string\"\n                        })\n                    ]\n                }\n            }, s = {\n                className: \"string\",\n                begin: /\"/,\n                end: /\"/,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    t,\n                    i\n                ]\n            };\n            i.contains.push(s);\n            const o = {\n                begin: /\\$?\\(\\(/,\n                end: /\\)\\)/,\n                contains: [\n                    {\n                        begin: /\\d+#[0-9a-f]+/,\n                        className: \"number\"\n                    },\n                    e.NUMBER_MODE,\n                    t\n                ]\n            }, l = e.SHEBANG({\n                binary: \"(fish|bash|zsh|sh|csh|ksh|tcsh|dash|scsh)\",\n                relevance: 10\n            }), c = {\n                className: \"function\",\n                begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n                returnBegin: !0,\n                contains: [\n                    e.inherit(e.TITLE_MODE, {\n                        begin: /\\w[\\w\\d_]*/\n                    })\n                ],\n                relevance: 0\n            };\n            return {\n                name: \"Bash\",\n                aliases: [\n                    \"sh\"\n                ],\n                keywords: {\n                    $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n                    keyword: [\n                        \"if\",\n                        \"then\",\n                        \"else\",\n                        \"elif\",\n                        \"fi\",\n                        \"for\",\n                        \"while\",\n                        \"until\",\n                        \"in\",\n                        \"do\",\n                        \"done\",\n                        \"case\",\n                        \"esac\",\n                        \"function\",\n                        \"select\"\n                    ],\n                    literal: [\n                        \"true\",\n                        \"false\"\n                    ],\n                    built_in: [\n                        \"break\",\n                        \"cd\",\n                        \"continue\",\n                        \"eval\",\n                        \"exec\",\n                        \"exit\",\n                        \"export\",\n                        \"getopts\",\n                        \"hash\",\n                        \"pwd\",\n                        \"readonly\",\n                        \"return\",\n                        \"shift\",\n                        \"test\",\n                        \"times\",\n                        \"trap\",\n                        \"umask\",\n                        \"unset\",\n                        \"alias\",\n                        \"bind\",\n                        \"builtin\",\n                        \"caller\",\n                        \"command\",\n                        \"declare\",\n                        \"echo\",\n                        \"enable\",\n                        \"help\",\n                        \"let\",\n                        \"local\",\n                        \"logout\",\n                        \"mapfile\",\n                        \"printf\",\n                        \"read\",\n                        \"readarray\",\n                        \"source\",\n                        \"type\",\n                        \"typeset\",\n                        \"ulimit\",\n                        \"unalias\",\n                        \"set\",\n                        \"shopt\",\n                        \"autoload\",\n                        \"bg\",\n                        \"bindkey\",\n                        \"bye\",\n                        \"cap\",\n                        \"chdir\",\n                        \"clone\",\n                        \"comparguments\",\n                        \"compcall\",\n                        \"compctl\",\n                        \"compdescribe\",\n                        \"compfiles\",\n                        \"compgroups\",\n                        \"compquote\",\n                        \"comptags\",\n                        \"comptry\",\n                        \"compvalues\",\n                        \"dirs\",\n                        \"disable\",\n                        \"disown\",\n                        \"echotc\",\n                        \"echoti\",\n                        \"emulate\",\n                        \"fc\",\n                        \"fg\",\n                        \"float\",\n                        \"functions\",\n                        \"getcap\",\n                        \"getln\",\n                        \"history\",\n                        \"integer\",\n                        \"jobs\",\n                        \"kill\",\n                        \"limit\",\n                        \"log\",\n                        \"noglob\",\n                        \"popd\",\n                        \"print\",\n                        \"pushd\",\n                        \"pushln\",\n                        \"rehash\",\n                        \"sched\",\n                        \"setcap\",\n                        \"setopt\",\n                        \"stat\",\n                        \"suspend\",\n                        \"ttyctl\",\n                        \"unfunction\",\n                        \"unhash\",\n                        \"unlimit\",\n                        \"unsetopt\",\n                        \"vared\",\n                        \"wait\",\n                        \"whence\",\n                        \"where\",\n                        \"which\",\n                        \"zcompile\",\n                        \"zformat\",\n                        \"zftp\",\n                        \"zle\",\n                        \"zmodload\",\n                        \"zparseopts\",\n                        \"zprof\",\n                        \"zpty\",\n                        \"zregexparse\",\n                        \"zsocket\",\n                        \"zstyle\",\n                        \"ztcp\",\n                        \"chcon\",\n                        \"chgrp\",\n                        \"chown\",\n                        \"chmod\",\n                        \"cp\",\n                        \"dd\",\n                        \"df\",\n                        \"dir\",\n                        \"dircolors\",\n                        \"ln\",\n                        \"ls\",\n                        \"mkdir\",\n                        \"mkfifo\",\n                        \"mknod\",\n                        \"mktemp\",\n                        \"mv\",\n                        \"realpath\",\n                        \"rm\",\n                        \"rmdir\",\n                        \"shred\",\n                        \"sync\",\n                        \"touch\",\n                        \"truncate\",\n                        \"vdir\",\n                        \"b2sum\",\n                        \"base32\",\n                        \"base64\",\n                        \"cat\",\n                        \"cksum\",\n                        \"comm\",\n                        \"csplit\",\n                        \"cut\",\n                        \"expand\",\n                        \"fmt\",\n                        \"fold\",\n                        \"head\",\n                        \"join\",\n                        \"md5sum\",\n                        \"nl\",\n                        \"numfmt\",\n                        \"od\",\n                        \"paste\",\n                        \"ptx\",\n                        \"pr\",\n                        \"sha1sum\",\n                        \"sha224sum\",\n                        \"sha256sum\",\n                        \"sha384sum\",\n                        \"sha512sum\",\n                        \"shuf\",\n                        \"sort\",\n                        \"split\",\n                        \"sum\",\n                        \"tac\",\n                        \"tail\",\n                        \"tr\",\n                        \"tsort\",\n                        \"unexpand\",\n                        \"uniq\",\n                        \"wc\",\n                        \"arch\",\n                        \"basename\",\n                        \"chroot\",\n                        \"date\",\n                        \"dirname\",\n                        \"du\",\n                        \"echo\",\n                        \"env\",\n                        \"expr\",\n                        \"factor\",\n                        \"groups\",\n                        \"hostid\",\n                        \"id\",\n                        \"link\",\n                        \"logname\",\n                        \"nice\",\n                        \"nohup\",\n                        \"nproc\",\n                        \"pathchk\",\n                        \"pinky\",\n                        \"printenv\",\n                        \"printf\",\n                        \"pwd\",\n                        \"readlink\",\n                        \"runcon\",\n                        \"seq\",\n                        \"sleep\",\n                        \"stat\",\n                        \"stdbuf\",\n                        \"stty\",\n                        \"tee\",\n                        \"test\",\n                        \"timeout\",\n                        \"tty\",\n                        \"uname\",\n                        \"unlink\",\n                        \"uptime\",\n                        \"users\",\n                        \"who\",\n                        \"whoami\",\n                        \"yes\"\n                    ]\n                },\n                contains: [\n                    l,\n                    e.SHEBANG(),\n                    c,\n                    o,\n                    e.HASH_COMMENT_MODE,\n                    r,\n                    {\n                        match: /(\\/[a-z._-]+)+/\n                    },\n                    s,\n                    {\n                        className: \"\",\n                        begin: /\\\\\"/\n                    },\n                    {\n                        className: \"string\",\n                        begin: /'/,\n                        end: /'/\n                    },\n                    t\n                ]\n            };\n        },\n        grmr_c: (e)=>{\n            const n = e.regex, t = e.COMMENT(\"//\", \"$\", {\n                contains: [\n                    {\n                        begin: /\\\\\\n/\n                    }\n                ]\n            }), a = \"decltype\\\\(auto\\\\)\", i = \"[a-zA-Z_]\\\\w*::\", r = \"(\" + a + \"|\" + n.optional(i) + \"[a-zA-Z_]\\\\w*\" + n.optional(\"<[^<>]+>\") + \")\", s = {\n                className: \"type\",\n                variants: [\n                    {\n                        begin: \"\\\\b[a-z\\\\d_]*_t\\\\b\"\n                    },\n                    {\n                        match: /\\batomic_[a-z]{3,6}\\b/\n                    }\n                ]\n            }, o = {\n                className: \"string\",\n                variants: [\n                    {\n                        begin: '(u8?|U|L)?\"',\n                        end: '\"',\n                        illegal: \"\\\\n\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: \"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\n                        end: \"'\",\n                        illegal: \".\"\n                    },\n                    e.END_SAME_AS_BEGIN({\n                        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n                        end: /\\)([^()\\\\ ]{0,16})\"/\n                    })\n                ]\n            }, l = {\n                className: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b(0b[01']+)\"\n                    },\n                    {\n                        begin: \"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n                    },\n                    {\n                        begin: \"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n                    }\n                ],\n                relevance: 0\n            }, c = {\n                className: \"meta\",\n                begin: /#\\s*[a-z]+\\b/,\n                end: /$/,\n                keywords: {\n                    keyword: \"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n                },\n                contains: [\n                    {\n                        begin: /\\\\\\n/,\n                        relevance: 0\n                    },\n                    e.inherit(o, {\n                        className: \"string\"\n                    }),\n                    {\n                        className: \"string\",\n                        begin: /<.*?>/\n                    },\n                    t,\n                    e.C_BLOCK_COMMENT_MODE\n                ]\n            }, d = {\n                className: \"title\",\n                begin: n.optional(i) + e.IDENT_RE,\n                relevance: 0\n            }, g = n.optional(i) + e.IDENT_RE + \"\\\\s*\\\\(\", u = {\n                keyword: [\n                    \"asm\",\n                    \"auto\",\n                    \"break\",\n                    \"case\",\n                    \"continue\",\n                    \"default\",\n                    \"do\",\n                    \"else\",\n                    \"enum\",\n                    \"extern\",\n                    \"for\",\n                    \"fortran\",\n                    \"goto\",\n                    \"if\",\n                    \"inline\",\n                    \"register\",\n                    \"restrict\",\n                    \"return\",\n                    \"sizeof\",\n                    \"struct\",\n                    \"switch\",\n                    \"typedef\",\n                    \"union\",\n                    \"volatile\",\n                    \"while\",\n                    \"_Alignas\",\n                    \"_Alignof\",\n                    \"_Atomic\",\n                    \"_Generic\",\n                    \"_Noreturn\",\n                    \"_Static_assert\",\n                    \"_Thread_local\",\n                    \"alignas\",\n                    \"alignof\",\n                    \"noreturn\",\n                    \"static_assert\",\n                    \"thread_local\",\n                    \"_Pragma\"\n                ],\n                type: [\n                    \"float\",\n                    \"double\",\n                    \"signed\",\n                    \"unsigned\",\n                    \"int\",\n                    \"short\",\n                    \"long\",\n                    \"char\",\n                    \"void\",\n                    \"_Bool\",\n                    \"_Complex\",\n                    \"_Imaginary\",\n                    \"_Decimal32\",\n                    \"_Decimal64\",\n                    \"_Decimal128\",\n                    \"const\",\n                    \"static\",\n                    \"complex\",\n                    \"bool\",\n                    \"imaginary\"\n                ],\n                literal: \"true false NULL\",\n                built_in: \"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr\"\n            }, b = [\n                c,\n                s,\n                t,\n                e.C_BLOCK_COMMENT_MODE,\n                l,\n                o\n            ], m = {\n                variants: [\n                    {\n                        begin: /=/,\n                        end: /;/\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/\n                    },\n                    {\n                        beginKeywords: \"new throw return else\",\n                        end: /;/\n                    }\n                ],\n                keywords: u,\n                contains: b.concat([\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: u,\n                        contains: b.concat([\n                            \"self\"\n                        ]),\n                        relevance: 0\n                    }\n                ]),\n                relevance: 0\n            }, p = {\n                begin: \"(\" + r + \"[\\\\*&\\\\s]+)+\" + g,\n                returnBegin: !0,\n                end: /[{;=]/,\n                excludeEnd: !0,\n                keywords: u,\n                illegal: /[^\\w\\s\\*&:<>.]/,\n                contains: [\n                    {\n                        begin: a,\n                        keywords: u,\n                        relevance: 0\n                    },\n                    {\n                        begin: g,\n                        returnBegin: !0,\n                        contains: [\n                            e.inherit(d, {\n                                className: \"title.function\"\n                            })\n                        ],\n                        relevance: 0\n                    },\n                    {\n                        relevance: 0,\n                        match: /,/\n                    },\n                    {\n                        className: \"params\",\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: u,\n                        relevance: 0,\n                        contains: [\n                            t,\n                            e.C_BLOCK_COMMENT_MODE,\n                            o,\n                            l,\n                            s,\n                            {\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: u,\n                                relevance: 0,\n                                contains: [\n                                    \"self\",\n                                    t,\n                                    e.C_BLOCK_COMMENT_MODE,\n                                    o,\n                                    l,\n                                    s\n                                ]\n                            }\n                        ]\n                    },\n                    s,\n                    t,\n                    e.C_BLOCK_COMMENT_MODE,\n                    c\n                ]\n            };\n            return {\n                name: \"C\",\n                aliases: [\n                    \"h\"\n                ],\n                keywords: u,\n                disableAutodetect: !0,\n                illegal: \"</\",\n                contains: [].concat(m, p, b, [\n                    c,\n                    {\n                        begin: e.IDENT_RE + \"::\",\n                        keywords: u\n                    },\n                    {\n                        className: \"class\",\n                        beginKeywords: \"enum class struct union\",\n                        end: /[{;:<>=]/,\n                        contains: [\n                            {\n                                beginKeywords: \"final class struct\"\n                            },\n                            e.TITLE_MODE\n                        ]\n                    }\n                ]),\n                exports: {\n                    preprocessor: c,\n                    strings: o,\n                    keywords: u\n                }\n            };\n        },\n        grmr_cpp: (e)=>{\n            const n = e.regex, t = e.COMMENT(\"//\", \"$\", {\n                contains: [\n                    {\n                        begin: /\\\\\\n/\n                    }\n                ]\n            }), a = \"decltype\\\\(auto\\\\)\", i = \"[a-zA-Z_]\\\\w*::\", r = \"(?!struct)(\" + a + \"|\" + n.optional(i) + \"[a-zA-Z_]\\\\w*\" + n.optional(\"<[^<>]+>\") + \")\", s = {\n                className: \"type\",\n                begin: \"\\\\b[a-z\\\\d_]*_t\\\\b\"\n            }, o = {\n                className: \"string\",\n                variants: [\n                    {\n                        begin: '(u8?|U|L)?\"',\n                        end: '\"',\n                        illegal: \"\\\\n\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: \"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\n                        end: \"'\",\n                        illegal: \".\"\n                    },\n                    e.END_SAME_AS_BEGIN({\n                        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n                        end: /\\)([^()\\\\ ]{0,16})\"/\n                    })\n                ]\n            }, l = {\n                className: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b(0b[01']+)\"\n                    },\n                    {\n                        begin: \"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n                    },\n                    {\n                        begin: \"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n                    }\n                ],\n                relevance: 0\n            }, c = {\n                className: \"meta\",\n                begin: /#\\s*[a-z]+\\b/,\n                end: /$/,\n                keywords: {\n                    keyword: \"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n                },\n                contains: [\n                    {\n                        begin: /\\\\\\n/,\n                        relevance: 0\n                    },\n                    e.inherit(o, {\n                        className: \"string\"\n                    }),\n                    {\n                        className: \"string\",\n                        begin: /<.*?>/\n                    },\n                    t,\n                    e.C_BLOCK_COMMENT_MODE\n                ]\n            }, d = {\n                className: \"title\",\n                begin: n.optional(i) + e.IDENT_RE,\n                relevance: 0\n            }, g = n.optional(i) + e.IDENT_RE + \"\\\\s*\\\\(\", u = {\n                type: [\n                    \"bool\",\n                    \"char\",\n                    \"char16_t\",\n                    \"char32_t\",\n                    \"char8_t\",\n                    \"double\",\n                    \"float\",\n                    \"int\",\n                    \"long\",\n                    \"short\",\n                    \"void\",\n                    \"wchar_t\",\n                    \"unsigned\",\n                    \"signed\",\n                    \"const\",\n                    \"static\"\n                ],\n                keyword: [\n                    \"alignas\",\n                    \"alignof\",\n                    \"and\",\n                    \"and_eq\",\n                    \"asm\",\n                    \"atomic_cancel\",\n                    \"atomic_commit\",\n                    \"atomic_noexcept\",\n                    \"auto\",\n                    \"bitand\",\n                    \"bitor\",\n                    \"break\",\n                    \"case\",\n                    \"catch\",\n                    \"class\",\n                    \"co_await\",\n                    \"co_return\",\n                    \"co_yield\",\n                    \"compl\",\n                    \"concept\",\n                    \"const_cast|10\",\n                    \"consteval\",\n                    \"constexpr\",\n                    \"constinit\",\n                    \"continue\",\n                    \"decltype\",\n                    \"default\",\n                    \"delete\",\n                    \"do\",\n                    \"dynamic_cast|10\",\n                    \"else\",\n                    \"enum\",\n                    \"explicit\",\n                    \"export\",\n                    \"extern\",\n                    \"false\",\n                    \"final\",\n                    \"for\",\n                    \"friend\",\n                    \"goto\",\n                    \"if\",\n                    \"import\",\n                    \"inline\",\n                    \"module\",\n                    \"mutable\",\n                    \"namespace\",\n                    \"new\",\n                    \"noexcept\",\n                    \"not\",\n                    \"not_eq\",\n                    \"nullptr\",\n                    \"operator\",\n                    \"or\",\n                    \"or_eq\",\n                    \"override\",\n                    \"private\",\n                    \"protected\",\n                    \"public\",\n                    \"reflexpr\",\n                    \"register\",\n                    \"reinterpret_cast|10\",\n                    \"requires\",\n                    \"return\",\n                    \"sizeof\",\n                    \"static_assert\",\n                    \"static_cast|10\",\n                    \"struct\",\n                    \"switch\",\n                    \"synchronized\",\n                    \"template\",\n                    \"this\",\n                    \"thread_local\",\n                    \"throw\",\n                    \"transaction_safe\",\n                    \"transaction_safe_dynamic\",\n                    \"true\",\n                    \"try\",\n                    \"typedef\",\n                    \"typeid\",\n                    \"typename\",\n                    \"union\",\n                    \"using\",\n                    \"virtual\",\n                    \"volatile\",\n                    \"while\",\n                    \"xor\",\n                    \"xor_eq\"\n                ],\n                literal: [\n                    \"NULL\",\n                    \"false\",\n                    \"nullopt\",\n                    \"nullptr\",\n                    \"true\"\n                ],\n                built_in: [\n                    \"_Pragma\"\n                ],\n                _type_hints: [\n                    \"any\",\n                    \"auto_ptr\",\n                    \"barrier\",\n                    \"binary_semaphore\",\n                    \"bitset\",\n                    \"complex\",\n                    \"condition_variable\",\n                    \"condition_variable_any\",\n                    \"counting_semaphore\",\n                    \"deque\",\n                    \"false_type\",\n                    \"future\",\n                    \"imaginary\",\n                    \"initializer_list\",\n                    \"istringstream\",\n                    \"jthread\",\n                    \"latch\",\n                    \"lock_guard\",\n                    \"multimap\",\n                    \"multiset\",\n                    \"mutex\",\n                    \"optional\",\n                    \"ostringstream\",\n                    \"packaged_task\",\n                    \"pair\",\n                    \"promise\",\n                    \"priority_queue\",\n                    \"queue\",\n                    \"recursive_mutex\",\n                    \"recursive_timed_mutex\",\n                    \"scoped_lock\",\n                    \"set\",\n                    \"shared_future\",\n                    \"shared_lock\",\n                    \"shared_mutex\",\n                    \"shared_timed_mutex\",\n                    \"shared_ptr\",\n                    \"stack\",\n                    \"string_view\",\n                    \"stringstream\",\n                    \"timed_mutex\",\n                    \"thread\",\n                    \"true_type\",\n                    \"tuple\",\n                    \"unique_lock\",\n                    \"unique_ptr\",\n                    \"unordered_map\",\n                    \"unordered_multimap\",\n                    \"unordered_multiset\",\n                    \"unordered_set\",\n                    \"variant\",\n                    \"vector\",\n                    \"weak_ptr\",\n                    \"wstring\",\n                    \"wstring_view\"\n                ]\n            }, b = {\n                className: \"function.dispatch\",\n                relevance: 0,\n                keywords: {\n                    _hint: [\n                        \"abort\",\n                        \"abs\",\n                        \"acos\",\n                        \"apply\",\n                        \"as_const\",\n                        \"asin\",\n                        \"atan\",\n                        \"atan2\",\n                        \"calloc\",\n                        \"ceil\",\n                        \"cerr\",\n                        \"cin\",\n                        \"clog\",\n                        \"cos\",\n                        \"cosh\",\n                        \"cout\",\n                        \"declval\",\n                        \"endl\",\n                        \"exchange\",\n                        \"exit\",\n                        \"exp\",\n                        \"fabs\",\n                        \"floor\",\n                        \"fmod\",\n                        \"forward\",\n                        \"fprintf\",\n                        \"fputs\",\n                        \"free\",\n                        \"frexp\",\n                        \"fscanf\",\n                        \"future\",\n                        \"invoke\",\n                        \"isalnum\",\n                        \"isalpha\",\n                        \"iscntrl\",\n                        \"isdigit\",\n                        \"isgraph\",\n                        \"islower\",\n                        \"isprint\",\n                        \"ispunct\",\n                        \"isspace\",\n                        \"isupper\",\n                        \"isxdigit\",\n                        \"labs\",\n                        \"launder\",\n                        \"ldexp\",\n                        \"log\",\n                        \"log10\",\n                        \"make_pair\",\n                        \"make_shared\",\n                        \"make_shared_for_overwrite\",\n                        \"make_tuple\",\n                        \"make_unique\",\n                        \"malloc\",\n                        \"memchr\",\n                        \"memcmp\",\n                        \"memcpy\",\n                        \"memset\",\n                        \"modf\",\n                        \"move\",\n                        \"pow\",\n                        \"printf\",\n                        \"putchar\",\n                        \"puts\",\n                        \"realloc\",\n                        \"scanf\",\n                        \"sin\",\n                        \"sinh\",\n                        \"snprintf\",\n                        \"sprintf\",\n                        \"sqrt\",\n                        \"sscanf\",\n                        \"std\",\n                        \"stderr\",\n                        \"stdin\",\n                        \"stdout\",\n                        \"strcat\",\n                        \"strchr\",\n                        \"strcmp\",\n                        \"strcpy\",\n                        \"strcspn\",\n                        \"strlen\",\n                        \"strncat\",\n                        \"strncmp\",\n                        \"strncpy\",\n                        \"strpbrk\",\n                        \"strrchr\",\n                        \"strspn\",\n                        \"strstr\",\n                        \"swap\",\n                        \"tan\",\n                        \"tanh\",\n                        \"terminate\",\n                        \"to_underlying\",\n                        \"tolower\",\n                        \"toupper\",\n                        \"vfprintf\",\n                        \"visit\",\n                        \"vprintf\",\n                        \"vsprintf\"\n                    ]\n                },\n                begin: n.concat(/\\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, e.IDENT_RE, n.lookahead(/(<[^<>]+>|)\\s*\\(/))\n            }, m = [\n                b,\n                c,\n                s,\n                t,\n                e.C_BLOCK_COMMENT_MODE,\n                l,\n                o\n            ], p = {\n                variants: [\n                    {\n                        begin: /=/,\n                        end: /;/\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/\n                    },\n                    {\n                        beginKeywords: \"new throw return else\",\n                        end: /;/\n                    }\n                ],\n                keywords: u,\n                contains: m.concat([\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: u,\n                        contains: m.concat([\n                            \"self\"\n                        ]),\n                        relevance: 0\n                    }\n                ]),\n                relevance: 0\n            }, _ = {\n                className: \"function\",\n                begin: \"(\" + r + \"[\\\\*&\\\\s]+)+\" + g,\n                returnBegin: !0,\n                end: /[{;=]/,\n                excludeEnd: !0,\n                keywords: u,\n                illegal: /[^\\w\\s\\*&:<>.]/,\n                contains: [\n                    {\n                        begin: a,\n                        keywords: u,\n                        relevance: 0\n                    },\n                    {\n                        begin: g,\n                        returnBegin: !0,\n                        contains: [\n                            d\n                        ],\n                        relevance: 0\n                    },\n                    {\n                        begin: /::/,\n                        relevance: 0\n                    },\n                    {\n                        begin: /:/,\n                        endsWithParent: !0,\n                        contains: [\n                            o,\n                            l\n                        ]\n                    },\n                    {\n                        relevance: 0,\n                        match: /,/\n                    },\n                    {\n                        className: \"params\",\n                        begin: /\\(/,\n                        end: /\\)/,\n                        keywords: u,\n                        relevance: 0,\n                        contains: [\n                            t,\n                            e.C_BLOCK_COMMENT_MODE,\n                            o,\n                            l,\n                            s,\n                            {\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: u,\n                                relevance: 0,\n                                contains: [\n                                    \"self\",\n                                    t,\n                                    e.C_BLOCK_COMMENT_MODE,\n                                    o,\n                                    l,\n                                    s\n                                ]\n                            }\n                        ]\n                    },\n                    s,\n                    t,\n                    e.C_BLOCK_COMMENT_MODE,\n                    c\n                ]\n            };\n            return {\n                name: \"C++\",\n                aliases: [\n                    \"cc\",\n                    \"c++\",\n                    \"h++\",\n                    \"hpp\",\n                    \"hh\",\n                    \"hxx\",\n                    \"cxx\"\n                ],\n                keywords: u,\n                illegal: \"</\",\n                classNameAliases: {\n                    \"function.dispatch\": \"built_in\"\n                },\n                contains: [].concat(p, _, b, m, [\n                    c,\n                    {\n                        begin: \"\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)\",\n                        end: \">\",\n                        keywords: u,\n                        contains: [\n                            \"self\",\n                            s\n                        ]\n                    },\n                    {\n                        begin: e.IDENT_RE + \"::\",\n                        keywords: u\n                    },\n                    {\n                        match: [\n                            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n                            /\\s+/,\n                            /\\w+/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    }\n                ])\n            };\n        },\n        grmr_csharp: (e)=>{\n            const n = {\n                keyword: [\n                    \"abstract\",\n                    \"as\",\n                    \"base\",\n                    \"break\",\n                    \"case\",\n                    \"catch\",\n                    \"class\",\n                    \"const\",\n                    \"continue\",\n                    \"do\",\n                    \"else\",\n                    \"event\",\n                    \"explicit\",\n                    \"extern\",\n                    \"finally\",\n                    \"fixed\",\n                    \"for\",\n                    \"foreach\",\n                    \"goto\",\n                    \"if\",\n                    \"implicit\",\n                    \"in\",\n                    \"interface\",\n                    \"internal\",\n                    \"is\",\n                    \"lock\",\n                    \"namespace\",\n                    \"new\",\n                    \"operator\",\n                    \"out\",\n                    \"override\",\n                    \"params\",\n                    \"private\",\n                    \"protected\",\n                    \"public\",\n                    \"readonly\",\n                    \"record\",\n                    \"ref\",\n                    \"return\",\n                    \"scoped\",\n                    \"sealed\",\n                    \"sizeof\",\n                    \"stackalloc\",\n                    \"static\",\n                    \"struct\",\n                    \"switch\",\n                    \"this\",\n                    \"throw\",\n                    \"try\",\n                    \"typeof\",\n                    \"unchecked\",\n                    \"unsafe\",\n                    \"using\",\n                    \"virtual\",\n                    \"void\",\n                    \"volatile\",\n                    \"while\"\n                ].concat([\n                    \"add\",\n                    \"alias\",\n                    \"and\",\n                    \"ascending\",\n                    \"async\",\n                    \"await\",\n                    \"by\",\n                    \"descending\",\n                    \"equals\",\n                    \"from\",\n                    \"get\",\n                    \"global\",\n                    \"group\",\n                    \"init\",\n                    \"into\",\n                    \"join\",\n                    \"let\",\n                    \"nameof\",\n                    \"not\",\n                    \"notnull\",\n                    \"on\",\n                    \"or\",\n                    \"orderby\",\n                    \"partial\",\n                    \"remove\",\n                    \"select\",\n                    \"set\",\n                    \"unmanaged\",\n                    \"value|0\",\n                    \"var\",\n                    \"when\",\n                    \"where\",\n                    \"with\",\n                    \"yield\"\n                ]),\n                built_in: [\n                    \"bool\",\n                    \"byte\",\n                    \"char\",\n                    \"decimal\",\n                    \"delegate\",\n                    \"double\",\n                    \"dynamic\",\n                    \"enum\",\n                    \"float\",\n                    \"int\",\n                    \"long\",\n                    \"nint\",\n                    \"nuint\",\n                    \"object\",\n                    \"sbyte\",\n                    \"short\",\n                    \"string\",\n                    \"ulong\",\n                    \"uint\",\n                    \"ushort\"\n                ],\n                literal: [\n                    \"default\",\n                    \"false\",\n                    \"null\",\n                    \"true\"\n                ]\n            }, t = e.inherit(e.TITLE_MODE, {\n                begin: \"[a-zA-Z](\\\\.?\\\\w)*\"\n            }), a = {\n                className: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b(0b[01']+)\"\n                    },\n                    {\n                        begin: \"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)(u|U|l|L|ul|UL|f|F|b|B)\"\n                    },\n                    {\n                        begin: \"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n                    }\n                ],\n                relevance: 0\n            }, i = {\n                className: \"string\",\n                begin: '@\"',\n                end: '\"',\n                contains: [\n                    {\n                        begin: '\"\"'\n                    }\n                ]\n            }, r = e.inherit(i, {\n                illegal: /\\n/\n            }), s = {\n                className: \"subst\",\n                begin: /\\{/,\n                end: /\\}/,\n                keywords: n\n            }, o = e.inherit(s, {\n                illegal: /\\n/\n            }), l = {\n                className: \"string\",\n                begin: /\\$\"/,\n                end: '\"',\n                illegal: /\\n/,\n                contains: [\n                    {\n                        begin: /\\{\\{/\n                    },\n                    {\n                        begin: /\\}\\}/\n                    },\n                    e.BACKSLASH_ESCAPE,\n                    o\n                ]\n            }, c = {\n                className: \"string\",\n                begin: /\\$@\"/,\n                end: '\"',\n                contains: [\n                    {\n                        begin: /\\{\\{/\n                    },\n                    {\n                        begin: /\\}\\}/\n                    },\n                    {\n                        begin: '\"\"'\n                    },\n                    s\n                ]\n            }, d = e.inherit(c, {\n                illegal: /\\n/,\n                contains: [\n                    {\n                        begin: /\\{\\{/\n                    },\n                    {\n                        begin: /\\}\\}/\n                    },\n                    {\n                        begin: '\"\"'\n                    },\n                    o\n                ]\n            });\n            s.contains = [\n                c,\n                l,\n                i,\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE,\n                a,\n                e.C_BLOCK_COMMENT_MODE\n            ], o.contains = [\n                d,\n                l,\n                r,\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE,\n                a,\n                e.inherit(e.C_BLOCK_COMMENT_MODE, {\n                    illegal: /\\n/\n                })\n            ];\n            const g = {\n                variants: [\n                    c,\n                    l,\n                    i,\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE\n                ]\n            }, u = {\n                begin: \"<\",\n                end: \">\",\n                contains: [\n                    {\n                        beginKeywords: \"in out\"\n                    },\n                    t\n                ]\n            }, b = e.IDENT_RE + \"(<\" + e.IDENT_RE + \"(\\\\s*,\\\\s*\" + e.IDENT_RE + \")*>)?(\\\\[\\\\])?\", m = {\n                begin: \"@\" + e.IDENT_RE,\n                relevance: 0\n            };\n            return {\n                name: \"C#\",\n                aliases: [\n                    \"cs\",\n                    \"c#\"\n                ],\n                keywords: n,\n                illegal: /::/,\n                contains: [\n                    e.COMMENT(\"///\", \"$\", {\n                        returnBegin: !0,\n                        contains: [\n                            {\n                                className: \"doctag\",\n                                variants: [\n                                    {\n                                        begin: \"///\",\n                                        relevance: 0\n                                    },\n                                    {\n                                        begin: \"<!--|-->\"\n                                    },\n                                    {\n                                        begin: \"</?\",\n                                        end: \">\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }),\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    {\n                        className: \"meta\",\n                        begin: \"#\",\n                        end: \"$\",\n                        keywords: {\n                            keyword: \"if else elif endif define undef warning error line region endregion pragma checksum\"\n                        }\n                    },\n                    g,\n                    a,\n                    {\n                        beginKeywords: \"class interface\",\n                        relevance: 0,\n                        end: /[{;=]/,\n                        illegal: /[^\\s:,]/,\n                        contains: [\n                            {\n                                beginKeywords: \"where class\"\n                            },\n                            t,\n                            u,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"namespace\",\n                        relevance: 0,\n                        end: /[{;=]/,\n                        illegal: /[^\\s:]/,\n                        contains: [\n                            t,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"record\",\n                        relevance: 0,\n                        end: /[{;=]/,\n                        illegal: /[^\\s:]/,\n                        contains: [\n                            t,\n                            u,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        className: \"meta\",\n                        begin: \"^\\\\s*\\\\[(?=[\\\\w])\",\n                        excludeBegin: !0,\n                        end: \"\\\\]\",\n                        excludeEnd: !0,\n                        contains: [\n                            {\n                                className: \"string\",\n                                begin: /\"/,\n                                end: /\"/\n                            }\n                        ]\n                    },\n                    {\n                        beginKeywords: \"new return throw await else\",\n                        relevance: 0\n                    },\n                    {\n                        className: \"function\",\n                        begin: \"(\" + b + \"\\\\s+)+\" + e.IDENT_RE + \"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",\n                        returnBegin: !0,\n                        end: /\\s*[{;=]/,\n                        excludeEnd: !0,\n                        keywords: n,\n                        contains: [\n                            {\n                                beginKeywords: \"public private protected static internal protected abstract async extern override unsafe virtual new sealed partial\",\n                                relevance: 0\n                            },\n                            {\n                                begin: e.IDENT_RE + \"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",\n                                returnBegin: !0,\n                                contains: [\n                                    e.TITLE_MODE,\n                                    u\n                                ],\n                                relevance: 0\n                            },\n                            {\n                                match: /\\(\\)/\n                            },\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                excludeBegin: !0,\n                                excludeEnd: !0,\n                                keywords: n,\n                                relevance: 0,\n                                contains: [\n                                    g,\n                                    a,\n                                    e.C_BLOCK_COMMENT_MODE\n                                ]\n                            },\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    m\n                ]\n            };\n        },\n        grmr_css: (e)=>{\n            const n = e.regex, t = ie(e), a = [\n                e.APOS_STRING_MODE,\n                e.QUOTE_STRING_MODE\n            ];\n            return {\n                name: \"CSS\",\n                case_insensitive: !0,\n                illegal: /[=|'\\$]/,\n                keywords: {\n                    keyframePosition: \"from to\"\n                },\n                classNameAliases: {\n                    keyframePosition: \"selector-tag\"\n                },\n                contains: [\n                    t.BLOCK_COMMENT,\n                    {\n                        begin: /-(webkit|moz|ms|o)-(?=[a-z])/\n                    },\n                    t.CSS_NUMBER_MODE,\n                    {\n                        className: \"selector-id\",\n                        begin: /#[A-Za-z0-9_-]+/,\n                        relevance: 0\n                    },\n                    {\n                        className: \"selector-class\",\n                        begin: \"\\\\.[a-zA-Z-][a-zA-Z0-9_-]*\",\n                        relevance: 0\n                    },\n                    t.ATTRIBUTE_SELECTOR_MODE,\n                    {\n                        className: \"selector-pseudo\",\n                        variants: [\n                            {\n                                begin: \":(\" + oe.join(\"|\") + \")\"\n                            },\n                            {\n                                begin: \":(:)?(\" + le.join(\"|\") + \")\"\n                            }\n                        ]\n                    },\n                    t.CSS_VARIABLE,\n                    {\n                        className: \"attribute\",\n                        begin: \"\\\\b(\" + ce.join(\"|\") + \")\\\\b\"\n                    },\n                    {\n                        begin: /:/,\n                        end: /[;}{]/,\n                        contains: [\n                            t.BLOCK_COMMENT,\n                            t.HEXCOLOR,\n                            t.IMPORTANT,\n                            t.CSS_NUMBER_MODE,\n                            ...a,\n                            {\n                                begin: /(url|data-uri)\\(/,\n                                end: /\\)/,\n                                relevance: 0,\n                                keywords: {\n                                    built_in: \"url data-uri\"\n                                },\n                                contains: [\n                                    ...a,\n                                    {\n                                        className: \"string\",\n                                        begin: /[^)]/,\n                                        endsWithParent: !0,\n                                        excludeEnd: !0\n                                    }\n                                ]\n                            },\n                            t.FUNCTION_DISPATCH\n                        ]\n                    },\n                    {\n                        begin: n.lookahead(/@/),\n                        end: \"[{;]\",\n                        relevance: 0,\n                        illegal: /:/,\n                        contains: [\n                            {\n                                className: \"keyword\",\n                                begin: /@-?\\w[\\w]*(-\\w+)*/\n                            },\n                            {\n                                begin: /\\s/,\n                                endsWithParent: !0,\n                                excludeEnd: !0,\n                                relevance: 0,\n                                keywords: {\n                                    $pattern: /[a-z-]+/,\n                                    keyword: \"and or not only\",\n                                    attribute: se.join(\" \")\n                                },\n                                contains: [\n                                    {\n                                        begin: /[a-z-]+(?=:)/,\n                                        className: \"attribute\"\n                                    },\n                                    ...a,\n                                    t.CSS_NUMBER_MODE\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        className: \"selector-tag\",\n                        begin: \"\\\\b(\" + re.join(\"|\") + \")\\\\b\"\n                    }\n                ]\n            };\n        },\n        grmr_diff: (e)=>{\n            const n = e.regex;\n            return {\n                name: \"Diff\",\n                aliases: [\n                    \"patch\"\n                ],\n                contains: [\n                    {\n                        className: \"meta\",\n                        relevance: 10,\n                        match: n.either(/^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/, /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/, /^--- +\\d+,\\d+ +----$/)\n                    },\n                    {\n                        className: \"comment\",\n                        variants: [\n                            {\n                                begin: n.either(/Index: /, /^index/, /={3,}/, /^-{3}/, /^\\*{3} /, /^\\+{3}/, /^diff --git/),\n                                end: /$/\n                            },\n                            {\n                                match: /^\\*{15}$/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"addition\",\n                        begin: /^\\+/,\n                        end: /$/\n                    },\n                    {\n                        className: \"deletion\",\n                        begin: /^-/,\n                        end: /$/\n                    },\n                    {\n                        className: \"addition\",\n                        begin: /^!/,\n                        end: /$/\n                    }\n                ]\n            };\n        },\n        grmr_go: (e)=>{\n            const n = {\n                keyword: [\n                    \"break\",\n                    \"case\",\n                    \"chan\",\n                    \"const\",\n                    \"continue\",\n                    \"default\",\n                    \"defer\",\n                    \"else\",\n                    \"fallthrough\",\n                    \"for\",\n                    \"func\",\n                    \"go\",\n                    \"goto\",\n                    \"if\",\n                    \"import\",\n                    \"interface\",\n                    \"map\",\n                    \"package\",\n                    \"range\",\n                    \"return\",\n                    \"select\",\n                    \"struct\",\n                    \"switch\",\n                    \"type\",\n                    \"var\"\n                ],\n                type: [\n                    \"bool\",\n                    \"byte\",\n                    \"complex64\",\n                    \"complex128\",\n                    \"error\",\n                    \"float32\",\n                    \"float64\",\n                    \"int8\",\n                    \"int16\",\n                    \"int32\",\n                    \"int64\",\n                    \"string\",\n                    \"uint8\",\n                    \"uint16\",\n                    \"uint32\",\n                    \"uint64\",\n                    \"int\",\n                    \"uint\",\n                    \"uintptr\",\n                    \"rune\"\n                ],\n                literal: [\n                    \"true\",\n                    \"false\",\n                    \"iota\",\n                    \"nil\"\n                ],\n                built_in: [\n                    \"append\",\n                    \"cap\",\n                    \"close\",\n                    \"complex\",\n                    \"copy\",\n                    \"imag\",\n                    \"len\",\n                    \"make\",\n                    \"new\",\n                    \"panic\",\n                    \"print\",\n                    \"println\",\n                    \"real\",\n                    \"recover\",\n                    \"delete\"\n                ]\n            };\n            return {\n                name: \"Go\",\n                aliases: [\n                    \"golang\"\n                ],\n                keywords: n,\n                illegal: \"</\",\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    {\n                        className: \"string\",\n                        variants: [\n                            e.QUOTE_STRING_MODE,\n                            e.APOS_STRING_MODE,\n                            {\n                                begin: \"`\",\n                                end: \"`\"\n                            }\n                        ]\n                    },\n                    {\n                        className: \"number\",\n                        variants: [\n                            {\n                                begin: e.C_NUMBER_RE + \"[i]\",\n                                relevance: 1\n                            },\n                            e.C_NUMBER_MODE\n                        ]\n                    },\n                    {\n                        begin: /:=/\n                    },\n                    {\n                        className: \"function\",\n                        beginKeywords: \"func\",\n                        end: \"\\\\s*(\\\\{|$)\",\n                        excludeEnd: !0,\n                        contains: [\n                            e.TITLE_MODE,\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                endsParent: !0,\n                                keywords: n,\n                                illegal: /[\"']/\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_graphql: (e)=>{\n            const n = e.regex;\n            return {\n                name: \"GraphQL\",\n                aliases: [\n                    \"gql\"\n                ],\n                case_insensitive: !0,\n                disableAutodetect: !1,\n                keywords: {\n                    keyword: [\n                        \"query\",\n                        \"mutation\",\n                        \"subscription\",\n                        \"type\",\n                        \"input\",\n                        \"schema\",\n                        \"directive\",\n                        \"interface\",\n                        \"union\",\n                        \"scalar\",\n                        \"fragment\",\n                        \"enum\",\n                        \"on\"\n                    ],\n                    literal: [\n                        \"true\",\n                        \"false\",\n                        \"null\"\n                    ]\n                },\n                contains: [\n                    e.HASH_COMMENT_MODE,\n                    e.QUOTE_STRING_MODE,\n                    e.NUMBER_MODE,\n                    {\n                        scope: \"punctuation\",\n                        match: /[.]{3}/,\n                        relevance: 0\n                    },\n                    {\n                        scope: \"punctuation\",\n                        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n                        relevance: 0\n                    },\n                    {\n                        scope: \"variable\",\n                        begin: /\\$/,\n                        end: /\\W/,\n                        excludeEnd: !0,\n                        relevance: 0\n                    },\n                    {\n                        scope: \"meta\",\n                        match: /@\\w+/,\n                        excludeEnd: !0\n                    },\n                    {\n                        scope: \"symbol\",\n                        begin: n.concat(/[_A-Za-z][_0-9A-Za-z]*/, n.lookahead(/\\s*:/)),\n                        relevance: 0\n                    }\n                ],\n                illegal: [\n                    /[;<']/,\n                    /BEGIN/\n                ]\n            };\n        },\n        grmr_ini: (e)=>{\n            const n = e.regex, t = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: /([+-]+)?[\\d]+_[\\d_]+/\n                    },\n                    {\n                        begin: e.NUMBER_RE\n                    }\n                ]\n            }, a = e.COMMENT();\n            a.variants = [\n                {\n                    begin: /;/,\n                    end: /$/\n                },\n                {\n                    begin: /#/,\n                    end: /$/\n                }\n            ];\n            const i = {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: /\\$[\\w\\d\"][\\w\\d_]*/\n                    },\n                    {\n                        begin: /\\$\\{(.*?)\\}/\n                    }\n                ]\n            }, r = {\n                className: \"literal\",\n                begin: /\\bon|off|true|false|yes|no\\b/\n            }, s = {\n                className: \"string\",\n                contains: [\n                    e.BACKSLASH_ESCAPE\n                ],\n                variants: [\n                    {\n                        begin: \"'''\",\n                        end: \"'''\",\n                        relevance: 10\n                    },\n                    {\n                        begin: '\"\"\"',\n                        end: '\"\"\"',\n                        relevance: 10\n                    },\n                    {\n                        begin: '\"',\n                        end: '\"'\n                    },\n                    {\n                        begin: \"'\",\n                        end: \"'\"\n                    }\n                ]\n            }, o = {\n                begin: /\\[/,\n                end: /\\]/,\n                contains: [\n                    a,\n                    r,\n                    i,\n                    s,\n                    t,\n                    \"self\"\n                ],\n                relevance: 0\n            }, l = n.either(/[A-Za-z0-9_-]+/, /\"(\\\\\"|[^\"])*\"/, /'[^']*'/);\n            return {\n                name: \"TOML, also INI\",\n                aliases: [\n                    \"toml\"\n                ],\n                case_insensitive: !0,\n                illegal: /\\S/,\n                contains: [\n                    a,\n                    {\n                        className: \"section\",\n                        begin: /\\[+/,\n                        end: /\\]+/\n                    },\n                    {\n                        begin: n.concat(l, \"(\\\\s*\\\\.\\\\s*\", l, \")*\", n.lookahead(/\\s*=\\s*[^#\\s]/)),\n                        className: \"attr\",\n                        starts: {\n                            end: /$/,\n                            contains: [\n                                a,\n                                o,\n                                r,\n                                i,\n                                s,\n                                t\n                            ]\n                        }\n                    }\n                ]\n            };\n        },\n        grmr_java: (e)=>{\n            const n = e.regex, t = \"[\\xc0-ʸa-zA-Z_$][\\xc0-ʸa-zA-Z_$0-9]*\", a = t + pe(\"(?:<\" + t + \"~~~(?:\\\\s*,\\\\s*\" + t + \"~~~)*>)?\", /~~~/g, 2), i = {\n                keyword: [\n                    \"synchronized\",\n                    \"abstract\",\n                    \"private\",\n                    \"var\",\n                    \"static\",\n                    \"if\",\n                    \"const \",\n                    \"for\",\n                    \"while\",\n                    \"strictfp\",\n                    \"finally\",\n                    \"protected\",\n                    \"import\",\n                    \"native\",\n                    \"final\",\n                    \"void\",\n                    \"enum\",\n                    \"else\",\n                    \"break\",\n                    \"transient\",\n                    \"catch\",\n                    \"instanceof\",\n                    \"volatile\",\n                    \"case\",\n                    \"assert\",\n                    \"package\",\n                    \"default\",\n                    \"public\",\n                    \"try\",\n                    \"switch\",\n                    \"continue\",\n                    \"throws\",\n                    \"protected\",\n                    \"public\",\n                    \"private\",\n                    \"module\",\n                    \"requires\",\n                    \"exports\",\n                    \"do\",\n                    \"sealed\",\n                    \"yield\",\n                    \"permits\"\n                ],\n                literal: [\n                    \"false\",\n                    \"true\",\n                    \"null\"\n                ],\n                type: [\n                    \"char\",\n                    \"boolean\",\n                    \"long\",\n                    \"float\",\n                    \"int\",\n                    \"byte\",\n                    \"short\",\n                    \"double\"\n                ],\n                built_in: [\n                    \"super\",\n                    \"this\"\n                ]\n            }, r = {\n                className: \"meta\",\n                begin: \"@\" + t,\n                contains: [\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            \"self\"\n                        ]\n                    }\n                ]\n            }, s = {\n                className: \"params\",\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: i,\n                relevance: 0,\n                contains: [\n                    e.C_BLOCK_COMMENT_MODE\n                ],\n                endsParent: !0\n            };\n            return {\n                name: \"Java\",\n                aliases: [\n                    \"jsp\"\n                ],\n                keywords: i,\n                illegal: /<\\/|#/,\n                contains: [\n                    e.COMMENT(\"/\\\\*\\\\*\", \"\\\\*/\", {\n                        relevance: 0,\n                        contains: [\n                            {\n                                begin: /\\w+@/,\n                                relevance: 0\n                            },\n                            {\n                                className: \"doctag\",\n                                begin: \"@[A-Za-z]+\"\n                            }\n                        ]\n                    }),\n                    {\n                        begin: /import java\\.[a-z]+\\./,\n                        keywords: \"import\",\n                        relevance: 2\n                    },\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    {\n                        begin: /\"\"\"/,\n                        end: /\"\"\"/,\n                        className: \"string\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE,\n                    {\n                        match: [\n                            /\\b(?:class|interface|enum|extends|implements|new)/,\n                            /\\s+/,\n                            t\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    },\n                    {\n                        match: /non-sealed/,\n                        scope: \"keyword\"\n                    },\n                    {\n                        begin: [\n                            n.concat(/(?!else)/, t),\n                            /\\s+/,\n                            t,\n                            /\\s+/,\n                            /=(?!=)/\n                        ],\n                        className: {\n                            1: \"type\",\n                            3: \"variable\",\n                            5: \"operator\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /record/,\n                            /\\s+/,\n                            t\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        },\n                        contains: [\n                            s,\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"new throw return else\",\n                        relevance: 0\n                    },\n                    {\n                        begin: [\n                            \"(?:\" + a + \"\\\\s+)\",\n                            e.UNDERSCORE_IDENT_RE,\n                            /\\s*(?=\\()/\n                        ],\n                        className: {\n                            2: \"title.function\"\n                        },\n                        keywords: i,\n                        contains: [\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: i,\n                                relevance: 0,\n                                contains: [\n                                    r,\n                                    e.APOS_STRING_MODE,\n                                    e.QUOTE_STRING_MODE,\n                                    me,\n                                    e.C_BLOCK_COMMENT_MODE\n                                ]\n                            },\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    me,\n                    r\n                ]\n            };\n        },\n        grmr_javascript: Oe,\n        grmr_json: (e)=>{\n            const n = [\n                \"true\",\n                \"false\",\n                \"null\"\n            ], t = {\n                scope: \"literal\",\n                beginKeywords: n.join(\" \")\n            };\n            return {\n                name: \"JSON\",\n                keywords: {\n                    literal: n\n                },\n                contains: [\n                    {\n                        className: \"attr\",\n                        begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n                        relevance: 1.01\n                    },\n                    {\n                        match: /[{}[\\],:]/,\n                        className: \"punctuation\",\n                        relevance: 0\n                    },\n                    e.QUOTE_STRING_MODE,\n                    t,\n                    e.C_NUMBER_MODE,\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE\n                ],\n                illegal: \"\\\\S\"\n            };\n        },\n        grmr_kotlin: (e)=>{\n            const n = {\n                keyword: \"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual\",\n                built_in: \"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",\n                literal: \"true false null\"\n            }, t = {\n                className: \"symbol\",\n                begin: e.UNDERSCORE_IDENT_RE + \"@\"\n            }, a = {\n                className: \"subst\",\n                begin: /\\$\\{/,\n                end: /\\}/,\n                contains: [\n                    e.C_NUMBER_MODE\n                ]\n            }, i = {\n                className: \"variable\",\n                begin: \"\\\\$\" + e.UNDERSCORE_IDENT_RE\n            }, r = {\n                className: \"string\",\n                variants: [\n                    {\n                        begin: '\"\"\"',\n                        end: '\"\"\"(?=[^\"])',\n                        contains: [\n                            i,\n                            a\n                        ]\n                    },\n                    {\n                        begin: \"'\",\n                        end: \"'\",\n                        illegal: /\\n/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: '\"',\n                        end: '\"',\n                        illegal: /\\n/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            i,\n                            a\n                        ]\n                    }\n                ]\n            };\n            a.contains.push(r);\n            const s = {\n                className: \"meta\",\n                begin: \"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\" + e.UNDERSCORE_IDENT_RE + \")?\"\n            }, o = {\n                className: \"meta\",\n                begin: \"@\" + e.UNDERSCORE_IDENT_RE,\n                contains: [\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            e.inherit(r, {\n                                className: \"string\"\n                            }),\n                            \"self\"\n                        ]\n                    }\n                ]\n            }, l = me, c = e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                contains: [\n                    e.C_BLOCK_COMMENT_MODE\n                ]\n            }), d = {\n                variants: [\n                    {\n                        className: \"type\",\n                        begin: e.UNDERSCORE_IDENT_RE\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: []\n                    }\n                ]\n            }, g = d;\n            return g.variants[1].contains = [\n                d\n            ], d.variants[1].contains = [\n                g\n            ], {\n                name: \"Kotlin\",\n                aliases: [\n                    \"kt\",\n                    \"kts\"\n                ],\n                keywords: n,\n                contains: [\n                    e.COMMENT(\"/\\\\*\\\\*\", \"\\\\*/\", {\n                        relevance: 0,\n                        contains: [\n                            {\n                                className: \"doctag\",\n                                begin: \"@[A-Za-z]+\"\n                            }\n                        ]\n                    }),\n                    e.C_LINE_COMMENT_MODE,\n                    c,\n                    {\n                        className: \"keyword\",\n                        begin: /\\b(break|continue|return|this)\\b/,\n                        starts: {\n                            contains: [\n                                {\n                                    className: \"symbol\",\n                                    begin: /@\\w+/\n                                }\n                            ]\n                        }\n                    },\n                    t,\n                    s,\n                    o,\n                    {\n                        className: \"function\",\n                        beginKeywords: \"fun\",\n                        end: \"[(]|$\",\n                        returnBegin: !0,\n                        excludeEnd: !0,\n                        keywords: n,\n                        relevance: 5,\n                        contains: [\n                            {\n                                begin: e.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n                                returnBegin: !0,\n                                relevance: 0,\n                                contains: [\n                                    e.UNDERSCORE_TITLE_MODE\n                                ]\n                            },\n                            {\n                                className: \"type\",\n                                begin: /</,\n                                end: />/,\n                                keywords: \"reified\",\n                                relevance: 0\n                            },\n                            {\n                                className: \"params\",\n                                begin: /\\(/,\n                                end: /\\)/,\n                                endsParent: !0,\n                                keywords: n,\n                                relevance: 0,\n                                contains: [\n                                    {\n                                        begin: /:/,\n                                        end: /[=,\\/]/,\n                                        endsWithParent: !0,\n                                        contains: [\n                                            d,\n                                            e.C_LINE_COMMENT_MODE,\n                                            c\n                                        ],\n                                        relevance: 0\n                                    },\n                                    e.C_LINE_COMMENT_MODE,\n                                    c,\n                                    s,\n                                    o,\n                                    r,\n                                    e.C_NUMBER_MODE\n                                ]\n                            },\n                            c\n                        ]\n                    },\n                    {\n                        begin: [\n                            /class|interface|trait/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        beginScope: {\n                            3: \"title.class\"\n                        },\n                        keywords: \"class interface trait\",\n                        end: /[:\\{(]|$/,\n                        excludeEnd: !0,\n                        illegal: \"extends implements\",\n                        contains: [\n                            {\n                                beginKeywords: \"public protected internal private constructor\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE,\n                            {\n                                className: \"type\",\n                                begin: /</,\n                                end: />/,\n                                excludeBegin: !0,\n                                excludeEnd: !0,\n                                relevance: 0\n                            },\n                            {\n                                className: \"type\",\n                                begin: /[,:]\\s*/,\n                                end: /[<\\(,){\\s]|$/,\n                                excludeBegin: !0,\n                                returnEnd: !0\n                            },\n                            s,\n                            o\n                        ]\n                    },\n                    r,\n                    {\n                        className: \"meta\",\n                        begin: \"^#!/usr/bin/env\",\n                        end: \"$\",\n                        illegal: \"\\n\"\n                    },\n                    l\n                ]\n            };\n        },\n        grmr_less: (e)=>{\n            const n = ie(e), t = de, a = \"[\\\\w-]+\", i = \"(\" + a + \"|@\\\\{\" + a + \"\\\\})\", r = [], s = [], o = (e)=>({\n                    className: \"string\",\n                    begin: \"~?\" + e + \".*?\" + e\n                }), l = (e, n, t)=>({\n                    className: e,\n                    begin: n,\n                    relevance: t\n                }), c = {\n                $pattern: /[a-z-]+/,\n                keyword: \"and or not only\",\n                attribute: se.join(\" \")\n            }, d = {\n                begin: \"\\\\(\",\n                end: \"\\\\)\",\n                contains: s,\n                keywords: c,\n                relevance: 0\n            };\n            s.push(e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, o(\"'\"), o('\"'), n.CSS_NUMBER_MODE, {\n                begin: \"(url|data-uri)\\\\(\",\n                starts: {\n                    className: \"string\",\n                    end: \"[\\\\)\\\\n]\",\n                    excludeEnd: !0\n                }\n            }, n.HEXCOLOR, d, l(\"variable\", \"@@?\" + a, 10), l(\"variable\", \"@\\\\{\" + a + \"\\\\}\"), l(\"built_in\", \"~?`[^`]*?`\"), {\n                className: \"attribute\",\n                begin: a + \"\\\\s*:\",\n                end: \":\",\n                returnBegin: !0,\n                excludeEnd: !0\n            }, n.IMPORTANT, {\n                beginKeywords: \"and not\"\n            }, n.FUNCTION_DISPATCH);\n            const g = s.concat({\n                begin: /\\{/,\n                end: /\\}/,\n                contains: r\n            }), u = {\n                beginKeywords: \"when\",\n                endsWithParent: !0,\n                contains: [\n                    {\n                        beginKeywords: \"and not\"\n                    }\n                ].concat(s)\n            }, b = {\n                begin: i + \"\\\\s*:\",\n                returnBegin: !0,\n                end: /[;}]/,\n                relevance: 0,\n                contains: [\n                    {\n                        begin: /-(webkit|moz|ms|o)-/\n                    },\n                    n.CSS_VARIABLE,\n                    {\n                        className: \"attribute\",\n                        begin: \"\\\\b(\" + ce.join(\"|\") + \")\\\\b\",\n                        end: /(?=:)/,\n                        starts: {\n                            endsWithParent: !0,\n                            illegal: \"[<=$]\",\n                            relevance: 0,\n                            contains: s\n                        }\n                    }\n                ]\n            }, m = {\n                className: \"keyword\",\n                begin: \"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b\",\n                starts: {\n                    end: \"[;{}]\",\n                    keywords: c,\n                    returnEnd: !0,\n                    contains: s,\n                    relevance: 0\n                }\n            }, p = {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: \"@\" + a + \"\\\\s*:\",\n                        relevance: 15\n                    },\n                    {\n                        begin: \"@\" + a\n                    }\n                ],\n                starts: {\n                    end: \"[;}]\",\n                    returnEnd: !0,\n                    contains: g\n                }\n            }, _ = {\n                variants: [\n                    {\n                        begin: \"[\\\\.#:&\\\\[>]\",\n                        end: \"[;{}]\"\n                    },\n                    {\n                        begin: i,\n                        end: /\\{/\n                    }\n                ],\n                returnBegin: !0,\n                returnEnd: !0,\n                illegal: \"[<='$\\\"]\",\n                relevance: 0,\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    u,\n                    l(\"keyword\", \"all\\\\b\"),\n                    l(\"variable\", \"@\\\\{\" + a + \"\\\\}\"),\n                    {\n                        begin: \"\\\\b(\" + re.join(\"|\") + \")\\\\b\",\n                        className: \"selector-tag\"\n                    },\n                    n.CSS_NUMBER_MODE,\n                    l(\"selector-tag\", i, 0),\n                    l(\"selector-id\", \"#\" + i),\n                    l(\"selector-class\", \"\\\\.\" + i, 0),\n                    l(\"selector-tag\", \"&\", 0),\n                    n.ATTRIBUTE_SELECTOR_MODE,\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(\" + oe.join(\"|\") + \")\"\n                    },\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(:)?(\" + le.join(\"|\") + \")\"\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        relevance: 0,\n                        contains: g\n                    },\n                    {\n                        begin: \"!important\"\n                    },\n                    n.FUNCTION_DISPATCH\n                ]\n            }, h = {\n                begin: a + \":(:)?\" + `(${t.join(\"|\")})`,\n                returnBegin: !0,\n                contains: [\n                    _\n                ]\n            };\n            return r.push(e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, m, p, h, b, _, u, n.FUNCTION_DISPATCH), {\n                name: \"Less\",\n                case_insensitive: !0,\n                illegal: \"[=>'/<($\\\"]\",\n                contains: r\n            };\n        },\n        grmr_lua: (e)=>{\n            const n = \"\\\\[=*\\\\[\", t = \"\\\\]=*\\\\]\", a = {\n                begin: n,\n                end: t,\n                contains: [\n                    \"self\"\n                ]\n            }, i = [\n                e.COMMENT(\"--(?!\" + n + \")\", \"$\"),\n                e.COMMENT(\"--\" + n, t, {\n                    contains: [\n                        a\n                    ],\n                    relevance: 10\n                })\n            ];\n            return {\n                name: \"Lua\",\n                keywords: {\n                    $pattern: e.UNDERSCORE_IDENT_RE,\n                    literal: \"true false nil\",\n                    keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n                    built_in: \"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove\"\n                },\n                contains: i.concat([\n                    {\n                        className: \"function\",\n                        beginKeywords: \"function\",\n                        end: \"\\\\)\",\n                        contains: [\n                            e.inherit(e.TITLE_MODE, {\n                                begin: \"([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*\"\n                            }),\n                            {\n                                className: \"params\",\n                                begin: \"\\\\(\",\n                                endsWithParent: !0,\n                                contains: i\n                            }\n                        ].concat(i)\n                    },\n                    e.C_NUMBER_MODE,\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE,\n                    {\n                        className: \"string\",\n                        begin: n,\n                        end: t,\n                        contains: [\n                            a\n                        ],\n                        relevance: 5\n                    }\n                ])\n            };\n        },\n        grmr_makefile: (e)=>{\n            const n = {\n                className: \"variable\",\n                variants: [\n                    {\n                        begin: \"\\\\$\\\\(\" + e.UNDERSCORE_IDENT_RE + \"\\\\)\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ]\n                    },\n                    {\n                        begin: /\\$[@%<?\\^\\+\\*]/\n                    }\n                ]\n            }, t = {\n                className: \"string\",\n                begin: /\"/,\n                end: /\"/,\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    n\n                ]\n            }, a = {\n                className: \"variable\",\n                begin: /\\$\\([\\w-]+\\s/,\n                end: /\\)/,\n                keywords: {\n                    built_in: \"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value\"\n                },\n                contains: [\n                    n\n                ]\n            }, i = {\n                begin: \"^\" + e.UNDERSCORE_IDENT_RE + \"\\\\s*(?=[:+?]?=)\"\n            }, r = {\n                className: \"section\",\n                begin: /^[^\\s]+:/,\n                end: /$/,\n                contains: [\n                    n\n                ]\n            };\n            return {\n                name: \"Makefile\",\n                aliases: [\n                    \"mk\",\n                    \"mak\",\n                    \"make\"\n                ],\n                keywords: {\n                    $pattern: /[\\w-]+/,\n                    keyword: \"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath\"\n                },\n                contains: [\n                    e.HASH_COMMENT_MODE,\n                    n,\n                    t,\n                    a,\n                    i,\n                    {\n                        className: \"meta\",\n                        begin: /^\\.PHONY:/,\n                        end: /$/,\n                        keywords: {\n                            $pattern: /[\\.\\w]+/,\n                            keyword: \".PHONY\"\n                        }\n                    },\n                    r\n                ]\n            };\n        },\n        grmr_xml: (e)=>{\n            const n = e.regex, t = n.concat(/[\\p{L}_]/u, n.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u), a = {\n                className: \"symbol\",\n                begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n            }, i = {\n                begin: /\\s/,\n                contains: [\n                    {\n                        className: \"keyword\",\n                        begin: /#?[a-z_][a-z1-9_-]+/,\n                        illegal: /\\n/\n                    }\n                ]\n            }, r = e.inherit(i, {\n                begin: /\\(/,\n                end: /\\)/\n            }), s = e.inherit(e.APOS_STRING_MODE, {\n                className: \"string\"\n            }), o = e.inherit(e.QUOTE_STRING_MODE, {\n                className: \"string\"\n            }), l = {\n                endsWithParent: !0,\n                illegal: /</,\n                relevance: 0,\n                contains: [\n                    {\n                        className: \"attr\",\n                        begin: /[\\p{L}0-9._:-]+/u,\n                        relevance: 0\n                    },\n                    {\n                        begin: /=\\s*/,\n                        relevance: 0,\n                        contains: [\n                            {\n                                className: \"string\",\n                                endsParent: !0,\n                                variants: [\n                                    {\n                                        begin: /\"/,\n                                        end: /\"/,\n                                        contains: [\n                                            a\n                                        ]\n                                    },\n                                    {\n                                        begin: /'/,\n                                        end: /'/,\n                                        contains: [\n                                            a\n                                        ]\n                                    },\n                                    {\n                                        begin: /[^\\s\"'=<>`]+/\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            };\n            return {\n                name: \"HTML, XML\",\n                aliases: [\n                    \"html\",\n                    \"xhtml\",\n                    \"rss\",\n                    \"atom\",\n                    \"xjb\",\n                    \"xsd\",\n                    \"xsl\",\n                    \"plist\",\n                    \"wsf\",\n                    \"svg\"\n                ],\n                case_insensitive: !0,\n                unicodeRegex: !0,\n                contains: [\n                    {\n                        className: \"meta\",\n                        begin: /<![a-z]/,\n                        end: />/,\n                        relevance: 10,\n                        contains: [\n                            i,\n                            o,\n                            s,\n                            r,\n                            {\n                                begin: /\\[/,\n                                end: /\\]/,\n                                contains: [\n                                    {\n                                        className: \"meta\",\n                                        begin: /<![a-z]/,\n                                        end: />/,\n                                        contains: [\n                                            i,\n                                            r,\n                                            o,\n                                            s\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    e.COMMENT(/<!--/, /-->/, {\n                        relevance: 10\n                    }),\n                    {\n                        begin: /<!\\[CDATA\\[/,\n                        end: /\\]\\]>/,\n                        relevance: 10\n                    },\n                    a,\n                    {\n                        className: \"meta\",\n                        end: /\\?>/,\n                        variants: [\n                            {\n                                begin: /<\\?xml/,\n                                relevance: 10,\n                                contains: [\n                                    o\n                                ]\n                            },\n                            {\n                                begin: /<\\?[a-z][a-z0-9]+/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"tag\",\n                        begin: /<style(?=\\s|>)/,\n                        end: />/,\n                        keywords: {\n                            name: \"style\"\n                        },\n                        contains: [\n                            l\n                        ],\n                        starts: {\n                            end: /<\\/style>/,\n                            returnEnd: !0,\n                            subLanguage: [\n                                \"css\",\n                                \"xml\"\n                            ]\n                        }\n                    },\n                    {\n                        className: \"tag\",\n                        begin: /<script(?=\\s|>)/,\n                        end: />/,\n                        keywords: {\n                            name: \"script\"\n                        },\n                        contains: [\n                            l\n                        ],\n                        starts: {\n                            end: /<\\/script>/,\n                            returnEnd: !0,\n                            subLanguage: [\n                                \"javascript\",\n                                \"handlebars\",\n                                \"xml\"\n                            ]\n                        }\n                    },\n                    {\n                        className: \"tag\",\n                        begin: /<>|<\\/>/\n                    },\n                    {\n                        className: \"tag\",\n                        begin: n.concat(/</, n.lookahead(n.concat(t, n.either(/\\/>/, />/, /\\s/)))),\n                        end: /\\/?>/,\n                        contains: [\n                            {\n                                className: \"name\",\n                                begin: t,\n                                relevance: 0,\n                                starts: l\n                            }\n                        ]\n                    },\n                    {\n                        className: \"tag\",\n                        begin: n.concat(/<\\//, n.lookahead(n.concat(t, />/))),\n                        contains: [\n                            {\n                                className: \"name\",\n                                begin: t,\n                                relevance: 0\n                            },\n                            {\n                                begin: />/,\n                                relevance: 0,\n                                endsParent: !0\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_markdown: (e)=>{\n            const n = {\n                begin: /<\\/?[A-Za-z_]/,\n                end: \">\",\n                subLanguage: \"xml\",\n                relevance: 0\n            }, t = {\n                variants: [\n                    {\n                        begin: /\\[.+?\\]\\[.*?\\]/,\n                        relevance: 0\n                    },\n                    {\n                        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n                        relevance: 2\n                    },\n                    {\n                        begin: e.regex.concat(/\\[.+?\\]\\(/, /[A-Za-z][A-Za-z0-9+.-]*/, /:\\/\\/.*?\\)/),\n                        relevance: 2\n                    },\n                    {\n                        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n                        relevance: 1\n                    },\n                    {\n                        begin: /\\[.*?\\]\\(.*?\\)/,\n                        relevance: 0\n                    }\n                ],\n                returnBegin: !0,\n                contains: [\n                    {\n                        match: /\\[(?=\\])/\n                    },\n                    {\n                        className: \"string\",\n                        relevance: 0,\n                        begin: \"\\\\[\",\n                        end: \"\\\\]\",\n                        excludeBegin: !0,\n                        returnEnd: !0\n                    },\n                    {\n                        className: \"link\",\n                        relevance: 0,\n                        begin: \"\\\\]\\\\(\",\n                        end: \"\\\\)\",\n                        excludeBegin: !0,\n                        excludeEnd: !0\n                    },\n                    {\n                        className: \"symbol\",\n                        relevance: 0,\n                        begin: \"\\\\]\\\\[\",\n                        end: \"\\\\]\",\n                        excludeBegin: !0,\n                        excludeEnd: !0\n                    }\n                ]\n            }, a = {\n                className: \"strong\",\n                contains: [],\n                variants: [\n                    {\n                        begin: /_{2}(?!\\s)/,\n                        end: /_{2}/\n                    },\n                    {\n                        begin: /\\*{2}(?!\\s)/,\n                        end: /\\*{2}/\n                    }\n                ]\n            }, i = {\n                className: \"emphasis\",\n                contains: [],\n                variants: [\n                    {\n                        begin: /\\*(?![*\\s])/,\n                        end: /\\*/\n                    },\n                    {\n                        begin: /_(?![_\\s])/,\n                        end: /_/,\n                        relevance: 0\n                    }\n                ]\n            }, r = e.inherit(a, {\n                contains: []\n            }), s = e.inherit(i, {\n                contains: []\n            });\n            a.contains.push(s), i.contains.push(r);\n            let o = [\n                n,\n                t\n            ];\n            return [\n                a,\n                i,\n                r,\n                s\n            ].forEach((e)=>{\n                e.contains = e.contains.concat(o);\n            }), o = o.concat(a, i), {\n                name: \"Markdown\",\n                aliases: [\n                    \"md\",\n                    \"mkdown\",\n                    \"mkd\"\n                ],\n                contains: [\n                    {\n                        className: \"section\",\n                        variants: [\n                            {\n                                begin: \"^#{1,6}\",\n                                end: \"$\",\n                                contains: o\n                            },\n                            {\n                                begin: \"(?=^.+?\\\\n[=-]{2,}$)\",\n                                contains: [\n                                    {\n                                        begin: \"^[=-]*$\"\n                                    },\n                                    {\n                                        begin: \"^\",\n                                        end: \"\\\\n\",\n                                        contains: o\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    n,\n                    {\n                        className: \"bullet\",\n                        begin: \"^[ \t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)\",\n                        end: \"\\\\s+\",\n                        excludeEnd: !0\n                    },\n                    a,\n                    i,\n                    {\n                        className: \"quote\",\n                        begin: \"^>\\\\s+\",\n                        contains: o,\n                        end: \"$\"\n                    },\n                    {\n                        className: \"code\",\n                        variants: [\n                            {\n                                begin: \"(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*\"\n                            },\n                            {\n                                begin: \"(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*\"\n                            },\n                            {\n                                begin: \"```\",\n                                end: \"```+[ ]*$\"\n                            },\n                            {\n                                begin: \"~~~\",\n                                end: \"~~~+[ ]*$\"\n                            },\n                            {\n                                begin: \"`.+?`\"\n                            },\n                            {\n                                begin: \"(?=^( {4}|\\\\t))\",\n                                contains: [\n                                    {\n                                        begin: \"^( {4}|\\\\t)\",\n                                        end: \"(\\\\n)$\"\n                                    }\n                                ],\n                                relevance: 0\n                            }\n                        ]\n                    },\n                    {\n                        begin: \"^[-\\\\*]{3,}\",\n                        end: \"$\"\n                    },\n                    t,\n                    {\n                        begin: /^\\[[^\\n]+\\]:/,\n                        returnBegin: !0,\n                        contains: [\n                            {\n                                className: \"symbol\",\n                                begin: /\\[/,\n                                end: /\\]/,\n                                excludeBegin: !0,\n                                excludeEnd: !0\n                            },\n                            {\n                                className: \"link\",\n                                begin: /:\\s*/,\n                                end: /$/,\n                                excludeBegin: !0\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_objectivec: (e)=>{\n            const n = /[a-zA-Z@][a-zA-Z0-9_]*/, t = {\n                $pattern: n,\n                keyword: [\n                    \"@interface\",\n                    \"@class\",\n                    \"@protocol\",\n                    \"@implementation\"\n                ]\n            };\n            return {\n                name: \"Objective-C\",\n                aliases: [\n                    \"mm\",\n                    \"objc\",\n                    \"obj-c\",\n                    \"obj-c++\",\n                    \"objective-c++\"\n                ],\n                keywords: {\n                    \"variable.language\": [\n                        \"this\",\n                        \"super\"\n                    ],\n                    $pattern: n,\n                    keyword: [\n                        \"while\",\n                        \"export\",\n                        \"sizeof\",\n                        \"typedef\",\n                        \"const\",\n                        \"struct\",\n                        \"for\",\n                        \"union\",\n                        \"volatile\",\n                        \"static\",\n                        \"mutable\",\n                        \"if\",\n                        \"do\",\n                        \"return\",\n                        \"goto\",\n                        \"enum\",\n                        \"else\",\n                        \"break\",\n                        \"extern\",\n                        \"asm\",\n                        \"case\",\n                        \"default\",\n                        \"register\",\n                        \"explicit\",\n                        \"typename\",\n                        \"switch\",\n                        \"continue\",\n                        \"inline\",\n                        \"readonly\",\n                        \"assign\",\n                        \"readwrite\",\n                        \"self\",\n                        \"@synchronized\",\n                        \"id\",\n                        \"typeof\",\n                        \"nonatomic\",\n                        \"IBOutlet\",\n                        \"IBAction\",\n                        \"strong\",\n                        \"weak\",\n                        \"copy\",\n                        \"in\",\n                        \"out\",\n                        \"inout\",\n                        \"bycopy\",\n                        \"byref\",\n                        \"oneway\",\n                        \"__strong\",\n                        \"__weak\",\n                        \"__block\",\n                        \"__autoreleasing\",\n                        \"@private\",\n                        \"@protected\",\n                        \"@public\",\n                        \"@try\",\n                        \"@property\",\n                        \"@end\",\n                        \"@throw\",\n                        \"@catch\",\n                        \"@finally\",\n                        \"@autoreleasepool\",\n                        \"@synthesize\",\n                        \"@dynamic\",\n                        \"@selector\",\n                        \"@optional\",\n                        \"@required\",\n                        \"@encode\",\n                        \"@package\",\n                        \"@import\",\n                        \"@defs\",\n                        \"@compatibility_alias\",\n                        \"__bridge\",\n                        \"__bridge_transfer\",\n                        \"__bridge_retained\",\n                        \"__bridge_retain\",\n                        \"__covariant\",\n                        \"__contravariant\",\n                        \"__kindof\",\n                        \"_Nonnull\",\n                        \"_Nullable\",\n                        \"_Null_unspecified\",\n                        \"__FUNCTION__\",\n                        \"__PRETTY_FUNCTION__\",\n                        \"__attribute__\",\n                        \"getter\",\n                        \"setter\",\n                        \"retain\",\n                        \"unsafe_unretained\",\n                        \"nonnull\",\n                        \"nullable\",\n                        \"null_unspecified\",\n                        \"null_resettable\",\n                        \"class\",\n                        \"instancetype\",\n                        \"NS_DESIGNATED_INITIALIZER\",\n                        \"NS_UNAVAILABLE\",\n                        \"NS_REQUIRES_SUPER\",\n                        \"NS_RETURNS_INNER_POINTER\",\n                        \"NS_INLINE\",\n                        \"NS_AVAILABLE\",\n                        \"NS_DEPRECATED\",\n                        \"NS_ENUM\",\n                        \"NS_OPTIONS\",\n                        \"NS_SWIFT_UNAVAILABLE\",\n                        \"NS_ASSUME_NONNULL_BEGIN\",\n                        \"NS_ASSUME_NONNULL_END\",\n                        \"NS_REFINED_FOR_SWIFT\",\n                        \"NS_SWIFT_NAME\",\n                        \"NS_SWIFT_NOTHROW\",\n                        \"NS_DURING\",\n                        \"NS_HANDLER\",\n                        \"NS_ENDHANDLER\",\n                        \"NS_VALUERETURN\",\n                        \"NS_VOIDRETURN\"\n                    ],\n                    literal: [\n                        \"false\",\n                        \"true\",\n                        \"FALSE\",\n                        \"TRUE\",\n                        \"nil\",\n                        \"YES\",\n                        \"NO\",\n                        \"NULL\"\n                    ],\n                    built_in: [\n                        \"dispatch_once_t\",\n                        \"dispatch_queue_t\",\n                        \"dispatch_sync\",\n                        \"dispatch_async\",\n                        \"dispatch_once\"\n                    ],\n                    type: [\n                        \"int\",\n                        \"float\",\n                        \"char\",\n                        \"unsigned\",\n                        \"signed\",\n                        \"short\",\n                        \"long\",\n                        \"double\",\n                        \"wchar_t\",\n                        \"unichar\",\n                        \"void\",\n                        \"bool\",\n                        \"BOOL\",\n                        \"id|0\",\n                        \"_Bool\"\n                    ]\n                },\n                illegal: \"</\",\n                contains: [\n                    {\n                        className: \"built_in\",\n                        begin: \"\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+\"\n                    },\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    e.C_NUMBER_MODE,\n                    e.QUOTE_STRING_MODE,\n                    e.APOS_STRING_MODE,\n                    {\n                        className: \"string\",\n                        variants: [\n                            {\n                                begin: '@\"',\n                                end: '\"',\n                                illegal: \"\\\\n\",\n                                contains: [\n                                    e.BACKSLASH_ESCAPE\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        className: \"meta\",\n                        begin: /#\\s*[a-z]+\\b/,\n                        end: /$/,\n                        keywords: {\n                            keyword: \"if else elif endif define undef warning error line pragma ifdef ifndef include\"\n                        },\n                        contains: [\n                            {\n                                begin: /\\\\\\n/,\n                                relevance: 0\n                            },\n                            e.inherit(e.QUOTE_STRING_MODE, {\n                                className: \"string\"\n                            }),\n                            {\n                                className: \"string\",\n                                begin: /<.*?>/,\n                                end: /$/,\n                                illegal: \"\\\\n\"\n                            },\n                            e.C_LINE_COMMENT_MODE,\n                            e.C_BLOCK_COMMENT_MODE\n                        ]\n                    },\n                    {\n                        className: \"class\",\n                        begin: \"(\" + t.keyword.join(\"|\") + \")\\\\b\",\n                        end: /(\\{|$)/,\n                        excludeEnd: !0,\n                        keywords: t,\n                        contains: [\n                            e.UNDERSCORE_TITLE_MODE\n                        ]\n                    },\n                    {\n                        begin: \"\\\\.\" + e.UNDERSCORE_IDENT_RE,\n                        relevance: 0\n                    }\n                ]\n            };\n        },\n        grmr_perl: (e)=>{\n            const n = e.regex, t = /[dualxmsipngr]{0,12}/, a = {\n                $pattern: /[\\w.]+/,\n                keyword: \"abs accept alarm and atan2 bind binmode bless break caller chdir chmod chomp chop chown chr chroot close closedir connect continue cos crypt dbmclose dbmopen defined delete die do dump each else elsif endgrent endhostent endnetent endprotoent endpwent endservent eof eval exec exists exit exp fcntl fileno flock for foreach fork format formline getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername getpgrp getpriority getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwuid getservbyname getservbyport getservent getsockname getsockopt given glob gmtime goto grep gt hex if index int ioctl join keys kill last lc lcfirst length link listen local localtime log lstat lt ma map mkdir msgctl msgget msgrcv msgsnd my ne next no not oct open opendir or ord our pack package pipe pop pos print printf prototype push q|0 qq quotemeta qw qx rand read readdir readline readlink readpipe recv redo ref rename require reset return reverse rewinddir rindex rmdir say scalar seek seekdir select semctl semget semop send setgrent sethostent setnetent setpgrp setpriority setprotoent setpwent setservent setsockopt shift shmctl shmget shmread shmwrite shutdown sin sleep socket socketpair sort splice split sprintf sqrt srand stat state study sub substr symlink syscall sysopen sysread sysseek system syswrite tell telldir tie tied time times tr truncate uc ucfirst umask undef unless unlink unpack unshift untie until use utime values vec wait waitpid wantarray warn when while write x|0 xor y|0\"\n            }, i = {\n                className: \"subst\",\n                begin: \"[$@]\\\\{\",\n                end: \"\\\\}\",\n                keywords: a\n            }, r = {\n                begin: /->\\{/,\n                end: /\\}/\n            }, s = {\n                variants: [\n                    {\n                        begin: /\\$\\d/\n                    },\n                    {\n                        begin: n.concat(/[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/, \"(?![A-Za-z])(?![@$%])\")\n                    },\n                    {\n                        begin: /[$%@][^\\s\\w{]/,\n                        relevance: 0\n                    }\n                ]\n            }, o = [\n                e.BACKSLASH_ESCAPE,\n                i,\n                s\n            ], l = [\n                /!/,\n                /\\//,\n                /\\|/,\n                /\\?/,\n                /'/,\n                /\"/,\n                /#/\n            ], c = (e, a, i = \"\\\\1\")=>{\n                const r = \"\\\\1\" === i ? i : n.concat(i, a);\n                return n.concat(n.concat(\"(?:\", e, \")\"), a, /(?:\\\\.|[^\\\\\\/])*?/, r, /(?:\\\\.|[^\\\\\\/])*?/, i, t);\n            }, d = (e, a, i)=>n.concat(n.concat(\"(?:\", e, \")\"), a, /(?:\\\\.|[^\\\\\\/])*?/, i, t), g = [\n                s,\n                e.HASH_COMMENT_MODE,\n                e.COMMENT(/^=\\w/, /=cut/, {\n                    endsWithParent: !0\n                }),\n                r,\n                {\n                    className: \"string\",\n                    contains: o,\n                    variants: [\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\(\",\n                            end: \"\\\\)\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\[\",\n                            end: \"\\\\]\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\{\",\n                            end: \"\\\\}\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*\\\\|\",\n                            end: \"\\\\|\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"q[qwxr]?\\\\s*<\",\n                            end: \">\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"qw\\\\s+q\",\n                            end: \"q\",\n                            relevance: 5\n                        },\n                        {\n                            begin: \"'\",\n                            end: \"'\",\n                            contains: [\n                                e.BACKSLASH_ESCAPE\n                            ]\n                        },\n                        {\n                            begin: '\"',\n                            end: '\"'\n                        },\n                        {\n                            begin: \"`\",\n                            end: \"`\",\n                            contains: [\n                                e.BACKSLASH_ESCAPE\n                            ]\n                        },\n                        {\n                            begin: /\\{\\w+\\}/,\n                            relevance: 0\n                        },\n                        {\n                            begin: \"-?\\\\w+\\\\s*=>\",\n                            relevance: 0\n                        }\n                    ]\n                },\n                {\n                    className: \"number\",\n                    begin: \"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",\n                    relevance: 0\n                },\n                {\n                    begin: \"(\\\\/\\\\/|\" + e.RE_STARTERS_RE + \"|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*\",\n                    keywords: \"split return print reverse grep\",\n                    relevance: 0,\n                    contains: [\n                        e.HASH_COMMENT_MODE,\n                        {\n                            className: \"regexp\",\n                            variants: [\n                                {\n                                    begin: c(\"s|tr|y\", n.either(...l, {\n                                        capture: !0\n                                    }))\n                                },\n                                {\n                                    begin: c(\"s|tr|y\", \"\\\\(\", \"\\\\)\")\n                                },\n                                {\n                                    begin: c(\"s|tr|y\", \"\\\\[\", \"\\\\]\")\n                                },\n                                {\n                                    begin: c(\"s|tr|y\", \"\\\\{\", \"\\\\}\")\n                                }\n                            ],\n                            relevance: 2\n                        },\n                        {\n                            className: \"regexp\",\n                            variants: [\n                                {\n                                    begin: /(m|qr)\\/\\//,\n                                    relevance: 0\n                                },\n                                {\n                                    begin: d(\"(?:m|qr)?\", /\\//, /\\//)\n                                },\n                                {\n                                    begin: d(\"m|qr\", n.either(...l, {\n                                        capture: !0\n                                    }), /\\1/)\n                                },\n                                {\n                                    begin: d(\"m|qr\", /\\(/, /\\)/)\n                                },\n                                {\n                                    begin: d(\"m|qr\", /\\[/, /\\]/)\n                                },\n                                {\n                                    begin: d(\"m|qr\", /\\{/, /\\}/)\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    className: \"function\",\n                    beginKeywords: \"sub\",\n                    end: \"(\\\\s*\\\\(.*?\\\\))?[;{]\",\n                    excludeEnd: !0,\n                    relevance: 5,\n                    contains: [\n                        e.TITLE_MODE\n                    ]\n                },\n                {\n                    begin: \"-\\\\w\\\\b\",\n                    relevance: 0\n                },\n                {\n                    begin: \"^__DATA__$\",\n                    end: \"^__END__$\",\n                    subLanguage: \"mojolicious\",\n                    contains: [\n                        {\n                            begin: \"^@@.*\",\n                            end: \"$\",\n                            className: \"comment\"\n                        }\n                    ]\n                }\n            ];\n            return i.contains = g, r.contains = g, {\n                name: \"Perl\",\n                aliases: [\n                    \"pl\",\n                    \"pm\"\n                ],\n                keywords: a,\n                contains: g\n            };\n        },\n        grmr_php: (e)=>{\n            const n = e.regex, t = /(?![A-Za-z0-9])(?![$])/, a = n.concat(/[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/, t), i = n.concat(/(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/, t), r = {\n                scope: \"variable\",\n                match: \"\\\\$+\" + a\n            }, s = {\n                scope: \"subst\",\n                variants: [\n                    {\n                        begin: /\\$\\w+/\n                    },\n                    {\n                        begin: /\\{\\$/,\n                        end: /\\}/\n                    }\n                ]\n            }, o = e.inherit(e.APOS_STRING_MODE, {\n                illegal: null\n            }), l = \"[ \t\\n]\", c = {\n                scope: \"string\",\n                variants: [\n                    e.inherit(e.QUOTE_STRING_MODE, {\n                        illegal: null,\n                        contains: e.QUOTE_STRING_MODE.contains.concat(s)\n                    }),\n                    o,\n                    {\n                        begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\n                        end: /[ \\t]*(\\w+)\\b/,\n                        contains: e.QUOTE_STRING_MODE.contains.concat(s),\n                        \"on:begin\": (e, n)=>{\n                            n.data._beginMatch = e[1] || e[2];\n                        },\n                        \"on:end\": (e, n)=>{\n                            n.data._beginMatch !== e[1] && n.ignoreMatch();\n                        }\n                    },\n                    e.END_SAME_AS_BEGIN({\n                        begin: /<<<[ \\t]*'(\\w+)'\\n/,\n                        end: /[ \\t]*(\\w+)\\b/\n                    })\n                ]\n            }, d = {\n                scope: \"number\",\n                variants: [\n                    {\n                        begin: \"\\\\b0[bB][01]+(?:_[01]+)*\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b\"\n                    },\n                    {\n                        begin: \"(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?\"\n                    }\n                ],\n                relevance: 0\n            }, g = [\n                \"false\",\n                \"null\",\n                \"true\"\n            ], u = [\n                \"__CLASS__\",\n                \"__DIR__\",\n                \"__FILE__\",\n                \"__FUNCTION__\",\n                \"__COMPILER_HALT_OFFSET__\",\n                \"__LINE__\",\n                \"__METHOD__\",\n                \"__NAMESPACE__\",\n                \"__TRAIT__\",\n                \"die\",\n                \"echo\",\n                \"exit\",\n                \"include\",\n                \"include_once\",\n                \"print\",\n                \"require\",\n                \"require_once\",\n                \"array\",\n                \"abstract\",\n                \"and\",\n                \"as\",\n                \"binary\",\n                \"bool\",\n                \"boolean\",\n                \"break\",\n                \"callable\",\n                \"case\",\n                \"catch\",\n                \"class\",\n                \"clone\",\n                \"const\",\n                \"continue\",\n                \"declare\",\n                \"default\",\n                \"do\",\n                \"double\",\n                \"else\",\n                \"elseif\",\n                \"empty\",\n                \"enddeclare\",\n                \"endfor\",\n                \"endforeach\",\n                \"endif\",\n                \"endswitch\",\n                \"endwhile\",\n                \"enum\",\n                \"eval\",\n                \"extends\",\n                \"final\",\n                \"finally\",\n                \"float\",\n                \"for\",\n                \"foreach\",\n                \"from\",\n                \"global\",\n                \"goto\",\n                \"if\",\n                \"implements\",\n                \"instanceof\",\n                \"insteadof\",\n                \"int\",\n                \"integer\",\n                \"interface\",\n                \"isset\",\n                \"iterable\",\n                \"list\",\n                \"match|0\",\n                \"mixed\",\n                \"new\",\n                \"never\",\n                \"object\",\n                \"or\",\n                \"private\",\n                \"protected\",\n                \"public\",\n                \"readonly\",\n                \"real\",\n                \"return\",\n                \"string\",\n                \"switch\",\n                \"throw\",\n                \"trait\",\n                \"try\",\n                \"unset\",\n                \"use\",\n                \"var\",\n                \"void\",\n                \"while\",\n                \"xor\",\n                \"yield\"\n            ], b = [\n                \"Error|0\",\n                \"AppendIterator\",\n                \"ArgumentCountError\",\n                \"ArithmeticError\",\n                \"ArrayIterator\",\n                \"ArrayObject\",\n                \"AssertionError\",\n                \"BadFunctionCallException\",\n                \"BadMethodCallException\",\n                \"CachingIterator\",\n                \"CallbackFilterIterator\",\n                \"CompileError\",\n                \"Countable\",\n                \"DirectoryIterator\",\n                \"DivisionByZeroError\",\n                \"DomainException\",\n                \"EmptyIterator\",\n                \"ErrorException\",\n                \"Exception\",\n                \"FilesystemIterator\",\n                \"FilterIterator\",\n                \"GlobIterator\",\n                \"InfiniteIterator\",\n                \"InvalidArgumentException\",\n                \"IteratorIterator\",\n                \"LengthException\",\n                \"LimitIterator\",\n                \"LogicException\",\n                \"MultipleIterator\",\n                \"NoRewindIterator\",\n                \"OutOfBoundsException\",\n                \"OutOfRangeException\",\n                \"OuterIterator\",\n                \"OverflowException\",\n                \"ParentIterator\",\n                \"ParseError\",\n                \"RangeException\",\n                \"RecursiveArrayIterator\",\n                \"RecursiveCachingIterator\",\n                \"RecursiveCallbackFilterIterator\",\n                \"RecursiveDirectoryIterator\",\n                \"RecursiveFilterIterator\",\n                \"RecursiveIterator\",\n                \"RecursiveIteratorIterator\",\n                \"RecursiveRegexIterator\",\n                \"RecursiveTreeIterator\",\n                \"RegexIterator\",\n                \"RuntimeException\",\n                \"SeekableIterator\",\n                \"SplDoublyLinkedList\",\n                \"SplFileInfo\",\n                \"SplFileObject\",\n                \"SplFixedArray\",\n                \"SplHeap\",\n                \"SplMaxHeap\",\n                \"SplMinHeap\",\n                \"SplObjectStorage\",\n                \"SplObserver\",\n                \"SplPriorityQueue\",\n                \"SplQueue\",\n                \"SplStack\",\n                \"SplSubject\",\n                \"SplTempFileObject\",\n                \"TypeError\",\n                \"UnderflowException\",\n                \"UnexpectedValueException\",\n                \"UnhandledMatchError\",\n                \"ArrayAccess\",\n                \"BackedEnum\",\n                \"Closure\",\n                \"Fiber\",\n                \"Generator\",\n                \"Iterator\",\n                \"IteratorAggregate\",\n                \"Serializable\",\n                \"Stringable\",\n                \"Throwable\",\n                \"Traversable\",\n                \"UnitEnum\",\n                \"WeakReference\",\n                \"WeakMap\",\n                \"Directory\",\n                \"__PHP_Incomplete_Class\",\n                \"parent\",\n                \"php_user_filter\",\n                \"self\",\n                \"static\",\n                \"stdClass\"\n            ], m = {\n                keyword: u,\n                literal: ((e)=>{\n                    const n = [];\n                    return e.forEach((e)=>{\n                        n.push(e), e.toLowerCase() === e ? n.push(e.toUpperCase()) : n.push(e.toLowerCase());\n                    }), n;\n                })(g),\n                built_in: b\n            }, p = (e)=>e.map((e)=>e.replace(/\\|\\d+$/, \"\")), _ = {\n                variants: [\n                    {\n                        match: [\n                            /new/,\n                            n.concat(l, \"+\"),\n                            n.concat(\"(?!\", p(b).join(\"\\\\b|\"), \"\\\\b)\"),\n                            i\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            4: \"title.class\"\n                        }\n                    }\n                ]\n            }, h = n.concat(a, \"\\\\b(?!\\\\()\"), f = {\n                variants: [\n                    {\n                        match: [\n                            n.concat(/::/, n.lookahead(/(?!class\\b)/)),\n                            h\n                        ],\n                        scope: {\n                            2: \"variable.constant\"\n                        }\n                    },\n                    {\n                        match: [\n                            /::/,\n                            /class/\n                        ],\n                        scope: {\n                            2: \"variable.language\"\n                        }\n                    },\n                    {\n                        match: [\n                            i,\n                            n.concat(/::/, n.lookahead(/(?!class\\b)/)),\n                            h\n                        ],\n                        scope: {\n                            1: \"title.class\",\n                            3: \"variable.constant\"\n                        }\n                    },\n                    {\n                        match: [\n                            i,\n                            n.concat(\"::\", n.lookahead(/(?!class\\b)/))\n                        ],\n                        scope: {\n                            1: \"title.class\"\n                        }\n                    },\n                    {\n                        match: [\n                            i,\n                            /::/,\n                            /class/\n                        ],\n                        scope: {\n                            1: \"title.class\",\n                            3: \"variable.language\"\n                        }\n                    }\n                ]\n            }, E = {\n                scope: \"attr\",\n                match: n.concat(a, n.lookahead(\":\"), n.lookahead(/(?!::)/))\n            }, y = {\n                relevance: 0,\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: m,\n                contains: [\n                    E,\n                    r,\n                    f,\n                    e.C_BLOCK_COMMENT_MODE,\n                    c,\n                    d,\n                    _\n                ]\n            }, N = {\n                relevance: 0,\n                match: [\n                    /\\b/,\n                    n.concat(\"(?!fn\\\\b|function\\\\b|\", p(u).join(\"\\\\b|\"), \"|\", p(b).join(\"\\\\b|\"), \"\\\\b)\"),\n                    a,\n                    n.concat(l, \"*\"),\n                    n.lookahead(/(?=\\()/)\n                ],\n                scope: {\n                    3: \"title.function.invoke\"\n                },\n                contains: [\n                    y\n                ]\n            };\n            y.contains.push(N);\n            const w = [\n                E,\n                f,\n                e.C_BLOCK_COMMENT_MODE,\n                c,\n                d,\n                _\n            ];\n            return {\n                case_insensitive: !1,\n                keywords: m,\n                contains: [\n                    {\n                        begin: n.concat(/#\\[\\s*/, i),\n                        beginScope: \"meta\",\n                        end: /]/,\n                        endScope: \"meta\",\n                        keywords: {\n                            literal: g,\n                            keyword: [\n                                \"new\",\n                                \"array\"\n                            ]\n                        },\n                        contains: [\n                            {\n                                begin: /\\[/,\n                                end: /]/,\n                                keywords: {\n                                    literal: g,\n                                    keyword: [\n                                        \"new\",\n                                        \"array\"\n                                    ]\n                                },\n                                contains: [\n                                    \"self\",\n                                    ...w\n                                ]\n                            },\n                            ...w,\n                            {\n                                scope: \"meta\",\n                                match: i\n                            }\n                        ]\n                    },\n                    e.HASH_COMMENT_MODE,\n                    e.COMMENT(\"//\", \"$\"),\n                    e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                        contains: [\n                            {\n                                scope: \"doctag\",\n                                match: \"@[A-Za-z]+\"\n                            }\n                        ]\n                    }),\n                    {\n                        match: /__halt_compiler\\(\\);/,\n                        keywords: \"__halt_compiler\",\n                        starts: {\n                            scope: \"comment\",\n                            end: e.MATCH_NOTHING_RE,\n                            contains: [\n                                {\n                                    match: /\\?>/,\n                                    scope: \"meta\",\n                                    endsParent: !0\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        scope: \"meta\",\n                        variants: [\n                            {\n                                begin: /<\\?php/,\n                                relevance: 10\n                            },\n                            {\n                                begin: /<\\?=/\n                            },\n                            {\n                                begin: /<\\?/,\n                                relevance: .1\n                            },\n                            {\n                                begin: /\\?>/\n                            }\n                        ]\n                    },\n                    {\n                        scope: \"variable.language\",\n                        match: /\\$this\\b/\n                    },\n                    r,\n                    N,\n                    f,\n                    {\n                        match: [\n                            /const/,\n                            /\\s/,\n                            a\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            3: \"variable.constant\"\n                        }\n                    },\n                    _,\n                    {\n                        scope: \"function\",\n                        relevance: 0,\n                        beginKeywords: \"fn function\",\n                        end: /[;{]/,\n                        excludeEnd: !0,\n                        illegal: \"[$%\\\\[]\",\n                        contains: [\n                            {\n                                beginKeywords: \"use\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE,\n                            {\n                                begin: \"=>\",\n                                endsParent: !0\n                            },\n                            {\n                                scope: \"params\",\n                                begin: \"\\\\(\",\n                                end: \"\\\\)\",\n                                excludeBegin: !0,\n                                excludeEnd: !0,\n                                keywords: m,\n                                contains: [\n                                    \"self\",\n                                    r,\n                                    f,\n                                    e.C_BLOCK_COMMENT_MODE,\n                                    c,\n                                    d\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        scope: \"class\",\n                        variants: [\n                            {\n                                beginKeywords: \"enum\",\n                                illegal: /[($\"]/\n                            },\n                            {\n                                beginKeywords: \"class interface trait\",\n                                illegal: /[:($\"]/\n                            }\n                        ],\n                        relevance: 0,\n                        end: /\\{/,\n                        excludeEnd: !0,\n                        contains: [\n                            {\n                                beginKeywords: \"extends implements\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE\n                        ]\n                    },\n                    {\n                        beginKeywords: \"namespace\",\n                        relevance: 0,\n                        end: \";\",\n                        illegal: /[.']/,\n                        contains: [\n                            e.inherit(e.UNDERSCORE_TITLE_MODE, {\n                                scope: \"title.class\"\n                            })\n                        ]\n                    },\n                    {\n                        beginKeywords: \"use\",\n                        relevance: 0,\n                        end: \";\",\n                        contains: [\n                            {\n                                match: /\\b(as|const|function)\\b/,\n                                scope: \"keyword\"\n                            },\n                            e.UNDERSCORE_TITLE_MODE\n                        ]\n                    },\n                    c,\n                    d\n                ]\n            };\n        },\n        grmr_php_template: (e)=>({\n                name: \"PHP template\",\n                subLanguage: \"xml\",\n                contains: [\n                    {\n                        begin: /<\\?(php|=)?/,\n                        end: /\\?>/,\n                        subLanguage: \"php\",\n                        contains: [\n                            {\n                                begin: \"/\\\\*\",\n                                end: \"\\\\*/\",\n                                skip: !0\n                            },\n                            {\n                                begin: 'b\"',\n                                end: '\"',\n                                skip: !0\n                            },\n                            {\n                                begin: \"b'\",\n                                end: \"'\",\n                                skip: !0\n                            },\n                            e.inherit(e.APOS_STRING_MODE, {\n                                illegal: null,\n                                className: null,\n                                contains: null,\n                                skip: !0\n                            }),\n                            e.inherit(e.QUOTE_STRING_MODE, {\n                                illegal: null,\n                                className: null,\n                                contains: null,\n                                skip: !0\n                            })\n                        ]\n                    }\n                ]\n            }),\n        grmr_plaintext: (e)=>({\n                name: \"Plain text\",\n                aliases: [\n                    \"text\",\n                    \"txt\"\n                ],\n                disableAutodetect: !0\n            }),\n        grmr_python: (e)=>{\n            const n = e.regex, t = /[\\p{XID_Start}_]\\p{XID_Continue}*/u, a = [\n                \"and\",\n                \"as\",\n                \"assert\",\n                \"async\",\n                \"await\",\n                \"break\",\n                \"case\",\n                \"class\",\n                \"continue\",\n                \"def\",\n                \"del\",\n                \"elif\",\n                \"else\",\n                \"except\",\n                \"finally\",\n                \"for\",\n                \"from\",\n                \"global\",\n                \"if\",\n                \"import\",\n                \"in\",\n                \"is\",\n                \"lambda\",\n                \"match\",\n                \"nonlocal|10\",\n                \"not\",\n                \"or\",\n                \"pass\",\n                \"raise\",\n                \"return\",\n                \"try\",\n                \"while\",\n                \"with\",\n                \"yield\"\n            ], i = {\n                $pattern: /[A-Za-z]\\w+|__\\w+__/,\n                keyword: a,\n                built_in: [\n                    \"__import__\",\n                    \"abs\",\n                    \"all\",\n                    \"any\",\n                    \"ascii\",\n                    \"bin\",\n                    \"bool\",\n                    \"breakpoint\",\n                    \"bytearray\",\n                    \"bytes\",\n                    \"callable\",\n                    \"chr\",\n                    \"classmethod\",\n                    \"compile\",\n                    \"complex\",\n                    \"delattr\",\n                    \"dict\",\n                    \"dir\",\n                    \"divmod\",\n                    \"enumerate\",\n                    \"eval\",\n                    \"exec\",\n                    \"filter\",\n                    \"float\",\n                    \"format\",\n                    \"frozenset\",\n                    \"getattr\",\n                    \"globals\",\n                    \"hasattr\",\n                    \"hash\",\n                    \"help\",\n                    \"hex\",\n                    \"id\",\n                    \"input\",\n                    \"int\",\n                    \"isinstance\",\n                    \"issubclass\",\n                    \"iter\",\n                    \"len\",\n                    \"list\",\n                    \"locals\",\n                    \"map\",\n                    \"max\",\n                    \"memoryview\",\n                    \"min\",\n                    \"next\",\n                    \"object\",\n                    \"oct\",\n                    \"open\",\n                    \"ord\",\n                    \"pow\",\n                    \"print\",\n                    \"property\",\n                    \"range\",\n                    \"repr\",\n                    \"reversed\",\n                    \"round\",\n                    \"set\",\n                    \"setattr\",\n                    \"slice\",\n                    \"sorted\",\n                    \"staticmethod\",\n                    \"str\",\n                    \"sum\",\n                    \"super\",\n                    \"tuple\",\n                    \"type\",\n                    \"vars\",\n                    \"zip\"\n                ],\n                literal: [\n                    \"__debug__\",\n                    \"Ellipsis\",\n                    \"False\",\n                    \"None\",\n                    \"NotImplemented\",\n                    \"True\"\n                ],\n                type: [\n                    \"Any\",\n                    \"Callable\",\n                    \"Coroutine\",\n                    \"Dict\",\n                    \"List\",\n                    \"Literal\",\n                    \"Generic\",\n                    \"Optional\",\n                    \"Sequence\",\n                    \"Set\",\n                    \"Tuple\",\n                    \"Type\",\n                    \"Union\"\n                ]\n            }, r = {\n                className: \"meta\",\n                begin: /^(>>>|\\.\\.\\.) /\n            }, s = {\n                className: \"subst\",\n                begin: /\\{/,\n                end: /\\}/,\n                keywords: i,\n                illegal: /#/\n            }, o = {\n                begin: /\\{\\{/,\n                relevance: 0\n            }, l = {\n                className: \"string\",\n                contains: [\n                    e.BACKSLASH_ESCAPE\n                ],\n                variants: [\n                    {\n                        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n                        end: /'''/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r\n                        ],\n                        relevance: 10\n                    },\n                    {\n                        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n                        end: /\"\"\"/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r\n                        ],\n                        relevance: 10\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n                        end: /'''/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r,\n                            o,\n                            s\n                        ]\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n                        end: /\"\"\"/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            r,\n                            o,\n                            s\n                        ]\n                    },\n                    {\n                        begin: /([uU]|[rR])'/,\n                        end: /'/,\n                        relevance: 10\n                    },\n                    {\n                        begin: /([uU]|[rR])\"/,\n                        end: /\"/,\n                        relevance: 10\n                    },\n                    {\n                        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n                        end: /'/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            o,\n                            s\n                        ]\n                    },\n                    {\n                        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n                        end: /\"/,\n                        contains: [\n                            e.BACKSLASH_ESCAPE,\n                            o,\n                            s\n                        ]\n                    },\n                    e.APOS_STRING_MODE,\n                    e.QUOTE_STRING_MODE\n                ]\n            }, c = \"[0-9](_?[0-9])*\", d = `(\\\\b(${c}))?\\\\.(${c})|\\\\b(${c})\\\\.`, g = \"\\\\b|\" + a.join(\"|\"), u = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: `(\\\\b(${c})|(${d}))[eE][+-]?(${c})[jJ]?(?=${g})`\n                    },\n                    {\n                        begin: `(${d})[jJ]?`\n                    },\n                    {\n                        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${g})`\n                    },\n                    {\n                        begin: `\\\\b(${c})[jJ](?=${g})`\n                    }\n                ]\n            }, b = {\n                className: \"comment\",\n                begin: n.lookahead(/# type:/),\n                end: /$/,\n                keywords: i,\n                contains: [\n                    {\n                        begin: /# type:/\n                    },\n                    {\n                        begin: /#/,\n                        end: /\\b\\B/,\n                        endsWithParent: !0\n                    }\n                ]\n            }, m = {\n                className: \"params\",\n                variants: [\n                    {\n                        className: \"\",\n                        begin: /\\(\\s*\\)/,\n                        skip: !0\n                    },\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        excludeBegin: !0,\n                        excludeEnd: !0,\n                        keywords: i,\n                        contains: [\n                            \"self\",\n                            r,\n                            u,\n                            l,\n                            e.HASH_COMMENT_MODE\n                        ]\n                    }\n                ]\n            };\n            return s.contains = [\n                l,\n                u,\n                r\n            ], {\n                name: \"Python\",\n                aliases: [\n                    \"py\",\n                    \"gyp\",\n                    \"ipython\"\n                ],\n                unicodeRegex: !0,\n                keywords: i,\n                illegal: /(<\\/|\\?)|=>/,\n                contains: [\n                    r,\n                    u,\n                    {\n                        begin: /\\bself\\b/\n                    },\n                    {\n                        beginKeywords: \"if\",\n                        relevance: 0\n                    },\n                    l,\n                    b,\n                    e.HASH_COMMENT_MODE,\n                    {\n                        match: [\n                            /\\bdef/,\n                            /\\s+/,\n                            t\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            3: \"title.function\"\n                        },\n                        contains: [\n                            m\n                        ]\n                    },\n                    {\n                        variants: [\n                            {\n                                match: [\n                                    /\\bclass/,\n                                    /\\s+/,\n                                    t,\n                                    /\\s*/,\n                                    /\\(\\s*/,\n                                    t,\n                                    /\\s*\\)/\n                                ]\n                            },\n                            {\n                                match: [\n                                    /\\bclass/,\n                                    /\\s+/,\n                                    t\n                                ]\n                            }\n                        ],\n                        scope: {\n                            1: \"keyword\",\n                            3: \"title.class\",\n                            6: \"title.class.inherited\"\n                        }\n                    },\n                    {\n                        className: \"meta\",\n                        begin: /^[\\t ]*@/,\n                        end: /(?=#)|$/,\n                        contains: [\n                            u,\n                            m,\n                            l\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_python_repl: (e)=>({\n                aliases: [\n                    \"pycon\"\n                ],\n                contains: [\n                    {\n                        className: \"meta.prompt\",\n                        starts: {\n                            end: / |$/,\n                            starts: {\n                                end: \"$\",\n                                subLanguage: \"python\"\n                            }\n                        },\n                        variants: [\n                            {\n                                begin: /^>>>(?=[ ]|$)/\n                            },\n                            {\n                                begin: /^\\.\\.\\.(?=[ ]|$)/\n                            }\n                        ]\n                    }\n                ]\n            }),\n        grmr_r: (e)=>{\n            const n = e.regex, t = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/, a = n.either(/0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/, /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/, /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/), i = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/, r = n.either(/[()]/, /[{}]/, /\\[\\[/, /[[\\]]/, /\\\\/, /,/);\n            return {\n                name: \"R\",\n                keywords: {\n                    $pattern: t,\n                    keyword: \"function if in break next repeat else for while\",\n                    literal: \"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10\",\n                    built_in: \"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm\"\n                },\n                contains: [\n                    e.COMMENT(/#'/, /$/, {\n                        contains: [\n                            {\n                                scope: \"doctag\",\n                                match: /@examples/,\n                                starts: {\n                                    end: n.lookahead(n.either(/\\n^#'\\s*(?=@[a-zA-Z]+)/, /\\n^(?!#')/)),\n                                    endsParent: !0\n                                }\n                            },\n                            {\n                                scope: \"doctag\",\n                                begin: \"@param\",\n                                end: /$/,\n                                contains: [\n                                    {\n                                        scope: \"variable\",\n                                        variants: [\n                                            {\n                                                match: t\n                                            },\n                                            {\n                                                match: /`(?:\\\\.|[^`\\\\])+`/\n                                            }\n                                        ],\n                                        endsParent: !0\n                                    }\n                                ]\n                            },\n                            {\n                                scope: \"doctag\",\n                                match: /@[a-zA-Z]+/\n                            },\n                            {\n                                scope: \"keyword\",\n                                match: /\\\\[a-zA-Z]+/\n                            }\n                        ]\n                    }),\n                    e.HASH_COMMENT_MODE,\n                    {\n                        scope: \"string\",\n                        contains: [\n                            e.BACKSLASH_ESCAPE\n                        ],\n                        variants: [\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]\"(-*)\\(/,\n                                end: /\\)(-*)\"/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]\"(-*)\\{/,\n                                end: /\\}(-*)\"/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]\"(-*)\\[/,\n                                end: /\\](-*)\"/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]'(-*)\\(/,\n                                end: /\\)(-*)'/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]'(-*)\\{/,\n                                end: /\\}(-*)'/\n                            }),\n                            e.END_SAME_AS_BEGIN({\n                                begin: /[rR]'(-*)\\[/,\n                                end: /\\](-*)'/\n                            }),\n                            {\n                                begin: '\"',\n                                end: '\"',\n                                relevance: 0\n                            },\n                            {\n                                begin: \"'\",\n                                end: \"'\",\n                                relevance: 0\n                            }\n                        ]\n                    },\n                    {\n                        relevance: 0,\n                        variants: [\n                            {\n                                scope: {\n                                    1: \"operator\",\n                                    2: \"number\"\n                                },\n                                match: [\n                                    i,\n                                    a\n                                ]\n                            },\n                            {\n                                scope: {\n                                    1: \"operator\",\n                                    2: \"number\"\n                                },\n                                match: [\n                                    /%[^%]*%/,\n                                    a\n                                ]\n                            },\n                            {\n                                scope: {\n                                    1: \"punctuation\",\n                                    2: \"number\"\n                                },\n                                match: [\n                                    r,\n                                    a\n                                ]\n                            },\n                            {\n                                scope: {\n                                    2: \"number\"\n                                },\n                                match: [\n                                    /[^a-zA-Z0-9._]|^/,\n                                    a\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        scope: {\n                            3: \"operator\"\n                        },\n                        match: [\n                            t,\n                            /\\s+/,\n                            /<-/,\n                            /\\s+/\n                        ]\n                    },\n                    {\n                        scope: \"operator\",\n                        relevance: 0,\n                        variants: [\n                            {\n                                match: i\n                            },\n                            {\n                                match: /%[^%]*%/\n                            }\n                        ]\n                    },\n                    {\n                        scope: \"punctuation\",\n                        relevance: 0,\n                        match: r\n                    },\n                    {\n                        begin: \"`\",\n                        end: \"`\",\n                        contains: [\n                            {\n                                begin: /\\\\./\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_ruby: (e)=>{\n            const n = e.regex, t = \"([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)\", a = n.either(/\\b([A-Z]+[a-z0-9]+)+/, /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/), i = n.concat(a, /(::\\w+)*/), r = {\n                \"variable.constant\": [\n                    \"__FILE__\",\n                    \"__LINE__\",\n                    \"__ENCODING__\"\n                ],\n                \"variable.language\": [\n                    \"self\",\n                    \"super\"\n                ],\n                keyword: [\n                    \"alias\",\n                    \"and\",\n                    \"begin\",\n                    \"BEGIN\",\n                    \"break\",\n                    \"case\",\n                    \"class\",\n                    \"defined\",\n                    \"do\",\n                    \"else\",\n                    \"elsif\",\n                    \"end\",\n                    \"END\",\n                    \"ensure\",\n                    \"for\",\n                    \"if\",\n                    \"in\",\n                    \"module\",\n                    \"next\",\n                    \"not\",\n                    \"or\",\n                    \"redo\",\n                    \"require\",\n                    \"rescue\",\n                    \"retry\",\n                    \"return\",\n                    \"then\",\n                    \"undef\",\n                    \"unless\",\n                    \"until\",\n                    \"when\",\n                    \"while\",\n                    \"yield\",\n                    \"include\",\n                    \"extend\",\n                    \"prepend\",\n                    \"public\",\n                    \"private\",\n                    \"protected\",\n                    \"raise\",\n                    \"throw\"\n                ],\n                built_in: [\n                    \"proc\",\n                    \"lambda\",\n                    \"attr_accessor\",\n                    \"attr_reader\",\n                    \"attr_writer\",\n                    \"define_method\",\n                    \"private_constant\",\n                    \"module_function\"\n                ],\n                literal: [\n                    \"true\",\n                    \"false\",\n                    \"nil\"\n                ]\n            }, s = {\n                className: \"doctag\",\n                begin: \"@[A-Za-z]+\"\n            }, o = {\n                begin: \"#<\",\n                end: \">\"\n            }, l = [\n                e.COMMENT(\"#\", \"$\", {\n                    contains: [\n                        s\n                    ]\n                }),\n                e.COMMENT(\"^=begin\", \"^=end\", {\n                    contains: [\n                        s\n                    ],\n                    relevance: 10\n                }),\n                e.COMMENT(\"^__END__\", e.MATCH_NOTHING_RE)\n            ], c = {\n                className: \"subst\",\n                begin: /#\\{/,\n                end: /\\}/,\n                keywords: r\n            }, d = {\n                className: \"string\",\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    c\n                ],\n                variants: [\n                    {\n                        begin: /'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /`/,\n                        end: /`/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\(/,\n                        end: /\\)/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\[/,\n                        end: /\\]/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\{/,\n                        end: /\\}/\n                    },\n                    {\n                        begin: /%[qQwWx]?</,\n                        end: />/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\//,\n                        end: /\\//\n                    },\n                    {\n                        begin: /%[qQwWx]?%/,\n                        end: /%/\n                    },\n                    {\n                        begin: /%[qQwWx]?-/,\n                        end: /-/\n                    },\n                    {\n                        begin: /%[qQwWx]?\\|/,\n                        end: /\\|/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\\\d{1,3})/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n                    },\n                    {\n                        begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n                    },\n                    {\n                        begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n                    },\n                    {\n                        begin: /\\B\\?\\\\?\\S/\n                    },\n                    {\n                        begin: n.concat(/<<[-~]?'?/, n.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),\n                        contains: [\n                            e.END_SAME_AS_BEGIN({\n                                begin: /(\\w+)/,\n                                end: /(\\w+)/,\n                                contains: [\n                                    e.BACKSLASH_ESCAPE,\n                                    c\n                                ]\n                            })\n                        ]\n                    }\n                ]\n            }, g = \"[0-9](_?[0-9])*\", u = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: `\\\\b([1-9](_?[0-9])*|0)(\\\\.(${g}))?([eE][+-]?(${g})|r)?i?\\\\b`\n                    },\n                    {\n                        begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n                    }\n                ]\n            }, b = {\n                variants: [\n                    {\n                        match: /\\(\\)/\n                    },\n                    {\n                        className: \"params\",\n                        begin: /\\(/,\n                        end: /(?=\\))/,\n                        excludeBegin: !0,\n                        endsParent: !0,\n                        keywords: r\n                    }\n                ]\n            }, m = [\n                d,\n                {\n                    variants: [\n                        {\n                            match: [\n                                /class\\s+/,\n                                i,\n                                /\\s+<\\s+/,\n                                i\n                            ]\n                        },\n                        {\n                            match: [\n                                /\\b(class|module)\\s+/,\n                                i\n                            ]\n                        }\n                    ],\n                    scope: {\n                        2: \"title.class\",\n                        4: \"title.class.inherited\"\n                    },\n                    keywords: r\n                },\n                {\n                    match: [\n                        /(include|extend)\\s+/,\n                        i\n                    ],\n                    scope: {\n                        2: \"title.class\"\n                    },\n                    keywords: r\n                },\n                {\n                    relevance: 0,\n                    match: [\n                        i,\n                        /\\.new[. (]/\n                    ],\n                    scope: {\n                        1: \"title.class\"\n                    }\n                },\n                {\n                    relevance: 0,\n                    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n                    className: \"variable.constant\"\n                },\n                {\n                    relevance: 0,\n                    match: a,\n                    scope: \"title.class\"\n                },\n                {\n                    match: [\n                        /def/,\n                        /\\s+/,\n                        t\n                    ],\n                    scope: {\n                        1: \"keyword\",\n                        3: \"title.function\"\n                    },\n                    contains: [\n                        b\n                    ]\n                },\n                {\n                    begin: e.IDENT_RE + \"::\"\n                },\n                {\n                    className: \"symbol\",\n                    begin: e.UNDERSCORE_IDENT_RE + \"(!|\\\\?)?:\",\n                    relevance: 0\n                },\n                {\n                    className: \"symbol\",\n                    begin: \":(?!\\\\s)\",\n                    contains: [\n                        d,\n                        {\n                            begin: t\n                        }\n                    ],\n                    relevance: 0\n                },\n                u,\n                {\n                    className: \"variable\",\n                    begin: \"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])\"\n                },\n                {\n                    className: \"params\",\n                    begin: /\\|/,\n                    end: /\\|/,\n                    excludeBegin: !0,\n                    excludeEnd: !0,\n                    relevance: 0,\n                    keywords: r\n                },\n                {\n                    begin: \"(\" + e.RE_STARTERS_RE + \"|unless)\\\\s*\",\n                    keywords: \"unless\",\n                    contains: [\n                        {\n                            className: \"regexp\",\n                            contains: [\n                                e.BACKSLASH_ESCAPE,\n                                c\n                            ],\n                            illegal: /\\n/,\n                            variants: [\n                                {\n                                    begin: \"/\",\n                                    end: \"/[a-z]*\"\n                                },\n                                {\n                                    begin: /%r\\{/,\n                                    end: /\\}[a-z]*/\n                                },\n                                {\n                                    begin: \"%r\\\\(\",\n                                    end: \"\\\\)[a-z]*\"\n                                },\n                                {\n                                    begin: \"%r!\",\n                                    end: \"![a-z]*\"\n                                },\n                                {\n                                    begin: \"%r\\\\[\",\n                                    end: \"\\\\][a-z]*\"\n                                }\n                            ]\n                        }\n                    ].concat(o, l),\n                    relevance: 0\n                }\n            ].concat(o, l);\n            c.contains = m, b.contains = m;\n            const p = [\n                {\n                    begin: /^\\s*=>/,\n                    starts: {\n                        end: \"$\",\n                        contains: m\n                    }\n                },\n                {\n                    className: \"meta.prompt\",\n                    begin: \"^([>?]>|[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>)(?=[ ])\",\n                    starts: {\n                        end: \"$\",\n                        keywords: r,\n                        contains: m\n                    }\n                }\n            ];\n            return l.unshift(o), {\n                name: \"Ruby\",\n                aliases: [\n                    \"rb\",\n                    \"gemspec\",\n                    \"podspec\",\n                    \"thor\",\n                    \"irb\"\n                ],\n                keywords: r,\n                illegal: /\\/\\*/,\n                contains: [\n                    e.SHEBANG({\n                        binary: \"ruby\"\n                    })\n                ].concat(p).concat(l).concat(m)\n            };\n        },\n        grmr_rust: (e)=>{\n            const n = e.regex, t = {\n                className: \"title.function.invoke\",\n                relevance: 0,\n                begin: n.concat(/\\b/, /(?!let\\b)/, e.IDENT_RE, n.lookahead(/\\s*\\(/))\n            }, a = \"([ui](8|16|32|64|128|size)|f(32|64))?\", i = [\n                \"drop \",\n                \"Copy\",\n                \"Send\",\n                \"Sized\",\n                \"Sync\",\n                \"Drop\",\n                \"Fn\",\n                \"FnMut\",\n                \"FnOnce\",\n                \"ToOwned\",\n                \"Clone\",\n                \"Debug\",\n                \"PartialEq\",\n                \"PartialOrd\",\n                \"Eq\",\n                \"Ord\",\n                \"AsRef\",\n                \"AsMut\",\n                \"Into\",\n                \"From\",\n                \"Default\",\n                \"Iterator\",\n                \"Extend\",\n                \"IntoIterator\",\n                \"DoubleEndedIterator\",\n                \"ExactSizeIterator\",\n                \"SliceConcatExt\",\n                \"ToString\",\n                \"assert!\",\n                \"assert_eq!\",\n                \"bitflags!\",\n                \"bytes!\",\n                \"cfg!\",\n                \"col!\",\n                \"concat!\",\n                \"concat_idents!\",\n                \"debug_assert!\",\n                \"debug_assert_eq!\",\n                \"env!\",\n                \"panic!\",\n                \"file!\",\n                \"format!\",\n                \"format_args!\",\n                \"include_bytes!\",\n                \"include_str!\",\n                \"line!\",\n                \"local_data_key!\",\n                \"module_path!\",\n                \"option_env!\",\n                \"print!\",\n                \"println!\",\n                \"select!\",\n                \"stringify!\",\n                \"try!\",\n                \"unimplemented!\",\n                \"unreachable!\",\n                \"vec!\",\n                \"write!\",\n                \"writeln!\",\n                \"macro_rules!\",\n                \"assert_ne!\",\n                \"debug_assert_ne!\"\n            ], r = [\n                \"i8\",\n                \"i16\",\n                \"i32\",\n                \"i64\",\n                \"i128\",\n                \"isize\",\n                \"u8\",\n                \"u16\",\n                \"u32\",\n                \"u64\",\n                \"u128\",\n                \"usize\",\n                \"f32\",\n                \"f64\",\n                \"str\",\n                \"char\",\n                \"bool\",\n                \"Box\",\n                \"Option\",\n                \"Result\",\n                \"String\",\n                \"Vec\"\n            ];\n            return {\n                name: \"Rust\",\n                aliases: [\n                    \"rs\"\n                ],\n                keywords: {\n                    $pattern: e.IDENT_RE + \"!?\",\n                    type: r,\n                    keyword: [\n                        \"abstract\",\n                        \"as\",\n                        \"async\",\n                        \"await\",\n                        \"become\",\n                        \"box\",\n                        \"break\",\n                        \"const\",\n                        \"continue\",\n                        \"crate\",\n                        \"do\",\n                        \"dyn\",\n                        \"else\",\n                        \"enum\",\n                        \"extern\",\n                        \"false\",\n                        \"final\",\n                        \"fn\",\n                        \"for\",\n                        \"if\",\n                        \"impl\",\n                        \"in\",\n                        \"let\",\n                        \"loop\",\n                        \"macro\",\n                        \"match\",\n                        \"mod\",\n                        \"move\",\n                        \"mut\",\n                        \"override\",\n                        \"priv\",\n                        \"pub\",\n                        \"ref\",\n                        \"return\",\n                        \"self\",\n                        \"Self\",\n                        \"static\",\n                        \"struct\",\n                        \"super\",\n                        \"trait\",\n                        \"true\",\n                        \"try\",\n                        \"type\",\n                        \"typeof\",\n                        \"unsafe\",\n                        \"unsized\",\n                        \"use\",\n                        \"virtual\",\n                        \"where\",\n                        \"while\",\n                        \"yield\"\n                    ],\n                    literal: [\n                        \"true\",\n                        \"false\",\n                        \"Some\",\n                        \"None\",\n                        \"Ok\",\n                        \"Err\"\n                    ],\n                    built_in: i\n                },\n                illegal: \"</\",\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                        contains: [\n                            \"self\"\n                        ]\n                    }),\n                    e.inherit(e.QUOTE_STRING_MODE, {\n                        begin: /b?\"/,\n                        illegal: null\n                    }),\n                    {\n                        className: \"string\",\n                        variants: [\n                            {\n                                begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/\n                            },\n                            {\n                                begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"symbol\",\n                        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n                    },\n                    {\n                        className: \"number\",\n                        variants: [\n                            {\n                                begin: \"\\\\b0b([01_]+)\" + a\n                            },\n                            {\n                                begin: \"\\\\b0o([0-7_]+)\" + a\n                            },\n                            {\n                                begin: \"\\\\b0x([A-Fa-f0-9_]+)\" + a\n                            },\n                            {\n                                begin: \"\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\" + a\n                            }\n                        ],\n                        relevance: 0\n                    },\n                    {\n                        begin: [\n                            /fn/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.function\"\n                        }\n                    },\n                    {\n                        className: \"meta\",\n                        begin: \"#!?\\\\[\",\n                        end: \"\\\\]\",\n                        contains: [\n                            {\n                                className: \"string\",\n                                begin: /\"/,\n                                end: /\"/\n                            }\n                        ]\n                    },\n                    {\n                        begin: [\n                            /let/,\n                            /\\s+/,\n                            /(?:mut\\s+)?/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"keyword\",\n                            4: \"variable\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /for/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE,\n                            /\\s+/,\n                            /in/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"variable\",\n                            5: \"keyword\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /type/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    },\n                    {\n                        begin: [\n                            /(?:trait|enum|struct|union|impl|for)/,\n                            /\\s+/,\n                            e.UNDERSCORE_IDENT_RE\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.class\"\n                        }\n                    },\n                    {\n                        begin: e.IDENT_RE + \"::\",\n                        keywords: {\n                            keyword: \"Self\",\n                            built_in: i,\n                            type: r\n                        }\n                    },\n                    {\n                        className: \"punctuation\",\n                        begin: \"->\"\n                    },\n                    t\n                ]\n            };\n        },\n        grmr_scss: (e)=>{\n            const n = ie(e), t = le, a = oe, i = \"@[a-z-]+\", r = {\n                className: \"variable\",\n                begin: \"(\\\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\\\b\",\n                relevance: 0\n            };\n            return {\n                name: \"SCSS\",\n                case_insensitive: !0,\n                illegal: \"[=/|']\",\n                contains: [\n                    e.C_LINE_COMMENT_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    n.CSS_NUMBER_MODE,\n                    {\n                        className: \"selector-id\",\n                        begin: \"#[A-Za-z0-9_-]+\",\n                        relevance: 0\n                    },\n                    {\n                        className: \"selector-class\",\n                        begin: \"\\\\.[A-Za-z0-9_-]+\",\n                        relevance: 0\n                    },\n                    n.ATTRIBUTE_SELECTOR_MODE,\n                    {\n                        className: \"selector-tag\",\n                        begin: \"\\\\b(\" + re.join(\"|\") + \")\\\\b\",\n                        relevance: 0\n                    },\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(\" + a.join(\"|\") + \")\"\n                    },\n                    {\n                        className: \"selector-pseudo\",\n                        begin: \":(:)?(\" + t.join(\"|\") + \")\"\n                    },\n                    r,\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            n.CSS_NUMBER_MODE\n                        ]\n                    },\n                    n.CSS_VARIABLE,\n                    {\n                        className: \"attribute\",\n                        begin: \"\\\\b(\" + ce.join(\"|\") + \")\\\\b\"\n                    },\n                    {\n                        begin: \"\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b\"\n                    },\n                    {\n                        begin: /:/,\n                        end: /[;}{]/,\n                        relevance: 0,\n                        contains: [\n                            n.BLOCK_COMMENT,\n                            r,\n                            n.HEXCOLOR,\n                            n.CSS_NUMBER_MODE,\n                            e.QUOTE_STRING_MODE,\n                            e.APOS_STRING_MODE,\n                            n.IMPORTANT,\n                            n.FUNCTION_DISPATCH\n                        ]\n                    },\n                    {\n                        begin: \"@(page|font-face)\",\n                        keywords: {\n                            $pattern: i,\n                            keyword: \"@page @font-face\"\n                        }\n                    },\n                    {\n                        begin: \"@\",\n                        end: \"[{;]\",\n                        returnBegin: !0,\n                        keywords: {\n                            $pattern: /[a-z-]+/,\n                            keyword: \"and or not only\",\n                            attribute: se.join(\" \")\n                        },\n                        contains: [\n                            {\n                                begin: i,\n                                className: \"keyword\"\n                            },\n                            {\n                                begin: /[a-z-]+(?=:)/,\n                                className: \"attribute\"\n                            },\n                            r,\n                            e.QUOTE_STRING_MODE,\n                            e.APOS_STRING_MODE,\n                            n.HEXCOLOR,\n                            n.CSS_NUMBER_MODE\n                        ]\n                    },\n                    n.FUNCTION_DISPATCH\n                ]\n            };\n        },\n        grmr_shell: (e)=>({\n                name: \"Shell Session\",\n                aliases: [\n                    \"console\",\n                    \"shellsession\"\n                ],\n                contains: [\n                    {\n                        className: \"meta.prompt\",\n                        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\n                        starts: {\n                            end: /[^\\\\](?=\\s*$)/,\n                            subLanguage: \"bash\"\n                        }\n                    }\n                ]\n            }),\n        grmr_sql: (e)=>{\n            const n = e.regex, t = e.COMMENT(\"--\", \"$\"), a = [\n                \"true\",\n                \"false\",\n                \"unknown\"\n            ], i = [\n                \"bigint\",\n                \"binary\",\n                \"blob\",\n                \"boolean\",\n                \"char\",\n                \"character\",\n                \"clob\",\n                \"date\",\n                \"dec\",\n                \"decfloat\",\n                \"decimal\",\n                \"float\",\n                \"int\",\n                \"integer\",\n                \"interval\",\n                \"nchar\",\n                \"nclob\",\n                \"national\",\n                \"numeric\",\n                \"real\",\n                \"row\",\n                \"smallint\",\n                \"time\",\n                \"timestamp\",\n                \"varchar\",\n                \"varying\",\n                \"varbinary\"\n            ], r = [\n                \"abs\",\n                \"acos\",\n                \"array_agg\",\n                \"asin\",\n                \"atan\",\n                \"avg\",\n                \"cast\",\n                \"ceil\",\n                \"ceiling\",\n                \"coalesce\",\n                \"corr\",\n                \"cos\",\n                \"cosh\",\n                \"count\",\n                \"covar_pop\",\n                \"covar_samp\",\n                \"cume_dist\",\n                \"dense_rank\",\n                \"deref\",\n                \"element\",\n                \"exp\",\n                \"extract\",\n                \"first_value\",\n                \"floor\",\n                \"json_array\",\n                \"json_arrayagg\",\n                \"json_exists\",\n                \"json_object\",\n                \"json_objectagg\",\n                \"json_query\",\n                \"json_table\",\n                \"json_table_primitive\",\n                \"json_value\",\n                \"lag\",\n                \"last_value\",\n                \"lead\",\n                \"listagg\",\n                \"ln\",\n                \"log\",\n                \"log10\",\n                \"lower\",\n                \"max\",\n                \"min\",\n                \"mod\",\n                \"nth_value\",\n                \"ntile\",\n                \"nullif\",\n                \"percent_rank\",\n                \"percentile_cont\",\n                \"percentile_disc\",\n                \"position\",\n                \"position_regex\",\n                \"power\",\n                \"rank\",\n                \"regr_avgx\",\n                \"regr_avgy\",\n                \"regr_count\",\n                \"regr_intercept\",\n                \"regr_r2\",\n                \"regr_slope\",\n                \"regr_sxx\",\n                \"regr_sxy\",\n                \"regr_syy\",\n                \"row_number\",\n                \"sin\",\n                \"sinh\",\n                \"sqrt\",\n                \"stddev_pop\",\n                \"stddev_samp\",\n                \"substring\",\n                \"substring_regex\",\n                \"sum\",\n                \"tan\",\n                \"tanh\",\n                \"translate\",\n                \"translate_regex\",\n                \"treat\",\n                \"trim\",\n                \"trim_array\",\n                \"unnest\",\n                \"upper\",\n                \"value_of\",\n                \"var_pop\",\n                \"var_samp\",\n                \"width_bucket\"\n            ], s = [\n                \"create table\",\n                \"insert into\",\n                \"primary key\",\n                \"foreign key\",\n                \"not null\",\n                \"alter table\",\n                \"add constraint\",\n                \"grouping sets\",\n                \"on overflow\",\n                \"character set\",\n                \"respect nulls\",\n                \"ignore nulls\",\n                \"nulls first\",\n                \"nulls last\",\n                \"depth first\",\n                \"breadth first\"\n            ], o = r, l = [\n                \"abs\",\n                \"acos\",\n                \"all\",\n                \"allocate\",\n                \"alter\",\n                \"and\",\n                \"any\",\n                \"are\",\n                \"array\",\n                \"array_agg\",\n                \"array_max_cardinality\",\n                \"as\",\n                \"asensitive\",\n                \"asin\",\n                \"asymmetric\",\n                \"at\",\n                \"atan\",\n                \"atomic\",\n                \"authorization\",\n                \"avg\",\n                \"begin\",\n                \"begin_frame\",\n                \"begin_partition\",\n                \"between\",\n                \"bigint\",\n                \"binary\",\n                \"blob\",\n                \"boolean\",\n                \"both\",\n                \"by\",\n                \"call\",\n                \"called\",\n                \"cardinality\",\n                \"cascaded\",\n                \"case\",\n                \"cast\",\n                \"ceil\",\n                \"ceiling\",\n                \"char\",\n                \"char_length\",\n                \"character\",\n                \"character_length\",\n                \"check\",\n                \"classifier\",\n                \"clob\",\n                \"close\",\n                \"coalesce\",\n                \"collate\",\n                \"collect\",\n                \"column\",\n                \"commit\",\n                \"condition\",\n                \"connect\",\n                \"constraint\",\n                \"contains\",\n                \"convert\",\n                \"copy\",\n                \"corr\",\n                \"corresponding\",\n                \"cos\",\n                \"cosh\",\n                \"count\",\n                \"covar_pop\",\n                \"covar_samp\",\n                \"create\",\n                \"cross\",\n                \"cube\",\n                \"cume_dist\",\n                \"current\",\n                \"current_catalog\",\n                \"current_date\",\n                \"current_default_transform_group\",\n                \"current_path\",\n                \"current_role\",\n                \"current_row\",\n                \"current_schema\",\n                \"current_time\",\n                \"current_timestamp\",\n                \"current_path\",\n                \"current_role\",\n                \"current_transform_group_for_type\",\n                \"current_user\",\n                \"cursor\",\n                \"cycle\",\n                \"date\",\n                \"day\",\n                \"deallocate\",\n                \"dec\",\n                \"decimal\",\n                \"decfloat\",\n                \"declare\",\n                \"default\",\n                \"define\",\n                \"delete\",\n                \"dense_rank\",\n                \"deref\",\n                \"describe\",\n                \"deterministic\",\n                \"disconnect\",\n                \"distinct\",\n                \"double\",\n                \"drop\",\n                \"dynamic\",\n                \"each\",\n                \"element\",\n                \"else\",\n                \"empty\",\n                \"end\",\n                \"end_frame\",\n                \"end_partition\",\n                \"end-exec\",\n                \"equals\",\n                \"escape\",\n                \"every\",\n                \"except\",\n                \"exec\",\n                \"execute\",\n                \"exists\",\n                \"exp\",\n                \"external\",\n                \"extract\",\n                \"false\",\n                \"fetch\",\n                \"filter\",\n                \"first_value\",\n                \"float\",\n                \"floor\",\n                \"for\",\n                \"foreign\",\n                \"frame_row\",\n                \"free\",\n                \"from\",\n                \"full\",\n                \"function\",\n                \"fusion\",\n                \"get\",\n                \"global\",\n                \"grant\",\n                \"group\",\n                \"grouping\",\n                \"groups\",\n                \"having\",\n                \"hold\",\n                \"hour\",\n                \"identity\",\n                \"in\",\n                \"indicator\",\n                \"initial\",\n                \"inner\",\n                \"inout\",\n                \"insensitive\",\n                \"insert\",\n                \"int\",\n                \"integer\",\n                \"intersect\",\n                \"intersection\",\n                \"interval\",\n                \"into\",\n                \"is\",\n                \"join\",\n                \"json_array\",\n                \"json_arrayagg\",\n                \"json_exists\",\n                \"json_object\",\n                \"json_objectagg\",\n                \"json_query\",\n                \"json_table\",\n                \"json_table_primitive\",\n                \"json_value\",\n                \"lag\",\n                \"language\",\n                \"large\",\n                \"last_value\",\n                \"lateral\",\n                \"lead\",\n                \"leading\",\n                \"left\",\n                \"like\",\n                \"like_regex\",\n                \"listagg\",\n                \"ln\",\n                \"local\",\n                \"localtime\",\n                \"localtimestamp\",\n                \"log\",\n                \"log10\",\n                \"lower\",\n                \"match\",\n                \"match_number\",\n                \"match_recognize\",\n                \"matches\",\n                \"max\",\n                \"member\",\n                \"merge\",\n                \"method\",\n                \"min\",\n                \"minute\",\n                \"mod\",\n                \"modifies\",\n                \"module\",\n                \"month\",\n                \"multiset\",\n                \"national\",\n                \"natural\",\n                \"nchar\",\n                \"nclob\",\n                \"new\",\n                \"no\",\n                \"none\",\n                \"normalize\",\n                \"not\",\n                \"nth_value\",\n                \"ntile\",\n                \"null\",\n                \"nullif\",\n                \"numeric\",\n                \"octet_length\",\n                \"occurrences_regex\",\n                \"of\",\n                \"offset\",\n                \"old\",\n                \"omit\",\n                \"on\",\n                \"one\",\n                \"only\",\n                \"open\",\n                \"or\",\n                \"order\",\n                \"out\",\n                \"outer\",\n                \"over\",\n                \"overlaps\",\n                \"overlay\",\n                \"parameter\",\n                \"partition\",\n                \"pattern\",\n                \"per\",\n                \"percent\",\n                \"percent_rank\",\n                \"percentile_cont\",\n                \"percentile_disc\",\n                \"period\",\n                \"portion\",\n                \"position\",\n                \"position_regex\",\n                \"power\",\n                \"precedes\",\n                \"precision\",\n                \"prepare\",\n                \"primary\",\n                \"procedure\",\n                \"ptf\",\n                \"range\",\n                \"rank\",\n                \"reads\",\n                \"real\",\n                \"recursive\",\n                \"ref\",\n                \"references\",\n                \"referencing\",\n                \"regr_avgx\",\n                \"regr_avgy\",\n                \"regr_count\",\n                \"regr_intercept\",\n                \"regr_r2\",\n                \"regr_slope\",\n                \"regr_sxx\",\n                \"regr_sxy\",\n                \"regr_syy\",\n                \"release\",\n                \"result\",\n                \"return\",\n                \"returns\",\n                \"revoke\",\n                \"right\",\n                \"rollback\",\n                \"rollup\",\n                \"row\",\n                \"row_number\",\n                \"rows\",\n                \"running\",\n                \"savepoint\",\n                \"scope\",\n                \"scroll\",\n                \"search\",\n                \"second\",\n                \"seek\",\n                \"select\",\n                \"sensitive\",\n                \"session_user\",\n                \"set\",\n                \"show\",\n                \"similar\",\n                \"sin\",\n                \"sinh\",\n                \"skip\",\n                \"smallint\",\n                \"some\",\n                \"specific\",\n                \"specifictype\",\n                \"sql\",\n                \"sqlexception\",\n                \"sqlstate\",\n                \"sqlwarning\",\n                \"sqrt\",\n                \"start\",\n                \"static\",\n                \"stddev_pop\",\n                \"stddev_samp\",\n                \"submultiset\",\n                \"subset\",\n                \"substring\",\n                \"substring_regex\",\n                \"succeeds\",\n                \"sum\",\n                \"symmetric\",\n                \"system\",\n                \"system_time\",\n                \"system_user\",\n                \"table\",\n                \"tablesample\",\n                \"tan\",\n                \"tanh\",\n                \"then\",\n                \"time\",\n                \"timestamp\",\n                \"timezone_hour\",\n                \"timezone_minute\",\n                \"to\",\n                \"trailing\",\n                \"translate\",\n                \"translate_regex\",\n                \"translation\",\n                \"treat\",\n                \"trigger\",\n                \"trim\",\n                \"trim_array\",\n                \"true\",\n                \"truncate\",\n                \"uescape\",\n                \"union\",\n                \"unique\",\n                \"unknown\",\n                \"unnest\",\n                \"update\",\n                \"upper\",\n                \"user\",\n                \"using\",\n                \"value\",\n                \"values\",\n                \"value_of\",\n                \"var_pop\",\n                \"var_samp\",\n                \"varbinary\",\n                \"varchar\",\n                \"varying\",\n                \"versioning\",\n                \"when\",\n                \"whenever\",\n                \"where\",\n                \"width_bucket\",\n                \"window\",\n                \"with\",\n                \"within\",\n                \"without\",\n                \"year\",\n                \"add\",\n                \"asc\",\n                \"collation\",\n                \"desc\",\n                \"final\",\n                \"first\",\n                \"last\",\n                \"view\"\n            ].filter((e)=>!r.includes(e)), c = {\n                begin: n.concat(/\\b/, n.either(...o), /\\s*\\(/),\n                relevance: 0,\n                keywords: {\n                    built_in: o\n                }\n            };\n            return {\n                name: \"SQL\",\n                case_insensitive: !0,\n                illegal: /[{}]|<\\//,\n                keywords: {\n                    $pattern: /\\b[\\w\\.]+/,\n                    keyword: ((e, { exceptions: n, when: t } = {})=>{\n                        const a = t;\n                        return n = n || [], e.map((e)=>e.match(/\\|\\d+$/) || n.includes(e) ? e : a(e) ? e + \"|0\" : e);\n                    })(l, {\n                        when: (e)=>e.length < 3\n                    }),\n                    literal: a,\n                    type: i,\n                    built_in: [\n                        \"current_catalog\",\n                        \"current_date\",\n                        \"current_default_transform_group\",\n                        \"current_path\",\n                        \"current_role\",\n                        \"current_schema\",\n                        \"current_transform_group_for_type\",\n                        \"current_user\",\n                        \"session_user\",\n                        \"system_time\",\n                        \"system_user\",\n                        \"current_time\",\n                        \"localtime\",\n                        \"current_timestamp\",\n                        \"localtimestamp\"\n                    ]\n                },\n                contains: [\n                    {\n                        begin: n.either(...s),\n                        relevance: 0,\n                        keywords: {\n                            $pattern: /[\\w\\.]+/,\n                            keyword: l.concat(s),\n                            literal: a,\n                            type: i\n                        }\n                    },\n                    {\n                        className: \"type\",\n                        begin: n.either(\"double precision\", \"large object\", \"with timezone\", \"without timezone\")\n                    },\n                    c,\n                    {\n                        className: \"variable\",\n                        begin: /@[a-z0-9][a-z0-9_]*/\n                    },\n                    {\n                        className: \"string\",\n                        variants: [\n                            {\n                                begin: /'/,\n                                end: /'/,\n                                contains: [\n                                    {\n                                        begin: /''/\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/,\n                        contains: [\n                            {\n                                begin: /\"\"/\n                            }\n                        ]\n                    },\n                    e.C_NUMBER_MODE,\n                    e.C_BLOCK_COMMENT_MODE,\n                    t,\n                    {\n                        className: \"operator\",\n                        begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n                        relevance: 0\n                    }\n                ]\n            };\n        },\n        grmr_swift: (e)=>{\n            const n = {\n                match: /\\s+/,\n                relevance: 0\n            }, t = e.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n                contains: [\n                    \"self\"\n                ]\n            }), a = [\n                e.C_LINE_COMMENT_MODE,\n                t\n            ], i = {\n                match: [\n                    /\\./,\n                    m(...xe, ...Me)\n                ],\n                className: {\n                    2: \"keyword\"\n                }\n            }, r = {\n                match: b(/\\./, m(...Ae)),\n                relevance: 0\n            }, s = Ae.filter((e)=>\"string\" == typeof e).concat([\n                \"_|0\"\n            ]), o = {\n                variants: [\n                    {\n                        className: \"keyword\",\n                        match: m(...Ae.filter((e)=>\"string\" != typeof e).concat(Se).map(ke), ...Me)\n                    }\n                ]\n            }, l = {\n                $pattern: m(/\\b\\w+/, /#\\w+/),\n                keyword: s.concat(Re),\n                literal: Ce\n            }, c = [\n                i,\n                r,\n                o\n            ], g = [\n                {\n                    match: b(/\\./, m(...De)),\n                    relevance: 0\n                },\n                {\n                    className: \"built_in\",\n                    match: b(/\\b/, m(...De), /(?=\\()/)\n                }\n            ], u = {\n                match: /->/,\n                relevance: 0\n            }, p = [\n                u,\n                {\n                    className: \"operator\",\n                    relevance: 0,\n                    variants: [\n                        {\n                            match: Be\n                        },\n                        {\n                            match: `\\\\.(\\\\.|${Le})+`\n                        }\n                    ]\n                }\n            ], _ = \"([0-9]_*)+\", h = \"([0-9a-fA-F]_*)+\", f = {\n                className: \"number\",\n                relevance: 0,\n                variants: [\n                    {\n                        match: `\\\\b(${_})(\\\\.(${_}))?([eE][+-]?(${_}))?\\\\b`\n                    },\n                    {\n                        match: `\\\\b0x(${h})(\\\\.(${h}))?([pP][+-]?(${_}))?\\\\b`\n                    },\n                    {\n                        match: /\\b0o([0-7]_*)+\\b/\n                    },\n                    {\n                        match: /\\b0b([01]_*)+\\b/\n                    }\n                ]\n            }, E = (e = \"\")=>({\n                    className: \"subst\",\n                    variants: [\n                        {\n                            match: b(/\\\\/, e, /[0\\\\tnr\"']/)\n                        },\n                        {\n                            match: b(/\\\\/, e, /u\\{[0-9a-fA-F]{1,8}\\}/)\n                        }\n                    ]\n                }), y = (e = \"\")=>({\n                    className: \"subst\",\n                    match: b(/\\\\/, e, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n                }), N = (e = \"\")=>({\n                    className: \"subst\",\n                    label: \"interpol\",\n                    begin: b(/\\\\/, e, /\\(/),\n                    end: /\\)/\n                }), w = (e = \"\")=>({\n                    begin: b(e, /\"\"\"/),\n                    end: b(/\"\"\"/, e),\n                    contains: [\n                        E(e),\n                        y(e),\n                        N(e)\n                    ]\n                }), v = (e = \"\")=>({\n                    begin: b(e, /\"/),\n                    end: b(/\"/, e),\n                    contains: [\n                        E(e),\n                        N(e)\n                    ]\n                }), O = {\n                className: \"string\",\n                variants: [\n                    w(),\n                    w(\"#\"),\n                    w(\"##\"),\n                    w(\"###\"),\n                    v(),\n                    v(\"#\"),\n                    v(\"##\"),\n                    v(\"###\")\n                ]\n            }, k = {\n                match: b(/`/, Fe, /`/)\n            }, x = [\n                k,\n                {\n                    className: \"variable\",\n                    match: /\\$\\d+/\n                },\n                {\n                    className: \"variable\",\n                    match: `\\\\$${ze}+`\n                }\n            ], M = [\n                {\n                    match: /(@|#(un)?)available/,\n                    className: \"keyword\",\n                    starts: {\n                        contains: [\n                            {\n                                begin: /\\(/,\n                                end: /\\)/,\n                                keywords: Pe,\n                                contains: [\n                                    ...p,\n                                    f,\n                                    O\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    className: \"keyword\",\n                    match: b(/@/, m(...je))\n                },\n                {\n                    className: \"meta\",\n                    match: b(/@/, Fe)\n                }\n            ], S = {\n                match: d(/\\b[A-Z]/),\n                relevance: 0,\n                contains: [\n                    {\n                        className: \"type\",\n                        match: b(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, ze, \"+\")\n                    },\n                    {\n                        className: \"type\",\n                        match: Ue,\n                        relevance: 0\n                    },\n                    {\n                        match: /[?!]+/,\n                        relevance: 0\n                    },\n                    {\n                        match: /\\.\\.\\./,\n                        relevance: 0\n                    },\n                    {\n                        match: b(/\\s+&\\s+/, d(Ue)),\n                        relevance: 0\n                    }\n                ]\n            }, A = {\n                begin: /</,\n                end: />/,\n                keywords: l,\n                contains: [\n                    ...a,\n                    ...c,\n                    ...M,\n                    u,\n                    S\n                ]\n            };\n            S.contains.push(A);\n            const C = {\n                begin: /\\(/,\n                end: /\\)/,\n                relevance: 0,\n                keywords: l,\n                contains: [\n                    \"self\",\n                    {\n                        match: b(Fe, /\\s*:/),\n                        keywords: \"_|0\",\n                        relevance: 0\n                    },\n                    ...a,\n                    ...c,\n                    ...g,\n                    ...p,\n                    f,\n                    O,\n                    ...x,\n                    ...M,\n                    S\n                ]\n            }, T = {\n                begin: /</,\n                end: />/,\n                contains: [\n                    ...a,\n                    S\n                ]\n            }, R = {\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: l,\n                contains: [\n                    {\n                        begin: m(d(b(Fe, /\\s*:/)), d(b(Fe, /\\s+/, Fe, /\\s*:/))),\n                        end: /:/,\n                        relevance: 0,\n                        contains: [\n                            {\n                                className: \"keyword\",\n                                match: /\\b_\\b/\n                            },\n                            {\n                                className: \"params\",\n                                match: Fe\n                            }\n                        ]\n                    },\n                    ...a,\n                    ...c,\n                    ...p,\n                    f,\n                    O,\n                    ...M,\n                    S,\n                    C\n                ],\n                endsParent: !0,\n                illegal: /[\"']/\n            }, D = {\n                match: [\n                    /func/,\n                    /\\s+/,\n                    m(k.match, Fe, Be)\n                ],\n                className: {\n                    1: \"keyword\",\n                    3: \"title.function\"\n                },\n                contains: [\n                    T,\n                    R,\n                    n\n                ],\n                illegal: [\n                    /\\[/,\n                    /%/\n                ]\n            }, I = {\n                match: [\n                    /\\b(?:subscript|init[?!]?)/,\n                    /\\s*(?=[<(])/\n                ],\n                className: {\n                    1: \"keyword\"\n                },\n                contains: [\n                    T,\n                    R,\n                    n\n                ],\n                illegal: /\\[|%/\n            }, L = {\n                match: [\n                    /operator/,\n                    /\\s+/,\n                    Be\n                ],\n                className: {\n                    1: \"keyword\",\n                    3: \"title\"\n                }\n            }, B = {\n                begin: [\n                    /precedencegroup/,\n                    /\\s+/,\n                    Ue\n                ],\n                className: {\n                    1: \"keyword\",\n                    3: \"title\"\n                },\n                contains: [\n                    S\n                ],\n                keywords: [\n                    ...Te,\n                    ...Ce\n                ],\n                end: /}/\n            };\n            for (const e of O.variants){\n                const n = e.contains.find((e)=>\"interpol\" === e.label);\n                n.keywords = l;\n                const t = [\n                    ...c,\n                    ...g,\n                    ...p,\n                    f,\n                    O,\n                    ...x\n                ];\n                n.contains = [\n                    ...t,\n                    {\n                        begin: /\\(/,\n                        end: /\\)/,\n                        contains: [\n                            \"self\",\n                            ...t\n                        ]\n                    }\n                ];\n            }\n            return {\n                name: \"Swift\",\n                keywords: l,\n                contains: [\n                    ...a,\n                    D,\n                    I,\n                    {\n                        beginKeywords: \"struct protocol class extension enum actor\",\n                        end: \"\\\\{\",\n                        excludeEnd: !0,\n                        keywords: l,\n                        contains: [\n                            e.inherit(e.TITLE_MODE, {\n                                className: \"title.class\",\n                                begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/\n                            }),\n                            ...c\n                        ]\n                    },\n                    L,\n                    B,\n                    {\n                        beginKeywords: \"import\",\n                        end: /$/,\n                        contains: [\n                            ...a\n                        ],\n                        relevance: 0\n                    },\n                    ...c,\n                    ...g,\n                    ...p,\n                    f,\n                    O,\n                    ...x,\n                    ...M,\n                    S,\n                    C\n                ]\n            };\n        },\n        grmr_typescript: (e)=>{\n            const n = Oe(e), t = _e, a = [\n                \"any\",\n                \"void\",\n                \"number\",\n                \"boolean\",\n                \"string\",\n                \"object\",\n                \"never\",\n                \"symbol\",\n                \"bigint\",\n                \"unknown\"\n            ], i = {\n                beginKeywords: \"namespace\",\n                end: /\\{/,\n                excludeEnd: !0,\n                contains: [\n                    n.exports.CLASS_REFERENCE\n                ]\n            }, r = {\n                beginKeywords: \"interface\",\n                end: /\\{/,\n                excludeEnd: !0,\n                keywords: {\n                    keyword: \"interface extends\",\n                    built_in: a\n                },\n                contains: [\n                    n.exports.CLASS_REFERENCE\n                ]\n            }, s = {\n                $pattern: _e,\n                keyword: he.concat([\n                    \"type\",\n                    \"namespace\",\n                    \"interface\",\n                    \"public\",\n                    \"private\",\n                    \"protected\",\n                    \"implements\",\n                    \"declare\",\n                    \"abstract\",\n                    \"readonly\",\n                    \"enum\",\n                    \"override\"\n                ]),\n                literal: fe,\n                built_in: ve.concat(a),\n                \"variable.language\": we\n            }, o = {\n                className: \"meta\",\n                begin: \"@\" + t\n            }, l = (e, n, t)=>{\n                const a = e.contains.findIndex((e)=>e.label === n);\n                if (-1 === a) throw Error(\"can not find mode to replace\");\n                e.contains.splice(a, 1, t);\n            };\n            return Object.assign(n.keywords, s), n.exports.PARAMS_CONTAINS.push(o), n.contains = n.contains.concat([\n                o,\n                i,\n                r\n            ]), l(n, \"shebang\", e.SHEBANG()), l(n, \"use_strict\", {\n                className: \"meta\",\n                relevance: 10,\n                begin: /^\\s*['\"]use strict['\"]/\n            }), n.contains.find((e)=>\"func.def\" === e.label).relevance = 0, Object.assign(n, {\n                name: \"TypeScript\",\n                aliases: [\n                    \"ts\",\n                    \"tsx\",\n                    \"mts\",\n                    \"cts\"\n                ]\n            }), n;\n        },\n        grmr_vbnet: (e)=>{\n            const n = e.regex, t = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/, a = /\\d{4}-\\d{1,2}-\\d{1,2}/, i = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/, r = /\\d{1,2}(:\\d{1,2}){1,2}/, s = {\n                className: \"literal\",\n                variants: [\n                    {\n                        begin: n.concat(/# */, n.either(a, t), / *#/)\n                    },\n                    {\n                        begin: n.concat(/# */, r, / *#/)\n                    },\n                    {\n                        begin: n.concat(/# */, i, / *#/)\n                    },\n                    {\n                        begin: n.concat(/# */, n.either(a, t), / +/, n.either(i, r), / *#/)\n                    }\n                ]\n            }, o = e.COMMENT(/'''/, /$/, {\n                contains: [\n                    {\n                        className: \"doctag\",\n                        begin: /<\\/?/,\n                        end: />/\n                    }\n                ]\n            }), l = e.COMMENT(null, /$/, {\n                variants: [\n                    {\n                        begin: /'/\n                    },\n                    {\n                        begin: /([\\t ]|^)REM(?=\\s)/\n                    }\n                ]\n            });\n            return {\n                name: \"Visual Basic .NET\",\n                aliases: [\n                    \"vb\"\n                ],\n                case_insensitive: !0,\n                classNameAliases: {\n                    label: \"symbol\"\n                },\n                keywords: {\n                    keyword: \"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield\",\n                    built_in: \"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort\",\n                    type: \"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort\",\n                    literal: \"true false nothing\"\n                },\n                illegal: \"//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ \",\n                contains: [\n                    {\n                        className: \"string\",\n                        begin: /\"(\"\"|[^/n])\"C\\b/\n                    },\n                    {\n                        className: \"string\",\n                        begin: /\"/,\n                        end: /\"/,\n                        illegal: /\\n/,\n                        contains: [\n                            {\n                                begin: /\"\"/\n                            }\n                        ]\n                    },\n                    s,\n                    {\n                        className: \"number\",\n                        relevance: 0,\n                        variants: [\n                            {\n                                begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/\n                            },\n                            {\n                                begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/\n                            },\n                            {\n                                begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/\n                            },\n                            {\n                                begin: /&O[0-7_]+((U?[SIL])|[%&])?/\n                            },\n                            {\n                                begin: /&B[01_]+((U?[SIL])|[%&])?/\n                            }\n                        ]\n                    },\n                    {\n                        className: \"label\",\n                        begin: /^\\w+:/\n                    },\n                    o,\n                    l,\n                    {\n                        className: \"meta\",\n                        begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n                        end: /$/,\n                        keywords: {\n                            keyword: \"const disable else elseif enable end externalsource if region then\"\n                        },\n                        contains: [\n                            l\n                        ]\n                    }\n                ]\n            };\n        },\n        grmr_wasm: (e)=>{\n            e.regex;\n            const n = e.COMMENT(/\\(;/, /;\\)/);\n            return n.contains.push(\"self\"), {\n                name: \"WebAssembly\",\n                keywords: {\n                    $pattern: /[\\w.]+/,\n                    keyword: [\n                        \"anyfunc\",\n                        \"block\",\n                        \"br\",\n                        \"br_if\",\n                        \"br_table\",\n                        \"call\",\n                        \"call_indirect\",\n                        \"data\",\n                        \"drop\",\n                        \"elem\",\n                        \"else\",\n                        \"end\",\n                        \"export\",\n                        \"func\",\n                        \"global.get\",\n                        \"global.set\",\n                        \"local.get\",\n                        \"local.set\",\n                        \"local.tee\",\n                        \"get_global\",\n                        \"get_local\",\n                        \"global\",\n                        \"if\",\n                        \"import\",\n                        \"local\",\n                        \"loop\",\n                        \"memory\",\n                        \"memory.grow\",\n                        \"memory.size\",\n                        \"module\",\n                        \"mut\",\n                        \"nop\",\n                        \"offset\",\n                        \"param\",\n                        \"result\",\n                        \"return\",\n                        \"select\",\n                        \"set_global\",\n                        \"set_local\",\n                        \"start\",\n                        \"table\",\n                        \"tee_local\",\n                        \"then\",\n                        \"type\",\n                        \"unreachable\"\n                    ]\n                },\n                contains: [\n                    e.COMMENT(/;;/, /$/),\n                    n,\n                    {\n                        match: [\n                            /(?:offset|align)/,\n                            /\\s*/,\n                            /=/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"operator\"\n                        }\n                    },\n                    {\n                        className: \"variable\",\n                        begin: /\\$[\\w_]+/\n                    },\n                    {\n                        match: /(\\((?!;)|\\))+/,\n                        className: \"punctuation\",\n                        relevance: 0\n                    },\n                    {\n                        begin: [\n                            /(?:func|call|call_indirect)/,\n                            /\\s+/,\n                            /\\$[^\\s)]+/\n                        ],\n                        className: {\n                            1: \"keyword\",\n                            3: \"title.function\"\n                        }\n                    },\n                    e.QUOTE_STRING_MODE,\n                    {\n                        match: /(i32|i64|f32|f64)(?!\\.)/,\n                        className: \"type\"\n                    },\n                    {\n                        className: \"keyword\",\n                        match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n                    },\n                    {\n                        className: \"number\",\n                        relevance: 0,\n                        match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n                    }\n                ]\n            };\n        },\n        grmr_yaml: (e)=>{\n            const n = \"true false yes no null\", t = \"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\", a = {\n                className: \"string\",\n                relevance: 0,\n                variants: [\n                    {\n                        begin: /'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /\\S+/\n                    }\n                ],\n                contains: [\n                    e.BACKSLASH_ESCAPE,\n                    {\n                        className: \"template-variable\",\n                        variants: [\n                            {\n                                begin: /\\{\\{/,\n                                end: /\\}\\}/\n                            },\n                            {\n                                begin: /%\\{/,\n                                end: /\\}/\n                            }\n                        ]\n                    }\n                ]\n            }, i = e.inherit(a, {\n                variants: [\n                    {\n                        begin: /'/,\n                        end: /'/\n                    },\n                    {\n                        begin: /\"/,\n                        end: /\"/\n                    },\n                    {\n                        begin: /[^\\s,{}[\\]]+/\n                    }\n                ]\n            }), r = {\n                end: \",\",\n                endsWithParent: !0,\n                excludeEnd: !0,\n                keywords: n,\n                relevance: 0\n            }, s = {\n                begin: /\\{/,\n                end: /\\}/,\n                contains: [\n                    r\n                ],\n                illegal: \"\\\\n\",\n                relevance: 0\n            }, o = {\n                begin: \"\\\\[\",\n                end: \"\\\\]\",\n                contains: [\n                    r\n                ],\n                illegal: \"\\\\n\",\n                relevance: 0\n            }, l = [\n                {\n                    className: \"attr\",\n                    variants: [\n                        {\n                            begin: \"\\\\w[\\\\w :\\\\/.-]*:(?=[ \t]|$)\"\n                        },\n                        {\n                            begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \t]|$)'\n                        },\n                        {\n                            begin: \"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \t]|$)\"\n                        }\n                    ]\n                },\n                {\n                    className: \"meta\",\n                    begin: \"^---\\\\s*$\",\n                    relevance: 10\n                },\n                {\n                    className: \"string\",\n                    begin: \"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"\n                },\n                {\n                    begin: \"<%[%=-]?\",\n                    end: \"[%-]?%>\",\n                    subLanguage: \"ruby\",\n                    excludeBegin: !0,\n                    excludeEnd: !0,\n                    relevance: 0\n                },\n                {\n                    className: \"type\",\n                    begin: \"!\\\\w+!\" + t\n                },\n                {\n                    className: \"type\",\n                    begin: \"!<\" + t + \">\"\n                },\n                {\n                    className: \"type\",\n                    begin: \"!\" + t\n                },\n                {\n                    className: \"type\",\n                    begin: \"!!\" + t\n                },\n                {\n                    className: \"meta\",\n                    begin: \"&\" + e.UNDERSCORE_IDENT_RE + \"$\"\n                },\n                {\n                    className: \"meta\",\n                    begin: \"\\\\*\" + e.UNDERSCORE_IDENT_RE + \"$\"\n                },\n                {\n                    className: \"bullet\",\n                    begin: \"-(?=[ ]|$)\",\n                    relevance: 0\n                },\n                e.HASH_COMMENT_MODE,\n                {\n                    beginKeywords: n,\n                    keywords: {\n                        literal: n\n                    }\n                },\n                {\n                    className: \"number\",\n                    begin: \"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\"\n                },\n                {\n                    className: \"number\",\n                    begin: e.C_NUMBER_RE + \"\\\\b\",\n                    relevance: 0\n                },\n                s,\n                o,\n                a\n            ], c = [\n                ...l\n            ];\n            return c.pop(), c.push(i), r.contains = c, {\n                name: \"YAML\",\n                case_insensitive: !0,\n                aliases: [\n                    \"yml\"\n                ],\n                contains: l\n            };\n        }\n    });\n    const qe = ae;\n    for (const e of Object.keys(Ke)){\n        const n = e.replace(\"grmr_\", \"\").replace(\"_\", \"-\");\n        qe.registerLanguage(n, Ke[e]);\n    }\n    return qe;\n}();\n$9ffb2da3f7eeeaad$exports = $9ffb2da3f7eeeaad$var$hljs;\n\n\nlet $6ae7ca1574e23880$var$generator;\nconst $6ae7ca1574e23880$var$toggleCodeSection = ()=>{\n    document.querySelectorAll('[id$=\"-show-code\"]').forEach((element)=>{\n        element.addEventListener(\"click\", async ()=>{\n            const componentNameWithType = element.getAttribute(\"id\").replace(\"-show-code\", \"\");\n            const exploded = componentNameWithType.split(\"-\");\n            const componentType = exploded.pop();\n            const componentName = exploded.join(\"\");\n            const codeElement = document.querySelector(\"#\" + componentNameWithType + \"-code\");\n            codeElement.innerHTML = $6ae7ca1574e23880$var$generator.componentCode[componentName][componentType].display;\n            (0, (/*@__PURE__*/$parcel$interopDefault($9ffb2da3f7eeeaad$exports))).highlightElement(codeElement);\n            const pre = codeElement.parentElement;\n            const visible = pre.classList.contains(\"block\");\n            pre.classList.remove(visible ? \"block\" : \"hidden\");\n            pre.classList.add(visible ? \"hidden\" : \"block\");\n        });\n    });\n};\nconst $6ae7ca1574e23880$var$toggleSection = ()=>{\n    document.querySelectorAll('[id$=\"-section-header\"]').forEach((element)=>{\n        element.addEventListener(\"click\", async ()=>{\n            $6ae7ca1574e23880$var$toggleSectionByElement(element);\n        });\n    });\n};\nconst $6ae7ca1574e23880$var$sizes = {\n    mobile: {\n        width: 375,\n        height: 667\n    },\n    tablet: {\n        width: 768,\n        height: 1024\n    },\n    desktop: {\n        width: 1366,\n        height: 768\n    }\n};\nconst $6ae7ca1574e23880$var$resetScreenSize = (element)=>{\n    element.style.width = \"\";\n    element.style.height = \"\";\n    element.style.transform = \"\";\n    element.style.marginTop = \"\";\n    element.style.marginBottom = \"\";\n    element.style.resize = \"\";\n    element.style.marginLeft = \"\";\n    element.style.marginRight = \"\";\n};\nconst $6ae7ca1574e23880$export$8852a3a74dbd2105 = (screen, element, ratio = 0.8)=>{\n    const wrapper = element.closest(\".wrapper\");\n    if (Object.keys($6ae7ca1574e23880$var$sizes).indexOf(screen) === -1) {\n        $6ae7ca1574e23880$var$resetScreenSize(element);\n        element.removeAttribute(\"data-exact-size\");\n        if (wrapper) $6ae7ca1574e23880$var$resetScreenSize(wrapper);\n        return;\n    }\n    let rotate;\n    if (!element.hasAttribute(\"data-exact-size\")) element.setAttribute(\"data-exact-size\", screen + \"-reset\");\n    const attribute = element.getAttribute(\"data-exact-size\");\n    if (attribute.indexOf(\"-reset\") > -1 || attribute.indexOf(\"-rotated\") > -1) {\n        element.setAttribute(\"data-exact-size\", screen);\n        rotate = false;\n    } else {\n        element.setAttribute(\"data-exact-size\", screen + \"-rotated\");\n        rotate = true;\n    }\n    $6ae7ca1574e23880$var$resetScreenSize(element);\n    const component = element.closest(\".component-container\");\n    const componentWidth = component.getBoundingClientRect().width;\n    const targetScreenSize = $6ae7ca1574e23880$var$sizes[screen];\n    element.style.width = (rotate ? targetScreenSize.height : targetScreenSize.width) + \"px\";\n    element.style.height = (rotate ? targetScreenSize.width : targetScreenSize.height) + \"px\";\n    let frameDimensions = element.getBoundingClientRect();\n    let frameHeight = frameDimensions.height;\n    const frameWidth = frameDimensions.width;\n    const windowHeight = window.innerHeight;\n    const currentScale = frameHeight / windowHeight;\n    let scale = ratio / currentScale;\n    const scaledWidth = frameWidth * scale;\n    if (scaledWidth > componentWidth) scale = componentWidth / frameWidth;\n    element.style.transform = \"scale(\" + Math.min(scale, 1).toFixed(2) + \")\";\n    element.style.resize = \"none\";\n    if (wrapper) {\n        element.closest(\".wrapper\").style.height = element.getBoundingClientRect().height.toString() + \"px\";\n        element.closest(\".wrapper\").style.width = element.getBoundingClientRect().width.toString() + \"px\";\n        return;\n    }\n    frameHeight = element.getBoundingClientRect().height;\n    const componentHeight = component.getBoundingClientRect().height;\n    const desiredYMargin = 20;\n    const heightDifference = componentHeight - frameHeight;\n    if (heightDifference > desiredYMargin) {\n        const marginShift = heightDifference / 2;\n        element.style.marginTop = \"-\" + marginShift + \"px\";\n        element.style.marginBottom = \"-\" + marginShift + \"px\";\n    }\n    element.style.marginLeft = \"auto\";\n    element.style.marginRight = \"auto\";\n};\nconst $6ae7ca1574e23880$export$60494ee081c59977 = (event, button)=>{\n    let buttonElement = event.target;\n    if (!event.target.hasAttribute(\"data-button-id\")) buttonElement = event.target.closest(\"[data-button-id]\");\n    const dataButtonId = buttonElement.getAttribute(\"data-button-id\");\n    const componentElement = button.closest(\".component\");\n    const componentName = componentElement.getAttribute(\"id\");\n    const frameElement = componentElement.querySelector(\"#\" + componentName + \"-frame\");\n    const targetScreenSizeName = dataButtonId.replace(componentName + \"-\", \"\");\n    $6ae7ca1574e23880$export$8852a3a74dbd2105(targetScreenSizeName, frameElement);\n};\nconst $6ae7ca1574e23880$var$addResizeListener = ()=>{\n    document.querySelectorAll(\".responsive-button\").forEach((button)=>{\n        button.addEventListener(\"click\", (event)=>$6ae7ca1574e23880$export$60494ee081c59977(event, button));\n    });\n};\nconst $6ae7ca1574e23880$var$toggleAllSections = ()=>{\n    document.querySelector(\"#toggle-sections-button\").addEventListener(\"click\", ()=>{\n        const headers = Array.from(document.querySelectorAll('[id$=\"-section-header\"]'));\n        const closedSections = headers.filter((header)=>{\n            const section = document.querySelector(\"#\" + header.getAttribute(\"id\").replace(\"-section-header\", \"\"));\n            return section.classList.contains(\"hidden\");\n        }).length;\n        headers.forEach((element)=>{\n            $6ae7ca1574e23880$var$toggleSectionByElement(element, closedSections > 0);\n        });\n    });\n};\nconst $6ae7ca1574e23880$var$toggleSectionByElement = (element, value = null)=>{\n    const section = document.querySelector(\"#\" + element.getAttribute(\"id\").replace(\"-section-header\", \"\"));\n    const hidden = section.classList.contains(\"hidden\");\n    if (value === null || value === undefined) {\n        section.classList.remove(hidden ? \"hidden\" : \"block\");\n        section.classList.add(hidden ? \"block\" : \"hidden\");\n        return;\n    }\n    if (value && hidden) section.classList.remove(\"hidden\");\n    if (value) return;\n    section.classList.add(\"hidden\");\n};\nconst $6ae7ca1574e23880$export$40a4ed63e5cb7043 = (currentGenerator)=>{\n    $6ae7ca1574e23880$var$generator = currentGenerator;\n    $6ae7ca1574e23880$var$toggleSection();\n    $6ae7ca1574e23880$var$toggleAllSections();\n    $6ae7ca1574e23880$var$toggleCodeSection();\n    $6ae7ca1574e23880$var$addResizeListener();\n};\n\n\nconst $d775a96c091f473d$export$472c574c6324eb38 = async ()=>{\n    document.querySelectorAll(\".frame\").forEach((frame)=>{\n        frame.querySelectorAll('[class^=\"sm:\"], [class^=\"md:\"], [class^=\"lg:\"], [class^=\"xl:\"], [class^=\"2xl:\"],[class*=\"sm:\"], [class*=\"md:\"], [class*=\"lg:\"], [class*=\"xl:\"], [class*=\"2xl:\"]').forEach((element)=>{\n            Array.from(element.classList).forEach((classItem)=>{\n                const split = classItem.split(\":\");\n                if (split.length === 1) return;\n                if ([\n                    \"sm\",\n                    \"md\",\n                    \"lg\",\n                    \"xl\",\n                    \"2xl\"\n                ].indexOf(split[0]) === -1) return;\n                element.classList.add(\"@\" + classItem);\n                element.classList.remove(classItem);\n            });\n        });\n    });\n};\n\n\nconst $9232f11285a88cf6$export$a60ec1be5561a385 = async ()=>{\n    let rules = {};\n    const querySheet = new CSSStyleSheet();\n    const sheets = Array.from(document.styleSheets);\n    document.adoptedStyleSheets = [\n        querySheet\n    ];\n    sheets.forEach((sheet)=>{\n        const sheetRules = Array.from(sheet.cssRules);\n        sheetRules.forEach((sheetRule)=>{\n            if (sheetRule.media && sheetRule.cssText.indexOf(\"@media print\") === -1) {\n                const condition = sheetRule.conditionText;\n                if (Object.keys(rules).indexOf(condition) === -1) rules[condition] = [];\n                Array.from(sheetRule.cssRules).forEach((rule)=>{\n                    const selector = rule.selectorText.replace(\".\", \".\\\\@\");\n                    const ruleText = rule.cssText.replace(rule.selectorText, selector);\n                    rules[condition].push(ruleText);\n                });\n            }\n        });\n    });\n    const rulesText = [];\n    Object.keys(rules).forEach((condition)=>{\n        rulesText.push(\"@container \");\n        rulesText.push(condition);\n        rulesText.push(\" {\");\n        rules[condition].forEach((rule)=>{\n            rulesText.push(rule);\n        });\n        rulesText.push(\" }\");\n    });\n    rulesText.push(\"}\");\n    const joinedText = rulesText.join(\"\");\n    await querySheet.replaceSync(joinedText);\n};\n\n\n\"use strict\";\n\n\nvar $3bfdb7183e8721d6$exports = {};\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar $cfae44f0dfdf62c0$exports = {};\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = $cfae44f0dfdf62c0$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = \"browser\";\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = \"\"; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return \"/\";\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n\n\"use strict\";\nfunction $3bfdb7183e8721d6$var$assertPath(path) {\n    if (typeof path !== \"string\") throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(path));\n}\n// Resolves . and .. elements in a path with directory names\nfunction $3bfdb7183e8721d6$var$normalizeStringPosix(path, allowAboveRoot) {\n    var res = \"\";\n    var lastSegmentLength = 0;\n    var lastSlash = -1;\n    var dots = 0;\n    var code;\n    for(var i = 0; i <= path.length; ++i){\n        if (i < path.length) code = path.charCodeAt(i);\n        else if (code === 47 /*/*/ ) break;\n        else code = 47 /*/*/ ;\n        if (code === 47 /*/*/ ) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/  || res.charCodeAt(res.length - 2) !== 46 /*.*/ ) {\n                    if (res.length > 2) {\n                        var lastSlashIndex = res.lastIndexOf(\"/\");\n                        if (lastSlashIndex !== res.length - 1) {\n                            if (lastSlashIndex === -1) {\n                                res = \"\";\n                                lastSegmentLength = 0;\n                            } else {\n                                res = res.slice(0, lastSlashIndex);\n                                lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n                            }\n                            lastSlash = i;\n                            dots = 0;\n                            continue;\n                        }\n                    } else if (res.length === 2 || res.length === 1) {\n                        res = \"\";\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0) res += \"/..\";\n                    else res = \"..\";\n                    lastSegmentLength = 2;\n                }\n            } else {\n                if (res.length > 0) res += \"/\" + path.slice(lastSlash + 1, i);\n                else res = path.slice(lastSlash + 1, i);\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        } else if (code === 46 /*.*/  && dots !== -1) ++dots;\n        else dots = -1;\n    }\n    return res;\n}\nfunction $3bfdb7183e8721d6$var$_format(sep, pathObject) {\n    var dir = pathObject.dir || pathObject.root;\n    var base = pathObject.base || (pathObject.name || \"\") + (pathObject.ext || \"\");\n    if (!dir) return base;\n    if (dir === pathObject.root) return dir + base;\n    return dir + sep + base;\n}\nvar $3bfdb7183e8721d6$var$posix = {\n    // path.resolve([from ...], to)\n    resolve: function resolve() {\n        var resolvedPath = \"\";\n        var resolvedAbsolute = false;\n        var cwd;\n        for(var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--){\n            var path;\n            if (i >= 0) path = arguments[i];\n            else {\n                if (cwd === undefined) cwd = $cfae44f0dfdf62c0$exports.cwd();\n                path = cwd;\n            }\n            $3bfdb7183e8721d6$var$assertPath(path);\n            // Skip empty entries\n            if (path.length === 0) continue;\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/ ;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = $3bfdb7183e8721d6$var$normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n        if (resolvedAbsolute) {\n            if (resolvedPath.length > 0) return \"/\" + resolvedPath;\n            else return \"/\";\n        } else if (resolvedPath.length > 0) return resolvedPath;\n        else return \".\";\n    },\n    normalize: function normalize(path) {\n        $3bfdb7183e8721d6$var$assertPath(path);\n        if (path.length === 0) return \".\";\n        var isAbsolute = path.charCodeAt(0) === 47 /*/*/ ;\n        var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/ ;\n        // Normalize the path\n        path = $3bfdb7183e8721d6$var$normalizeStringPosix(path, !isAbsolute);\n        if (path.length === 0 && !isAbsolute) path = \".\";\n        if (path.length > 0 && trailingSeparator) path += \"/\";\n        if (isAbsolute) return \"/\" + path;\n        return path;\n    },\n    isAbsolute: function isAbsolute(path) {\n        $3bfdb7183e8721d6$var$assertPath(path);\n        return path.length > 0 && path.charCodeAt(0) === 47 /*/*/ ;\n    },\n    join: function join() {\n        if (arguments.length === 0) return \".\";\n        var joined;\n        for(var i = 0; i < arguments.length; ++i){\n            var arg = arguments[i];\n            $3bfdb7183e8721d6$var$assertPath(arg);\n            if (arg.length > 0) {\n                if (joined === undefined) joined = arg;\n                else joined += \"/\" + arg;\n            }\n        }\n        if (joined === undefined) return \".\";\n        return $3bfdb7183e8721d6$var$posix.normalize(joined);\n    },\n    relative: function relative(from, to) {\n        $3bfdb7183e8721d6$var$assertPath(from);\n        $3bfdb7183e8721d6$var$assertPath(to);\n        if (from === to) return \"\";\n        from = $3bfdb7183e8721d6$var$posix.resolve(from);\n        to = $3bfdb7183e8721d6$var$posix.resolve(to);\n        if (from === to) return \"\";\n        // Trim any leading backslashes\n        var fromStart = 1;\n        for(; fromStart < from.length; ++fromStart){\n            if (from.charCodeAt(fromStart) !== 47 /*/*/ ) break;\n        }\n        var fromEnd = from.length;\n        var fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        var toStart = 1;\n        for(; toStart < to.length; ++toStart){\n            if (to.charCodeAt(toStart) !== 47 /*/*/ ) break;\n        }\n        var toEnd = to.length;\n        var toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        var length = fromLen < toLen ? fromLen : toLen;\n        var lastCommonSep = -1;\n        var i = 0;\n        for(; i <= length; ++i){\n            if (i === length) {\n                if (toLen > length) {\n                    if (to.charCodeAt(toStart + i) === 47 /*/*/ ) // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                    else if (i === 0) // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                } else if (fromLen > length) {\n                    if (from.charCodeAt(fromStart + i) === 47 /*/*/ ) // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                    else if (i === 0) // We get here if `to` is the root.\n                    // For example: from='/foo'; to='/'\n                    lastCommonSep = 0;\n                }\n                break;\n            }\n            var fromCode = from.charCodeAt(fromStart + i);\n            var toCode = to.charCodeAt(toStart + i);\n            if (fromCode !== toCode) break;\n            else if (fromCode === 47 /*/*/ ) lastCommonSep = i;\n        }\n        var out = \"\";\n        // Generate the relative path based on the path difference between `to`\n        // and `from`\n        for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i)if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/ ) {\n            if (out.length === 0) out += \"..\";\n            else out += \"/..\";\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) return out + to.slice(toStart + lastCommonSep);\n        else {\n            toStart += lastCommonSep;\n            if (to.charCodeAt(toStart) === 47 /*/*/ ) ++toStart;\n            return to.slice(toStart);\n        }\n    },\n    _makeLong: function _makeLong(path) {\n        return path;\n    },\n    dirname: function dirname(path) {\n        $3bfdb7183e8721d6$var$assertPath(path);\n        if (path.length === 0) return \".\";\n        var code = path.charCodeAt(0);\n        var hasRoot = code === 47 /*/*/ ;\n        var end = -1;\n        var matchedSlash = true;\n        for(var i = path.length - 1; i >= 1; --i){\n            code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            } else // We saw the first non-path separator\n            matchedSlash = false;\n        }\n        if (end === -1) return hasRoot ? \"/\" : \".\";\n        if (hasRoot && end === 1) return \"//\";\n        return path.slice(0, end);\n    },\n    basename: function basename(path, ext) {\n        if (ext !== undefined && typeof ext !== \"string\") throw new TypeError('\"ext\" argument must be a string');\n        $3bfdb7183e8721d6$var$assertPath(path);\n        var start = 0;\n        var end = -1;\n        var matchedSlash = true;\n        var i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext.length === path.length && ext === path) return \"\";\n            var extIdx = ext.length - 1;\n            var firstNonSlashEnd = -1;\n            for(i = path.length - 1; i >= 0; --i){\n                var code = path.charCodeAt(i);\n                if (code === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                } else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) // We matched the extension, so mark this as the end of our path\n                            // component\n                            end = i;\n                        } else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) end = firstNonSlashEnd;\n            else if (end === -1) end = path.length;\n            return path.slice(start, end);\n        } else {\n            for(i = path.length - 1; i >= 0; --i){\n                if (path.charCodeAt(i) === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                } else if (end === -1) {\n                    // We saw the first non-path separator, mark this as the end of our\n                    // path component\n                    matchedSlash = false;\n                    end = i + 1;\n                }\n            }\n            if (end === -1) return \"\";\n            return path.slice(start, end);\n        }\n    },\n    extname: function extname(path) {\n        $3bfdb7183e8721d6$var$assertPath(path);\n        var startDot = -1;\n        var startPart = 0;\n        var end = -1;\n        var matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        var preDotState = 0;\n        for(var i = path.length - 1; i >= 0; --i){\n            var code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46 /*.*/ ) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) return \"\";\n        return path.slice(startDot, end);\n    },\n    format: function format(pathObject) {\n        if (pathObject === null || typeof pathObject !== \"object\") throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n        return $3bfdb7183e8721d6$var$_format(\"/\", pathObject);\n    },\n    parse: function parse(path) {\n        $3bfdb7183e8721d6$var$assertPath(path);\n        var ret = {\n            root: \"\",\n            dir: \"\",\n            base: \"\",\n            ext: \"\",\n            name: \"\"\n        };\n        if (path.length === 0) return ret;\n        var code = path.charCodeAt(0);\n        var isAbsolute = code === 47 /*/*/ ;\n        var start;\n        if (isAbsolute) {\n            ret.root = \"/\";\n            start = 1;\n        } else start = 0;\n        var startDot = -1;\n        var startPart = 0;\n        var end = -1;\n        var matchedSlash = true;\n        var i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        var preDotState = 0;\n        // Get non-dir info\n        for(; i >= start; --i){\n            code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46 /*.*/ ) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n            if (end !== -1) {\n                if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);\n                else ret.base = ret.name = path.slice(startPart, end);\n            }\n        } else {\n            if (startPart === 0 && isAbsolute) {\n                ret.name = path.slice(1, startDot);\n                ret.base = path.slice(1, end);\n            } else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n            }\n            ret.ext = path.slice(startDot, end);\n        }\n        if (startPart > 0) ret.dir = path.slice(0, startPart - 1);\n        else if (isAbsolute) ret.dir = \"/\";\n        return ret;\n    },\n    sep: \"/\",\n    delimiter: \":\",\n    win32: null,\n    posix: null\n};\n$3bfdb7183e8721d6$var$posix.posix = $3bfdb7183e8721d6$var$posix;\n$3bfdb7183e8721d6$exports = $3bfdb7183e8721d6$var$posix;\n\n\nconst $6a5576a59b27a0c5$export$7ed1f9803f634414 = (word)=>word.charAt(0).toUpperCase() + word.slice(1);\nconst $6a5576a59b27a0c5$export$299555b746278f2e = (prevent = true, large = false)=>{\n    if (prevent && large) {\n        document.body.classList.add(\"overflow-hidden\");\n        document.body.classList.remove(\"lg:overflow-auto\");\n        return;\n    }\n    if (prevent) {\n        document.body.classList.add(\"overflow-hidden\");\n        document.body.classList.add(\"lg:overflow-auto\");\n        return;\n    }\n    document.body.classList.remove(\"lg:overflow-auto\");\n    document.body.classList.remove(\"overflow-hidden\");\n};\nconst $6a5576a59b27a0c5$export$e641f6957555d732 = (length)=>{\n    let result = \"\";\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    let counter = 0;\n    while(counter < length){\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        counter += 1;\n    }\n    return result;\n};\nconst $6a5576a59b27a0c5$export$9adb60ba67eebe15 = (text)=>{\n    let textArea = $6a5576a59b27a0c5$export$c8a8987d4410bf2d(text, false, \"textarea\");\n    textArea.innerText = text;\n    let encodedOutput = textArea.innerHTML;\n    let arr = encodedOutput.split(\"<br>\");\n    encodedOutput = arr.join(\"\\n\");\n    textArea.remove();\n    return encodedOutput;\n};\nclass $6a5576a59b27a0c5$export$fa842e381e70fc1a {\n    constructor(tag = \"div\", destination = document){\n        this.element = destination.createElement(tag);\n        this.destination = destination;\n    }\n    append = (destinationElement = \"body\", all = false)=>{\n        if (typeof destinationElement === \"string\") return this.appendToSelector(destinationElement, all);\n        return this.appendToElement(destinationElement);\n    };\n    appendToSelector = (selector = \"body\", all = false)=>{\n        if (all) {\n            this.destination.querySelectorAll(selector).forEach((element)=>element.append(this.element));\n            return this;\n        }\n        this.destination.querySelector(selector).append(this.element);\n        return this;\n    };\n    appendToElement = (destinationElement)=>{\n        destinationElement.append(this.element);\n        return this;\n    };\n    get = ()=>this.element;\n    setAttributes = (attributes)=>{\n        Object.keys(attributes).forEach((name)=>this.element.setAttribute(name, attributes[name]));\n        return this;\n    };\n    setClasses = (classes)=>{\n        classes.forEach((name)=>this.element.classList.add(name));\n        return this;\n    };\n    setContent = (content)=>{\n        this.element.innerHTML = content;\n        return this;\n    };\n}\nconst $6a5576a59b27a0c5$export$c8a8987d4410bf2d = (content = \"\", append = false, tag = \"div\", destination = document, destinationElement = \"body\", attributes = {}, classes = [], createForAll = false)=>{\n    const element = new $6a5576a59b27a0c5$export$fa842e381e70fc1a(tag, destination);\n    if (append) element.append(destinationElement, createForAll);\n    if (Object.keys(attributes).length > 0) element.setAttributes(attributes);\n    if (classes.length > 0) element.setClasses(classes);\n    if (content.length > 0) element.setContent(content);\n    return element.get();\n};\n\n\nlet $56f957b869ed1078$var$generator;\nconst $56f957b869ed1078$var$loadNavbar = ()=>{\n    const navbarSelector = \"template-components-header\";\n    let navBarJS = \"const navbarSelector = '#{{selector|r}}';\\nconst navbar = document.querySelector(navbarSelector);\\nconst checkbox = document.querySelector(\\n  navbarSelector + ' input[type=checkbox]',\\n);\\n\\ncheckbox.addEventListener('change', function () {\\n  if (this.checked) {\\n    navbar.setAttribute('data-checked', '');\\n  } else {\\n    navbar.removeAttribute('data-checked');\\n  }\\n});\\n\\nnavbar.querySelectorAll('li, button').forEach((element) => {\\n  element.addEventListener('click', () => {\\n    checkbox.checked = false;\\n    const evt = new Event('change');\\n    checkbox.dispatchEvent(evt);\\n  });\\n});\\n\";\n    navBarJS = navBarJS.replaceAll(\"{{selector}}\", navbarSelector);\n    navBarJS = navBarJS.replaceAll(\"{{selector|r}}\", navbarSelector);\n    window.eval(navBarJS);\n};\nconst $56f957b869ed1078$var$hideBuildPanelListener = ()=>{\n    document.querySelector(\"#hide-build-panel\").addEventListener(\"click\", function() {\n        $56f957b869ed1078$var$hideBuildPanel();\n    });\n};\nconst $56f957b869ed1078$var$toggleBuildPanel = ()=>{\n    if (document.querySelector(\"#build-panel\").classList.contains(\"hidden\")) {\n        $56f957b869ed1078$var$showBuildPanel();\n        return;\n    }\n    $56f957b869ed1078$var$hideBuildPanel();\n};\nconst $56f957b869ed1078$var$toggleBuildPanelListener = ()=>{\n    document.querySelector(\"#show-build-panel\").addEventListener(\"click\", $56f957b869ed1078$var$toggleBuildPanel);\n};\nconst $56f957b869ed1078$var$cancelBuild = ()=>{\n    document.querySelectorAll(\".add-component-button\").forEach((element)=>{\n        element.closest(\"button\").classList.add(\"hidden\");\n    });\n    $56f957b869ed1078$var$clearBuildList();\n    $56f957b869ed1078$var$hideBuildPanel();\n};\nconst $56f957b869ed1078$var$cancelButtonListener = ()=>{\n    document.querySelector(\"#cancel-build\").addEventListener(\"click\", $56f957b869ed1078$var$cancelBuild);\n};\nconst $56f957b869ed1078$var$showBuildPanel = ()=>{\n    (0, $6a5576a59b27a0c5$export$299555b746278f2e)(true, false);\n    document.querySelector(\"#build-panel\").classList.remove(\"hidden\");\n    document.querySelectorAll(\".add-component-button\").forEach((element)=>{\n        element.closest(\"button\").classList.remove(\"hidden\");\n    });\n};\nconst $56f957b869ed1078$var$hideBuildPanel = ()=>{\n    (0, $6a5576a59b27a0c5$export$299555b746278f2e)(false);\n    document.querySelector(\"#build-panel\").classList.add(\"hidden\");\n};\nconst $56f957b869ed1078$var$clearBuildList = ()=>{\n    document.querySelector(\"#build-list\").innerHTML = null;\n};\nvar $464fdb2abee874d6$exports = {};\n\n$464fdb2abee874d6$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"aN01X\"), import.meta.url).toString();\n\n\nconst $56f957b869ed1078$var$addComponentListener = async ()=>{\n    document.querySelectorAll(\".add-component-button\").forEach((element)=>{\n        element.addEventListener(\"click\", (event)=>{\n            (async ()=>{\n                const component = event.target.closest(\"button\").getAttribute(\"id\").replace(\"add-\", \"\");\n                const list = document.querySelector(\"#build-list\");\n                const entries = list.querySelectorAll(\"[data-component]\");\n                const numberOfEntries = entries.length;\n                let html = await $56f957b869ed1078$var$generator.fetchCode(new URL($464fdb2abee874d6$exports));\n                html = html.replaceAll(`{{component}}`, component);\n                const element = new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)().setContent(html).setAttributes({\n                    \"data-component\": component,\n                    \"data-build-list-order\": numberOfEntries.toString()\n                }).setClasses([\n                    \"build-list-entry\"\n                ]).append(\"#build-list\").get();\n                $56f957b869ed1078$var$addListItemListeners(element);\n            })();\n        });\n    });\n};\nconst $56f957b869ed1078$var$reorderBuildListByOrder = ()=>{\n    const buildList = document.querySelector(\"#build-list\");\n    const items = Array.from(buildList.children).filter((item)=>item.getAttribute(\"data-build-list-order\") > -1).sort((a, b)=>a.getAttribute(\"data-build-list-order\") > b.getAttribute(\"data-build-list-order\") ? 1 : -1);\n    const elements = document.createDocumentFragment();\n    items.forEach((item)=>{\n        const clone = item.cloneNode(true);\n        $56f957b869ed1078$var$addListItemListeners(clone);\n        elements.append(clone);\n    });\n    buildList.innerHTML = null;\n    buildList.append(elements);\n};\nconst $56f957b869ed1078$var$addListItemListeners = (element)=>{\n    $56f957b869ed1078$var$moveComponentUpListener(element);\n    $56f957b869ed1078$var$moveComponentDownListener(element);\n    $56f957b869ed1078$var$removeComponentListener(element);\n};\nconst $56f957b869ed1078$var$moveComponentUpListener = (element)=>{\n    element.querySelector('[data-action=\"move-up\"]').addEventListener(\"click\", ()=>{\n        const parentElement = element.closest(\"[data-build-list-order]\");\n        const currentOrder = parseInt(parentElement.getAttribute(\"data-build-list-order\"));\n        const previousOrder = currentOrder - 1;\n        if (currentOrder === 0) return;\n        const previousElement = document.querySelector('[data-build-list-order=\"' + previousOrder + '\"]');\n        previousElement.setAttribute(\"data-build-list-order\", currentOrder.toString());\n        parentElement.setAttribute(\"data-build-list-order\", previousOrder.toString());\n        $56f957b869ed1078$var$reorderBuildListByOrder();\n    });\n};\nconst $56f957b869ed1078$var$moveComponentDownListener = (element)=>{\n    element.querySelector('[data-action=\"move-down\"]').addEventListener(\"click\", ()=>{\n        const parentElement = element.closest(\"[data-build-list-order]\");\n        const currentOrder = parseInt(parentElement.getAttribute(\"data-build-list-order\"));\n        const listItemCount = document.querySelector(\"#build-list\").children.length;\n        const nextOrder = currentOrder + 1;\n        if (nextOrder === listItemCount) return;\n        const nextElement = document.querySelector('[data-build-list-order=\"' + nextOrder + '\"]');\n        nextElement.setAttribute(\"data-build-list-order\", currentOrder.toString());\n        parentElement.setAttribute(\"data-build-list-order\", nextOrder.toString());\n        $56f957b869ed1078$var$reorderBuildListByOrder();\n    });\n};\nconst $56f957b869ed1078$var$removeComponentListener = (element)=>{\n    element.querySelector('[data-action=\"remove\"]').addEventListener(\"click\", ()=>{\n        const parentElement = element.closest(\"[data-build-list-order]\");\n        parentElement.setAttribute(\"data-build-list-order\", -1);\n        $56f957b869ed1078$var$reorderBuildListByOrder();\n    });\n};\nconst $56f957b869ed1078$export$df183c22db917802 = async (currentGenerator)=>{\n    $56f957b869ed1078$var$generator = currentGenerator;\n    $56f957b869ed1078$var$loadNavbar();\n    $56f957b869ed1078$var$hideBuildPanelListener();\n    $56f957b869ed1078$var$toggleBuildPanelListener();\n    $56f957b869ed1078$var$cancelButtonListener();\n    await $56f957b869ed1078$var$addComponentListener();\n};\n\n\nvar $e000fdea42d59506$exports = {};\n/* Font Face Observer v2.3.0 - © Bram Stein. License: BSD-3-Clause */ (function() {\n    function p(a, c) {\n        document.addEventListener ? a.addEventListener(\"scroll\", c, !1) : a.attachEvent(\"scroll\", c);\n    }\n    function u(a) {\n        document.body ? a() : document.addEventListener ? document.addEventListener(\"DOMContentLoaded\", function b() {\n            document.removeEventListener(\"DOMContentLoaded\", b);\n            a();\n        }) : document.attachEvent(\"onreadystatechange\", function g() {\n            if (\"interactive\" == document.readyState || \"complete\" == document.readyState) document.detachEvent(\"onreadystatechange\", g), a();\n        });\n    }\n    function w(a) {\n        this.g = document.createElement(\"div\");\n        this.g.setAttribute(\"aria-hidden\", \"true\");\n        this.g.appendChild(document.createTextNode(a));\n        this.h = document.createElement(\"span\");\n        this.i = document.createElement(\"span\");\n        this.m = document.createElement(\"span\");\n        this.j = document.createElement(\"span\");\n        this.l = -1;\n        this.h.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n        this.i.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n        this.j.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n        this.m.style.cssText = \"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";\n        this.h.appendChild(this.m);\n        this.i.appendChild(this.j);\n        this.g.appendChild(this.h);\n        this.g.appendChild(this.i);\n    }\n    function x(a, c) {\n        a.g.style.cssText = \"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\" + c + \";\";\n    }\n    function B(a) {\n        var c = a.g.offsetWidth, b = c + 100;\n        a.j.style.width = b + \"px\";\n        a.i.scrollLeft = b;\n        a.h.scrollLeft = a.h.scrollWidth + 100;\n        return a.l !== c ? (a.l = c, !0) : !1;\n    }\n    function C(a, c) {\n        function b() {\n            var e = g;\n            B(e) && null !== e.g.parentNode && c(e.l);\n        }\n        var g = a;\n        p(a.h, b);\n        p(a.i, b);\n        B(a);\n    }\n    function D(a, c, b) {\n        c = c || {};\n        b = b || window;\n        this.family = a;\n        this.style = c.style || \"normal\";\n        this.weight = c.weight || \"normal\";\n        this.stretch = c.stretch || \"normal\";\n        this.context = b;\n    }\n    var E = null, F = null, G = null, H = null;\n    function I(a) {\n        null === F && (M(a) && /Apple/.test(window.navigator.vendor) ? (a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent), F = !!a && 603 > parseInt(a[1], 10)) : F = !1);\n        return F;\n    }\n    function M(a) {\n        null === H && (H = !!a.document.fonts);\n        return H;\n    }\n    function N(a, c) {\n        var b = a.style, g = a.weight;\n        if (null === G) {\n            var e = document.createElement(\"div\");\n            try {\n                e.style.font = \"condensed 100px sans-serif\";\n            } catch (q) {}\n            G = \"\" !== e.style.font;\n        }\n        return [\n            b,\n            g,\n            G ? a.stretch : \"\",\n            \"100px\",\n            c\n        ].join(\" \");\n    }\n    D.prototype.load = function(a, c) {\n        var b = this, g = a || \"BESbswy\", e = 0, q = c || 3E3, J = (new Date).getTime();\n        return new Promise(function(K, L) {\n            if (M(b.context) && !I(b.context)) {\n                var O = new Promise(function(r, t) {\n                    function h() {\n                        (new Date).getTime() - J >= q ? t(Error(\"\" + q + \"ms timeout exceeded\")) : b.context.document.fonts.load(N(b, '\"' + b.family + '\"'), g).then(function(n) {\n                            1 <= n.length ? r() : setTimeout(h, 25);\n                        }, t);\n                    }\n                    h();\n                }), P = new Promise(function(r, t) {\n                    e = setTimeout(function() {\n                        t(Error(\"\" + q + \"ms timeout exceeded\"));\n                    }, q);\n                });\n                Promise.race([\n                    P,\n                    O\n                ]).then(function() {\n                    clearTimeout(e);\n                    K(b);\n                }, L);\n            } else u(function() {\n                function r() {\n                    var d;\n                    if (d = -1 != k && -1 != l || -1 != k && -1 != m || -1 != l && -1 != m) (d = k != l && k != m && l != m) || (null === E && (d = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent), E = !!d && (536 > parseInt(d[1], 10) || 536 === parseInt(d[1], 10) && 11 >= parseInt(d[2], 10))), d = E && (k == y && l == y && m == y || k == z && l == z && m == z || k == A && l == A && m == A)), d = !d;\n                    d && (null !== f.parentNode && f.parentNode.removeChild(f), clearTimeout(e), K(b));\n                }\n                function t() {\n                    if ((new Date).getTime() - J >= q) null !== f.parentNode && f.parentNode.removeChild(f), L(Error(\"\" + q + \"ms timeout exceeded\"));\n                    else {\n                        var d = b.context.document.hidden;\n                        if (!0 === d || void 0 === d) k = h.g.offsetWidth, l = n.g.offsetWidth, m = v.g.offsetWidth, r();\n                        e = setTimeout(t, 50);\n                    }\n                }\n                var h = new w(g), n = new w(g), v = new w(g), k = -1, l = -1, m = -1, y = -1, z = -1, A = -1, f = document.createElement(\"div\");\n                f.dir = \"ltr\";\n                x(h, N(b, \"sans-serif\"));\n                x(n, N(b, \"serif\"));\n                x(v, N(b, \"monospace\"));\n                f.appendChild(h.g);\n                f.appendChild(n.g);\n                f.appendChild(v.g);\n                b.context.document.body.appendChild(f);\n                y = h.g.offsetWidth;\n                z = n.g.offsetWidth;\n                A = v.g.offsetWidth;\n                t();\n                C(h, function(d) {\n                    k = d;\n                    r();\n                });\n                x(h, N(b, '\"' + b.family + '\",sans-serif'));\n                C(n, function(d) {\n                    l = d;\n                    r();\n                });\n                x(n, N(b, '\"' + b.family + '\",serif'));\n                C(v, function(d) {\n                    m = d;\n                    r();\n                });\n                x(v, N(b, '\"' + b.family + '\",monospace'));\n            });\n        });\n    };\n    $e000fdea42d59506$exports = D;\n})();\n\n\nvar $795b7bc1569fb947$export$2e2bcd8739ae039 = async ()=>{\n    const MontserratObserver = new (0, (/*@__PURE__*/$parcel$interopDefault($e000fdea42d59506$exports)))(\"Montserrat\");\n    const InterObserver = new (0, (/*@__PURE__*/$parcel$interopDefault($e000fdea42d59506$exports)))(\"Inter\");\n    Promise.all([\n        MontserratObserver.load(),\n        InterObserver.load()\n    ]).then(()=>{\n        document.querySelectorAll(\".font-sans\").forEach((el)=>el.classList.add(\"fonts-loaded\"));\n        document.querySelectorAll(\".font-serif\").forEach((el)=>el.classList.add(\"fonts-loaded\"));\n    });\n};\n\n\n\n\nvar $a0dd7684fc35cbab$exports = {};\n\n$a0dd7684fc35cbab$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"ie4sz\"), import.meta.url).toString();\n\n\nvar $27f2a89577faa352$exports = {};\n\n$27f2a89577faa352$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"7Gi5V\"), import.meta.url).toString();\n\n\nvar $f276a7f2ff98d0cd$exports = {};\n\n$f276a7f2ff98d0cd$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"cPW52\"), import.meta.url).toString();\n\n\nvar $a5287944a2efc9df$exports = {};\n\n$a5287944a2efc9df$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"jrSOU\"), import.meta.url).toString();\n\n\nvar $9909afe4f45b1c74$exports = {};\n\n$9909afe4f45b1c74$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"X7EiZ\"), import.meta.url).toString();\n\n\nvar $6e05cf2c2e2afe1c$exports = {};\n\n$6e05cf2c2e2afe1c$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"l0BmQ\"), import.meta.url).toString();\n\n\nvar $0f9040f9397ad842$exports = {};\n\n$0f9040f9397ad842$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"je9l1\"), import.meta.url).toString();\n\n\nconst $bf49995c935cdaaa$export$5a1dbaa3e4449344 = {\n    headers: new URL($a0dd7684fc35cbab$exports),\n    footers: new URL($27f2a89577faa352$exports),\n    hero: new URL($f276a7f2ff98d0cd$exports),\n    text: new URL($a5287944a2efc9df$exports),\n    services: new URL($9909afe4f45b1c74$exports),\n    contact: new URL($6e05cf2c2e2afe1c$exports),\n    faq: new URL($0f9040f9397ad842$exports)\n};\nvar $46ff5524706fdb1a$exports = {};\n\n$46ff5524706fdb1a$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"d4px9\"), import.meta.url).toString();\n\n\nvar $fa12c59d00597c5d$exports = {};\n\n$fa12c59d00597c5d$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"cfqSr\"), import.meta.url).toString();\n\n\nvar $8f7f6ce5fbde2c73$exports = {};\n\n$8f7f6ce5fbde2c73$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"5pZOR\"), import.meta.url).toString();\n\n\nvar $472ea6e913ce04e2$exports = {};\n\n$472ea6e913ce04e2$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"lsSs3\"), import.meta.url).toString();\n\n\nvar $96028a69ed78de7e$exports = {};\n\n$96028a69ed78de7e$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"iwXo9\"), import.meta.url).toString();\n\n\nvar $a8fd5e703201a32c$exports = {};\n\n$a8fd5e703201a32c$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"3I2k7\"), import.meta.url).toString();\n\n\nvar $d582566456a938fb$exports = {};\n\n$d582566456a938fb$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"exlQd\"), import.meta.url).toString();\n\n\nvar $3015ab40a8c486c1$exports = {};\n\n$3015ab40a8c486c1$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"6u1hH\"), import.meta.url).toString();\n\n\nvar $58d328442f165fb7$exports = {};\n\n$58d328442f165fb7$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"dsr0O\"), import.meta.url).toString();\n\n\nvar $222677629d73214a$exports = {};\n\n$222677629d73214a$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"2k5zH\"), import.meta.url).toString();\n\n\nconst $bf49995c935cdaaa$export$9b5ac10f59f76296 = {\n    header1: {\n        html: {\n            code: new URL($46ff5524706fdb1a$exports),\n            properties: {\n                selector: \"header-1\"\n            }\n        },\n        js: {\n            code: \"const navbarSelector = '#{{selector|r}}';\\nconst navbar = document.querySelector(navbarSelector);\\nconst checkbox = document.querySelector(\\n  navbarSelector + ' input[type=checkbox]',\\n);\\n\\ncheckbox.addEventListener('change', function () {\\n  if (this.checked) {\\n    navbar.setAttribute('data-checked', '');\\n  } else {\\n    navbar.removeAttribute('data-checked');\\n  }\\n});\\n\\nnavbar.querySelectorAll('li, button').forEach((element) => {\\n  element.addEventListener('click', () => {\\n    checkbox.checked = false;\\n    const evt = new Event('change');\\n    checkbox.dispatchEvent(evt);\\n  });\\n});\\n\",\n            properties: {\n                selector: \"header-1\"\n            }\n        }\n    },\n    header2: {\n        html: {\n            code: new URL($fa12c59d00597c5d$exports),\n            properties: {\n                selector: \"header-2\"\n            }\n        },\n        js: {\n            code: \"const navbarSelector = '#{{selector|r}}';\\nconst navbar = document.querySelector(navbarSelector);\\nconst checkbox = document.querySelector(\\n  navbarSelector + ' input[type=checkbox]',\\n);\\n\\ncheckbox.addEventListener('change', function () {\\n  if (this.checked) {\\n    navbar.setAttribute('data-checked', '');\\n  } else {\\n    navbar.removeAttribute('data-checked');\\n  }\\n});\\n\\nnavbar.querySelectorAll('li, button').forEach((element) => {\\n  element.addEventListener('click', () => {\\n    checkbox.checked = false;\\n    const evt = new Event('change');\\n    checkbox.dispatchEvent(evt);\\n  });\\n});\\n\",\n            properties: {\n                selector: \"header-2\"\n            }\n        }\n    },\n    header3: {\n        html: {\n            code: new URL($8f7f6ce5fbde2c73$exports),\n            properties: {\n                selector: \"header-3\"\n            }\n        },\n        js: {\n            code: \"const navbarSelector = '#{{selector|r}}';\\nconst navbar = document.querySelector(navbarSelector);\\nconst checkbox = document.querySelector(\\n  navbarSelector + ' input[type=checkbox]',\\n);\\n\\ncheckbox.addEventListener('change', function () {\\n  if (this.checked) {\\n    navbar.setAttribute('data-checked', '');\\n  } else {\\n    navbar.removeAttribute('data-checked');\\n  }\\n});\\n\\nnavbar.querySelectorAll('li, button').forEach((element) => {\\n  element.addEventListener('click', () => {\\n    checkbox.checked = false;\\n    const evt = new Event('change');\\n    checkbox.dispatchEvent(evt);\\n  });\\n});\\n\",\n            properties: {\n                selector: \"header-3\"\n            }\n        }\n    },\n    hero1: {\n        html: {\n            code: new URL($472ea6e913ce04e2$exports),\n            properties: {\n                selector: \"hero-1\"\n            }\n        },\n        js: {}\n    },\n    text1: {\n        html: {\n            code: new URL($96028a69ed78de7e$exports),\n            properties: {\n                selector: \"text-1\"\n            }\n        },\n        js: {}\n    },\n    text2: {\n        html: {\n            code: new URL($a8fd5e703201a32c$exports),\n            properties: {\n                selector: \"text-2\"\n            }\n        },\n        js: {}\n    },\n    services1: {\n        html: {\n            code: new URL($d582566456a938fb$exports),\n            properties: {\n                selector: \"services-1\"\n            }\n        },\n        js: {}\n    },\n    contact1: {\n        html: {\n            code: new URL($3015ab40a8c486c1$exports),\n            properties: {\n                selector: \"contact-1\"\n            }\n        },\n        js: {}\n    },\n    faq1: {\n        html: {\n            code: new URL($58d328442f165fb7$exports),\n            properties: {\n                selector: \"faq-1\"\n            }\n        },\n        js: {\n            code: \"const faqSelector = '#{{selector|r}}';\\n\\ndocument\\n  .querySelectorAll(faqSelector + ' .accordion > li > .accordion-title')\\n  .forEach((title) => {\\n    title.addEventListener('click', (event) => {\\n      const listItem = event.target.closest('li');\\n      const isActive = listItem.classList.contains('active');\\n      const hiddenIcon = listItem.querySelector('svg.hidden');\\n      const regularIcon = listItem.querySelector('svg:not(.hidden)');\\n\\n      regularIcon.classList.add('hidden');\\n      hiddenIcon.classList.remove('hidden');\\n\\n      if (isActive) {\\n        listItem.classList.remove('active');\\n      } else {\\n        listItem.classList.add('active');\\n      }\\n    });\\n  });\\n\",\n            properties: {\n                selector: \"faq-1\"\n            }\n        }\n    },\n    footer1: {\n        html: {\n            code: new URL($222677629d73214a$exports),\n            properties: {\n                selector: \"footer-1\"\n            }\n        },\n        js: {}\n    }\n};\n\n\n\nvar $dfb68899f55c7469$exports = {};\n\n$dfb68899f55c7469$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"7Iben\"), import.meta.url).toString();\n\n\nclass $4687e4ef5a4066d1$export$2e2bcd8739ae039 {\n    sections = {};\n    components = {};\n    componentCode = {};\n    addSectionsToDom = async ()=>{\n        Object.keys(this.sections).forEach((sectionName)=>{\n            const parents = document.querySelectorAll(\".header-section[data-import = \" + sectionName + \"]\");\n            parents.forEach((parent)=>parent.append(this.sections[sectionName]));\n        });\n    };\n    runJS = async (code, destination = window)=>{\n        destination.eval(code);\n    };\n    addComponentsToDom = async ()=>{\n        Object.keys(this.components).forEach((componentName)=>{\n            const component = this.componentCode[componentName];\n            const componentElement = this.components[componentName];\n            const parents = document.querySelectorAll(\".component-section[data-import = \" + componentName + \"]\");\n            parents.forEach((parent)=>parent.append(componentElement));\n            if (!component.js.hasJS) return;\n            this.runJS(component.js.code);\n            componentElement.querySelector(\"#\" + componentName + \"-js-show-code\").classList.remove(\"hidden\");\n        });\n    };\n    addElementsToDom = async ()=>{\n        await this.addSectionsToDom();\n        await this.addComponentsToDom();\n        return {\n            sections: this.sections,\n            components: this.components,\n            componentCode: this.componentCode\n        };\n    };\n    createSections = async ()=>{\n        for (const sectionName of Object.keys((0, $bf49995c935cdaaa$export$5a1dbaa3e4449344))){\n            const resp = await fetch((0, $bf49995c935cdaaa$export$5a1dbaa3e4449344)[sectionName]);\n            this.sections[sectionName] = (0, $6a5576a59b27a0c5$export$c8a8987d4410bf2d)(await resp.text());\n        }\n    };\n    fetchCode = async (path)=>{\n        const resp = await fetch(path);\n        return await resp.text();\n    };\n    replaceProps = (code, props, id = \"\")=>{\n        let replacedCode = code;\n        Object.keys(props).forEach((propKey)=>{\n            replacedCode = replacedCode.replaceAll(`{{${propKey}}}`, props[propKey]);\n            replacedCode = replacedCode.replaceAll(`{{${propKey}|r}}`, props[propKey] + id);\n        });\n        return replacedCode;\n    };\n    generateHTMLForComponent = async (name, id)=>{\n        const html = (0, $bf49995c935cdaaa$export$9b5ac10f59f76296)[name].html;\n        const htmlCode = await this.fetchCode(html.code);\n        const htmlProps = html.properties;\n        let replacedHTML = htmlCode;\n        if (htmlProps && Object.keys(htmlProps).length > 0) replacedHTML = this.replaceProps(replacedHTML, htmlProps, id);\n        return {\n            code: replacedHTML,\n            original: htmlCode,\n            display: this.getHTMLDisplayCode(replacedHTML),\n            name: name,\n            props: htmlProps,\n            hasHTML: true\n        };\n    };\n    generateJSForComponent = async (name, id)=>{\n        const response = {\n            code: \"\",\n            original: \"\",\n            display: \"\",\n            name: name,\n            props: {},\n            hasJS: false\n        };\n        const js = (0, $bf49995c935cdaaa$export$9b5ac10f59f76296)[name].js;\n        if (!js || !js.code) return response;\n        response.hasJS = true;\n        const jsCode = js.code;\n        const jsProps = js.properties;\n        response.original = jsCode;\n        response.code = jsCode;\n        if (jsProps && Object.keys(jsProps).length > 0) {\n            response.code = this.replaceProps(jsCode, jsProps, id);\n            response.props = jsProps;\n        }\n        response.display = response.code;\n        return response;\n    };\n    generateDataForComponents = async (componentList)=>{\n        const componentData = {};\n        for (const componentName of componentList){\n            const id = (0, $6a5576a59b27a0c5$export$e641f6957555d732)(5);\n            componentData[componentName] = {\n                html: await this.generateHTMLForComponent(componentName, id),\n                js: await this.generateJSForComponent(componentName, id)\n            };\n        }\n        return componentData;\n    };\n    createComponents = async ()=>{\n        const componentTemplateResponse = await fetch(new URL($dfb68899f55c7469$exports));\n        const componentTemplate = await componentTemplateResponse.text();\n        const componentList = Object.keys((0, $bf49995c935cdaaa$export$9b5ac10f59f76296));\n        const componentListData = await this.generateDataForComponents(componentList);\n        for (const componentName of componentList){\n            let componentContainer = componentTemplate;\n            componentContainer = componentContainer.replaceAll(\"{component}\", componentName);\n            componentContainer = componentContainer.replaceAll(\"{Component}\", (0, $6a5576a59b27a0c5$export$7ed1f9803f634414)(componentName));\n            const containerEl = (0, $6a5576a59b27a0c5$export$c8a8987d4410bf2d)(componentContainer);\n            const frame = containerEl.querySelector(\"#\" + componentName + \"-frame\");\n            const componentData = componentListData[componentName];\n            frame.innerHTML = componentData.html.code;\n            this.components[componentName] = containerEl;\n            this.componentCode[componentName] = componentData;\n        }\n    };\n    getHTMLDisplayCode = (code)=>{\n        let htmlRoot = (0, $6a5576a59b27a0c5$export$c8a8987d4410bf2d)(code);\n        htmlRoot.querySelectorAll(\"script\").forEach((el)=>el.remove());\n        return (0, $6a5576a59b27a0c5$export$9adb60ba67eebe15)(htmlRoot.innerHTML);\n    };\n}\n\n\n\n\n// This file was generated. Do not modify manually!\nvar $d184995ea4e545a3$var$astralIdentifierCodes = [\n    509,\n    0,\n    227,\n    0,\n    150,\n    4,\n    294,\n    9,\n    1368,\n    2,\n    2,\n    1,\n    6,\n    3,\n    41,\n    2,\n    5,\n    0,\n    166,\n    1,\n    574,\n    3,\n    9,\n    9,\n    370,\n    1,\n    81,\n    2,\n    71,\n    10,\n    50,\n    3,\n    123,\n    2,\n    54,\n    14,\n    32,\n    10,\n    3,\n    1,\n    11,\n    3,\n    46,\n    10,\n    8,\n    0,\n    46,\n    9,\n    7,\n    2,\n    37,\n    13,\n    2,\n    9,\n    6,\n    1,\n    45,\n    0,\n    13,\n    2,\n    49,\n    13,\n    9,\n    3,\n    2,\n    11,\n    83,\n    11,\n    7,\n    0,\n    3,\n    0,\n    158,\n    11,\n    6,\n    9,\n    7,\n    3,\n    56,\n    1,\n    2,\n    6,\n    3,\n    1,\n    3,\n    2,\n    10,\n    0,\n    11,\n    1,\n    3,\n    6,\n    4,\n    4,\n    193,\n    17,\n    10,\n    9,\n    5,\n    0,\n    82,\n    19,\n    13,\n    9,\n    214,\n    6,\n    3,\n    8,\n    28,\n    1,\n    83,\n    16,\n    16,\n    9,\n    82,\n    12,\n    9,\n    9,\n    84,\n    14,\n    5,\n    9,\n    243,\n    14,\n    166,\n    9,\n    71,\n    5,\n    2,\n    1,\n    3,\n    3,\n    2,\n    0,\n    2,\n    1,\n    13,\n    9,\n    120,\n    6,\n    3,\n    6,\n    4,\n    0,\n    29,\n    9,\n    41,\n    6,\n    2,\n    3,\n    9,\n    0,\n    10,\n    10,\n    47,\n    15,\n    406,\n    7,\n    2,\n    7,\n    17,\n    9,\n    57,\n    21,\n    2,\n    13,\n    123,\n    5,\n    4,\n    0,\n    2,\n    1,\n    2,\n    6,\n    2,\n    0,\n    9,\n    9,\n    49,\n    4,\n    2,\n    1,\n    2,\n    4,\n    9,\n    9,\n    330,\n    3,\n    10,\n    1,\n    2,\n    0,\n    49,\n    6,\n    4,\n    4,\n    14,\n    9,\n    5351,\n    0,\n    7,\n    14,\n    13835,\n    9,\n    87,\n    9,\n    39,\n    4,\n    60,\n    6,\n    26,\n    9,\n    1014,\n    0,\n    2,\n    54,\n    8,\n    3,\n    82,\n    0,\n    12,\n    1,\n    19628,\n    1,\n    4706,\n    45,\n    3,\n    22,\n    543,\n    4,\n    4,\n    5,\n    9,\n    7,\n    3,\n    6,\n    31,\n    3,\n    149,\n    2,\n    1418,\n    49,\n    513,\n    54,\n    5,\n    49,\n    9,\n    0,\n    15,\n    0,\n    23,\n    4,\n    2,\n    14,\n    1361,\n    6,\n    2,\n    16,\n    3,\n    6,\n    2,\n    1,\n    2,\n    4,\n    101,\n    0,\n    161,\n    6,\n    10,\n    9,\n    357,\n    0,\n    62,\n    13,\n    499,\n    13,\n    983,\n    6,\n    110,\n    6,\n    6,\n    9,\n    4759,\n    9,\n    787719,\n    239\n];\n// This file was generated. Do not modify manually!\nvar $d184995ea4e545a3$var$astralIdentifierStartCodes = [\n    0,\n    11,\n    2,\n    25,\n    2,\n    18,\n    2,\n    1,\n    2,\n    14,\n    3,\n    13,\n    35,\n    122,\n    70,\n    52,\n    268,\n    28,\n    4,\n    48,\n    48,\n    31,\n    14,\n    29,\n    6,\n    37,\n    11,\n    29,\n    3,\n    35,\n    5,\n    7,\n    2,\n    4,\n    43,\n    157,\n    19,\n    35,\n    5,\n    35,\n    5,\n    39,\n    9,\n    51,\n    13,\n    10,\n    2,\n    14,\n    2,\n    6,\n    2,\n    1,\n    2,\n    10,\n    2,\n    14,\n    2,\n    6,\n    2,\n    1,\n    68,\n    310,\n    10,\n    21,\n    11,\n    7,\n    25,\n    5,\n    2,\n    41,\n    2,\n    8,\n    70,\n    5,\n    3,\n    0,\n    2,\n    43,\n    2,\n    1,\n    4,\n    0,\n    3,\n    22,\n    11,\n    22,\n    10,\n    30,\n    66,\n    18,\n    2,\n    1,\n    11,\n    21,\n    11,\n    25,\n    71,\n    55,\n    7,\n    1,\n    65,\n    0,\n    16,\n    3,\n    2,\n    2,\n    2,\n    28,\n    43,\n    28,\n    4,\n    28,\n    36,\n    7,\n    2,\n    27,\n    28,\n    53,\n    11,\n    21,\n    11,\n    18,\n    14,\n    17,\n    111,\n    72,\n    56,\n    50,\n    14,\n    50,\n    14,\n    35,\n    349,\n    41,\n    7,\n    1,\n    79,\n    28,\n    11,\n    0,\n    9,\n    21,\n    43,\n    17,\n    47,\n    20,\n    28,\n    22,\n    13,\n    52,\n    58,\n    1,\n    3,\n    0,\n    14,\n    44,\n    33,\n    24,\n    27,\n    35,\n    30,\n    0,\n    3,\n    0,\n    9,\n    34,\n    4,\n    0,\n    13,\n    47,\n    15,\n    3,\n    22,\n    0,\n    2,\n    0,\n    36,\n    17,\n    2,\n    24,\n    20,\n    1,\n    64,\n    6,\n    2,\n    0,\n    2,\n    3,\n    2,\n    14,\n    2,\n    9,\n    8,\n    46,\n    39,\n    7,\n    3,\n    1,\n    3,\n    21,\n    2,\n    6,\n    2,\n    1,\n    2,\n    4,\n    4,\n    0,\n    19,\n    0,\n    13,\n    4,\n    159,\n    52,\n    19,\n    3,\n    21,\n    2,\n    31,\n    47,\n    21,\n    1,\n    2,\n    0,\n    185,\n    46,\n    42,\n    3,\n    37,\n    47,\n    21,\n    0,\n    60,\n    42,\n    14,\n    0,\n    72,\n    26,\n    38,\n    6,\n    186,\n    43,\n    117,\n    63,\n    32,\n    7,\n    3,\n    0,\n    3,\n    7,\n    2,\n    1,\n    2,\n    23,\n    16,\n    0,\n    2,\n    0,\n    95,\n    7,\n    3,\n    38,\n    17,\n    0,\n    2,\n    0,\n    29,\n    0,\n    11,\n    39,\n    8,\n    0,\n    22,\n    0,\n    12,\n    45,\n    20,\n    0,\n    19,\n    72,\n    264,\n    8,\n    2,\n    36,\n    18,\n    0,\n    50,\n    29,\n    113,\n    6,\n    2,\n    1,\n    2,\n    37,\n    22,\n    0,\n    26,\n    5,\n    2,\n    1,\n    2,\n    31,\n    15,\n    0,\n    328,\n    18,\n    16,\n    0,\n    2,\n    12,\n    2,\n    33,\n    125,\n    0,\n    80,\n    921,\n    103,\n    110,\n    18,\n    195,\n    2637,\n    96,\n    16,\n    1071,\n    18,\n    5,\n    4026,\n    582,\n    8634,\n    568,\n    8,\n    30,\n    18,\n    78,\n    18,\n    29,\n    19,\n    47,\n    17,\n    3,\n    32,\n    20,\n    6,\n    18,\n    689,\n    63,\n    129,\n    74,\n    6,\n    0,\n    67,\n    12,\n    65,\n    1,\n    2,\n    0,\n    29,\n    6135,\n    9,\n    1237,\n    43,\n    8,\n    8936,\n    3,\n    2,\n    6,\n    2,\n    1,\n    2,\n    290,\n    16,\n    0,\n    30,\n    2,\n    3,\n    0,\n    15,\n    3,\n    9,\n    395,\n    2309,\n    106,\n    6,\n    12,\n    4,\n    8,\n    8,\n    9,\n    5991,\n    84,\n    2,\n    70,\n    2,\n    1,\n    3,\n    0,\n    3,\n    1,\n    3,\n    3,\n    2,\n    11,\n    2,\n    0,\n    2,\n    6,\n    2,\n    64,\n    2,\n    3,\n    3,\n    7,\n    2,\n    6,\n    2,\n    27,\n    2,\n    3,\n    2,\n    4,\n    2,\n    0,\n    4,\n    6,\n    2,\n    339,\n    3,\n    24,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    7,\n    1845,\n    30,\n    7,\n    5,\n    262,\n    61,\n    147,\n    44,\n    11,\n    6,\n    17,\n    0,\n    322,\n    29,\n    19,\n    43,\n    485,\n    27,\n    757,\n    6,\n    2,\n    3,\n    2,\n    1,\n    2,\n    14,\n    2,\n    196,\n    60,\n    67,\n    8,\n    0,\n    1205,\n    3,\n    2,\n    26,\n    2,\n    1,\n    2,\n    0,\n    3,\n    0,\n    2,\n    9,\n    2,\n    3,\n    2,\n    0,\n    2,\n    0,\n    7,\n    0,\n    5,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    2,\n    2,\n    1,\n    2,\n    0,\n    3,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    2,\n    0,\n    3,\n    3,\n    2,\n    6,\n    2,\n    3,\n    2,\n    3,\n    2,\n    0,\n    2,\n    9,\n    2,\n    16,\n    6,\n    2,\n    2,\n    4,\n    2,\n    16,\n    4421,\n    42719,\n    33,\n    4153,\n    7,\n    221,\n    3,\n    5761,\n    15,\n    7472,\n    3104,\n    541,\n    1507,\n    4938,\n    6,\n    4191\n];\n// This file was generated. Do not modify manually!\nvar $d184995ea4e545a3$var$nonASCIIidentifierChars = \"‌‍\\xb7̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿\";\n// This file was generated. Do not modify manually!\nvar $d184995ea4e545a3$var$nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\";\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range.\n// Reserved word lists for various dialects of the language\nvar $d184995ea4e545a3$var$reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n};\n// And the keywords\nvar $d184995ea4e545a3$var$ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\nvar $d184995ea4e545a3$var$keywords$1 = {\n    5: $d184995ea4e545a3$var$ecma5AndLessKeywords,\n    \"5module\": $d184995ea4e545a3$var$ecma5AndLessKeywords + \" export import\",\n    6: $d184995ea4e545a3$var$ecma5AndLessKeywords + \" const class extends export import super\"\n};\nvar $d184995ea4e545a3$var$keywordRelationalOperator = /^in(stanceof)?$/;\n// ## Character categories\nvar $d184995ea4e545a3$var$nonASCIIidentifierStart = new RegExp(\"[\" + $d184995ea4e545a3$var$nonASCIIidentifierStartChars + \"]\");\nvar $d184995ea4e545a3$var$nonASCIIidentifier = new RegExp(\"[\" + $d184995ea4e545a3$var$nonASCIIidentifierStartChars + $d184995ea4e545a3$var$nonASCIIidentifierChars + \"]\");\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction $d184995ea4e545a3$var$isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for(var i = 0; i < set.length; i += 2){\n        pos += set[i];\n        if (pos > code) return false;\n        pos += set[i + 1];\n        if (pos >= code) return true;\n    }\n    return false;\n}\n// Test whether a given character code starts an identifier.\nfunction $d184995ea4e545a3$export$56b48cc5d7560ffb(code, astral) {\n    if (code < 65) return code === 36;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123) return true;\n    if (code <= 0xffff) return code >= 0xaa && $d184995ea4e545a3$var$nonASCIIidentifierStart.test(String.fromCharCode(code));\n    if (astral === false) return false;\n    return $d184995ea4e545a3$var$isInAstralSet(code, $d184995ea4e545a3$var$astralIdentifierStartCodes);\n}\n// Test whether a given character is part of an identifier.\nfunction $d184995ea4e545a3$export$332f4d7bee38db93(code, astral) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123) return true;\n    if (code <= 0xffff) return code >= 0xaa && $d184995ea4e545a3$var$nonASCIIidentifier.test(String.fromCharCode(code));\n    if (astral === false) return false;\n    return $d184995ea4e545a3$var$isInAstralSet(code, $d184995ea4e545a3$var$astralIdentifierStartCodes) || $d184995ea4e545a3$var$isInAstralSet(code, $d184995ea4e545a3$var$astralIdentifierCodes);\n}\n// ## Token types\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\nvar $d184995ea4e545a3$export$f435f793048e7a0f = function TokenType(label, conf) {\n    if (conf === void 0) conf = {};\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n};\nfunction $d184995ea4e545a3$var$binop(name, prec) {\n    return new $d184995ea4e545a3$export$f435f793048e7a0f(name, {\n        beforeExpr: true,\n        binop: prec\n    });\n}\nvar $d184995ea4e545a3$var$beforeExpr = {\n    beforeExpr: true\n}, $d184995ea4e545a3$var$startsExpr = {\n    startsExpr: true\n};\n// Map keyword names to token types.\nvar $d184995ea4e545a3$export$d53f8326294b31d8 = {};\n// Succinct definitions of keyword token types\nfunction $d184995ea4e545a3$var$kw(name, options) {\n    if (options === void 0) options = {};\n    options.keyword = name;\n    return $d184995ea4e545a3$export$d53f8326294b31d8[name] = new $d184995ea4e545a3$export$f435f793048e7a0f(name, options);\n}\nvar $d184995ea4e545a3$export$b54c7ea7aabba5c8 = {\n    num: new $d184995ea4e545a3$export$f435f793048e7a0f(\"num\", $d184995ea4e545a3$var$startsExpr),\n    regexp: new $d184995ea4e545a3$export$f435f793048e7a0f(\"regexp\", $d184995ea4e545a3$var$startsExpr),\n    string: new $d184995ea4e545a3$export$f435f793048e7a0f(\"string\", $d184995ea4e545a3$var$startsExpr),\n    name: new $d184995ea4e545a3$export$f435f793048e7a0f(\"name\", $d184995ea4e545a3$var$startsExpr),\n    privateId: new $d184995ea4e545a3$export$f435f793048e7a0f(\"privateId\", $d184995ea4e545a3$var$startsExpr),\n    eof: new $d184995ea4e545a3$export$f435f793048e7a0f(\"eof\"),\n    // Punctuation token types.\n    bracketL: new $d184995ea4e545a3$export$f435f793048e7a0f(\"[\", {\n        beforeExpr: true,\n        startsExpr: true\n    }),\n    bracketR: new $d184995ea4e545a3$export$f435f793048e7a0f(\"]\"),\n    braceL: new $d184995ea4e545a3$export$f435f793048e7a0f(\"{\", {\n        beforeExpr: true,\n        startsExpr: true\n    }),\n    braceR: new $d184995ea4e545a3$export$f435f793048e7a0f(\"}\"),\n    parenL: new $d184995ea4e545a3$export$f435f793048e7a0f(\"(\", {\n        beforeExpr: true,\n        startsExpr: true\n    }),\n    parenR: new $d184995ea4e545a3$export$f435f793048e7a0f(\")\"),\n    comma: new $d184995ea4e545a3$export$f435f793048e7a0f(\",\", $d184995ea4e545a3$var$beforeExpr),\n    semi: new $d184995ea4e545a3$export$f435f793048e7a0f(\";\", $d184995ea4e545a3$var$beforeExpr),\n    colon: new $d184995ea4e545a3$export$f435f793048e7a0f(\":\", $d184995ea4e545a3$var$beforeExpr),\n    dot: new $d184995ea4e545a3$export$f435f793048e7a0f(\".\"),\n    question: new $d184995ea4e545a3$export$f435f793048e7a0f(\"?\", $d184995ea4e545a3$var$beforeExpr),\n    questionDot: new $d184995ea4e545a3$export$f435f793048e7a0f(\"?.\"),\n    arrow: new $d184995ea4e545a3$export$f435f793048e7a0f(\"=>\", $d184995ea4e545a3$var$beforeExpr),\n    template: new $d184995ea4e545a3$export$f435f793048e7a0f(\"template\"),\n    invalidTemplate: new $d184995ea4e545a3$export$f435f793048e7a0f(\"invalidTemplate\"),\n    ellipsis: new $d184995ea4e545a3$export$f435f793048e7a0f(\"...\", $d184995ea4e545a3$var$beforeExpr),\n    backQuote: new $d184995ea4e545a3$export$f435f793048e7a0f(\"`\", $d184995ea4e545a3$var$startsExpr),\n    dollarBraceL: new $d184995ea4e545a3$export$f435f793048e7a0f(\"${\", {\n        beforeExpr: true,\n        startsExpr: true\n    }),\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n    eq: new $d184995ea4e545a3$export$f435f793048e7a0f(\"=\", {\n        beforeExpr: true,\n        isAssign: true\n    }),\n    assign: new $d184995ea4e545a3$export$f435f793048e7a0f(\"_=\", {\n        beforeExpr: true,\n        isAssign: true\n    }),\n    incDec: new $d184995ea4e545a3$export$f435f793048e7a0f(\"++/--\", {\n        prefix: true,\n        postfix: true,\n        startsExpr: true\n    }),\n    prefix: new $d184995ea4e545a3$export$f435f793048e7a0f(\"!/~\", {\n        beforeExpr: true,\n        prefix: true,\n        startsExpr: true\n    }),\n    logicalOR: $d184995ea4e545a3$var$binop(\"||\", 1),\n    logicalAND: $d184995ea4e545a3$var$binop(\"&&\", 2),\n    bitwiseOR: $d184995ea4e545a3$var$binop(\"|\", 3),\n    bitwiseXOR: $d184995ea4e545a3$var$binop(\"^\", 4),\n    bitwiseAND: $d184995ea4e545a3$var$binop(\"&\", 5),\n    equality: $d184995ea4e545a3$var$binop(\"==/!=/===/!==\", 6),\n    relational: $d184995ea4e545a3$var$binop(\"</>/<=/>=\", 7),\n    bitShift: $d184995ea4e545a3$var$binop(\"<</>>/>>>\", 8),\n    plusMin: new $d184995ea4e545a3$export$f435f793048e7a0f(\"+/-\", {\n        beforeExpr: true,\n        binop: 9,\n        prefix: true,\n        startsExpr: true\n    }),\n    modulo: $d184995ea4e545a3$var$binop(\"%\", 10),\n    star: $d184995ea4e545a3$var$binop(\"*\", 10),\n    slash: $d184995ea4e545a3$var$binop(\"/\", 10),\n    starstar: new $d184995ea4e545a3$export$f435f793048e7a0f(\"**\", {\n        beforeExpr: true\n    }),\n    coalesce: $d184995ea4e545a3$var$binop(\"??\", 1),\n    // Keyword token types.\n    _break: $d184995ea4e545a3$var$kw(\"break\"),\n    _case: $d184995ea4e545a3$var$kw(\"case\", $d184995ea4e545a3$var$beforeExpr),\n    _catch: $d184995ea4e545a3$var$kw(\"catch\"),\n    _continue: $d184995ea4e545a3$var$kw(\"continue\"),\n    _debugger: $d184995ea4e545a3$var$kw(\"debugger\"),\n    _default: $d184995ea4e545a3$var$kw(\"default\", $d184995ea4e545a3$var$beforeExpr),\n    _do: $d184995ea4e545a3$var$kw(\"do\", {\n        isLoop: true,\n        beforeExpr: true\n    }),\n    _else: $d184995ea4e545a3$var$kw(\"else\", $d184995ea4e545a3$var$beforeExpr),\n    _finally: $d184995ea4e545a3$var$kw(\"finally\"),\n    _for: $d184995ea4e545a3$var$kw(\"for\", {\n        isLoop: true\n    }),\n    _function: $d184995ea4e545a3$var$kw(\"function\", $d184995ea4e545a3$var$startsExpr),\n    _if: $d184995ea4e545a3$var$kw(\"if\"),\n    _return: $d184995ea4e545a3$var$kw(\"return\", $d184995ea4e545a3$var$beforeExpr),\n    _switch: $d184995ea4e545a3$var$kw(\"switch\"),\n    _throw: $d184995ea4e545a3$var$kw(\"throw\", $d184995ea4e545a3$var$beforeExpr),\n    _try: $d184995ea4e545a3$var$kw(\"try\"),\n    _var: $d184995ea4e545a3$var$kw(\"var\"),\n    _const: $d184995ea4e545a3$var$kw(\"const\"),\n    _while: $d184995ea4e545a3$var$kw(\"while\", {\n        isLoop: true\n    }),\n    _with: $d184995ea4e545a3$var$kw(\"with\"),\n    _new: $d184995ea4e545a3$var$kw(\"new\", {\n        beforeExpr: true,\n        startsExpr: true\n    }),\n    _this: $d184995ea4e545a3$var$kw(\"this\", $d184995ea4e545a3$var$startsExpr),\n    _super: $d184995ea4e545a3$var$kw(\"super\", $d184995ea4e545a3$var$startsExpr),\n    _class: $d184995ea4e545a3$var$kw(\"class\", $d184995ea4e545a3$var$startsExpr),\n    _extends: $d184995ea4e545a3$var$kw(\"extends\", $d184995ea4e545a3$var$beforeExpr),\n    _export: $d184995ea4e545a3$var$kw(\"export\"),\n    _import: $d184995ea4e545a3$var$kw(\"import\", $d184995ea4e545a3$var$startsExpr),\n    _null: $d184995ea4e545a3$var$kw(\"null\", $d184995ea4e545a3$var$startsExpr),\n    _true: $d184995ea4e545a3$var$kw(\"true\", $d184995ea4e545a3$var$startsExpr),\n    _false: $d184995ea4e545a3$var$kw(\"false\", $d184995ea4e545a3$var$startsExpr),\n    _in: $d184995ea4e545a3$var$kw(\"in\", {\n        beforeExpr: true,\n        binop: 7\n    }),\n    _instanceof: $d184995ea4e545a3$var$kw(\"instanceof\", {\n        beforeExpr: true,\n        binop: 7\n    }),\n    _typeof: $d184995ea4e545a3$var$kw(\"typeof\", {\n        beforeExpr: true,\n        prefix: true,\n        startsExpr: true\n    }),\n    _void: $d184995ea4e545a3$var$kw(\"void\", {\n        beforeExpr: true,\n        prefix: true,\n        startsExpr: true\n    }),\n    _delete: $d184995ea4e545a3$var$kw(\"delete\", {\n        beforeExpr: true,\n        prefix: true,\n        startsExpr: true\n    })\n};\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nvar $d184995ea4e545a3$export$a1aa2dd4ad0d3f6 = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar $d184995ea4e545a3$export$866e20207bbc41f2 = new RegExp($d184995ea4e545a3$export$a1aa2dd4ad0d3f6.source, \"g\");\nfunction $d184995ea4e545a3$export$2c19a3e3b4008fff(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;\n}\nfunction $d184995ea4e545a3$var$nextLineBreak(code, from, end) {\n    if (end === void 0) end = code.length;\n    for(var i = from; i < end; i++){\n        var next = code.charCodeAt(i);\n        if ($d184995ea4e545a3$export$2c19a3e3b4008fff(next)) return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1;\n    }\n    return -1;\n}\nvar $d184995ea4e545a3$export$268622f0f1cbc82b = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\nvar $d184995ea4e545a3$var$skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar $d184995ea4e545a3$var$ref = Object.prototype;\nvar $d184995ea4e545a3$var$hasOwnProperty = $d184995ea4e545a3$var$ref.hasOwnProperty;\nvar $d184995ea4e545a3$var$toString = $d184995ea4e545a3$var$ref.toString;\nvar $d184995ea4e545a3$var$hasOwn = Object.hasOwn || function(obj, propName) {\n    return $d184995ea4e545a3$var$hasOwnProperty.call(obj, propName);\n};\nvar $d184995ea4e545a3$var$isArray = Array.isArray || function(obj) {\n    return $d184995ea4e545a3$var$toString.call(obj) === \"[object Array]\";\n};\nfunction $d184995ea4e545a3$var$wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\");\n}\nfunction $d184995ea4e545a3$var$codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\nvar $d184995ea4e545a3$var$loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\nvar $d184995ea4e545a3$export$13807d9ee5a34a42 = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n};\n$d184995ea4e545a3$export$13807d9ee5a34a42.prototype.offset = function offset(n) {\n    return new $d184995ea4e545a3$export$13807d9ee5a34a42(this.line, this.column + n);\n};\nvar $d184995ea4e545a3$export$7387db7caf96fcdb = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) this.source = p.sourceFile;\n};\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\nfunction $d184995ea4e545a3$export$7af82191547c5ff7(input, offset) {\n    for(var line = 1, cur = 0;;){\n        var nextBreak = $d184995ea4e545a3$var$nextLineBreak(input, cur, offset);\n        if (nextBreak < 0) return new $d184995ea4e545a3$export$13807d9ee5a34a42(line, offset - cur);\n        ++line;\n        cur = nextBreak;\n    }\n}\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\nvar $d184995ea4e545a3$export$ba43bf67f3d48107 = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // By default, the parser will verify that private properties are\n    // only used in places where they are valid and have been declared.\n    // Set this to false to turn such checks off.\n    checkPrivateFields: true,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n};\n// Interpret and default an options object\nvar $d184995ea4e545a3$var$warnedAboutEcmaVersion = false;\nfunction $d184995ea4e545a3$var$getOptions(opts) {\n    var options = {};\n    for(var opt in $d184995ea4e545a3$export$ba43bf67f3d48107)options[opt] = opts && $d184995ea4e545a3$var$hasOwn(opts, opt) ? opts[opt] : $d184995ea4e545a3$export$ba43bf67f3d48107[opt];\n    if (options.ecmaVersion === \"latest\") options.ecmaVersion = 1e8;\n    else if (options.ecmaVersion == null) {\n        if (!$d184995ea4e545a3$var$warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n            $d184995ea4e545a3$var$warnedAboutEcmaVersion = true;\n            console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n        }\n        options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) options.ecmaVersion -= 2009;\n    if (options.allowReserved == null) options.allowReserved = options.ecmaVersion < 5;\n    if (!opts || opts.allowHashBang == null) options.allowHashBang = options.ecmaVersion >= 14;\n    if ($d184995ea4e545a3$var$isArray(options.onToken)) {\n        var tokens = options.onToken;\n        options.onToken = function(token) {\n            return tokens.push(token);\n        };\n    }\n    if ($d184995ea4e545a3$var$isArray(options.onComment)) options.onComment = $d184995ea4e545a3$var$pushComment(options, options.onComment);\n    return options;\n}\nfunction $d184995ea4e545a3$var$pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n        var comment = {\n            type: block ? \"Block\" : \"Line\",\n            value: text,\n            start: start,\n            end: end\n        };\n        if (options.locations) comment.loc = new $d184995ea4e545a3$export$7387db7caf96fcdb(this, startLoc, endLoc);\n        if (options.ranges) comment.range = [\n            start,\n            end\n        ];\n        array.push(comment);\n    };\n}\n// Each scope gets a bitset that may contain these flags\nvar $d184995ea4e545a3$var$SCOPE_TOP = 1, $d184995ea4e545a3$var$SCOPE_FUNCTION = 2, $d184995ea4e545a3$var$SCOPE_ASYNC = 4, $d184995ea4e545a3$var$SCOPE_GENERATOR = 8, $d184995ea4e545a3$var$SCOPE_ARROW = 16, $d184995ea4e545a3$var$SCOPE_SIMPLE_CATCH = 32, $d184995ea4e545a3$var$SCOPE_SUPER = 64, $d184995ea4e545a3$var$SCOPE_DIRECT_SUPER = 128, $d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK = 256, $d184995ea4e545a3$var$SCOPE_VAR = $d184995ea4e545a3$var$SCOPE_TOP | $d184995ea4e545a3$var$SCOPE_FUNCTION | $d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK;\nfunction $d184995ea4e545a3$var$functionFlags(async, generator) {\n    return $d184995ea4e545a3$var$SCOPE_FUNCTION | (async ? $d184995ea4e545a3$var$SCOPE_ASYNC : 0) | (generator ? $d184995ea4e545a3$var$SCOPE_GENERATOR : 0);\n}\n// Used in checkLVal* and declareName to determine the type of a binding\nvar $d184995ea4e545a3$var$BIND_NONE = 0, $d184995ea4e545a3$var$BIND_VAR = 1, $d184995ea4e545a3$var$BIND_LEXICAL = 2, $d184995ea4e545a3$var$BIND_FUNCTION = 3, $d184995ea4e545a3$var$BIND_SIMPLE_CATCH = 4, $d184995ea4e545a3$var$BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\nvar $d184995ea4e545a3$export$7acfa6ed01010e37 = function Parser(options, input, startPos) {\n    this.options = options = $d184995ea4e545a3$var$getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = $d184995ea4e545a3$var$wordsRegexp($d184995ea4e545a3$var$keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n        reserved = $d184995ea4e545a3$var$reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n        if (options.sourceType === \"module\") reserved += \" await\";\n    }\n    this.reservedWords = $d184995ea4e545a3$var$wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + $d184995ea4e545a3$var$reservedWords.strict;\n    this.reservedWordsStrict = $d184995ea4e545a3$var$wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = $d184995ea4e545a3$var$wordsRegexp(reservedStrict + \" \" + $d184995ea4e545a3$var$reservedWords.strictBind);\n    this.input = String(input);\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n    // Set up token state\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n        this.pos = startPos;\n        this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n        this.curLine = this.input.slice(0, this.lineStart).split($d184995ea4e545a3$export$a1aa2dd4ad0d3f6).length;\n    } else {\n        this.pos = this.lineStart = 0;\n        this.curLine = 1;\n    }\n    // Properties of the current token:\n    // Its type\n    this.type = $d184995ea4e545a3$export$b54c7ea7aabba5c8.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\") this.skipLineComment(2);\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope($d184995ea4e545a3$var$SCOPE_TOP);\n    // For RegExp validation\n    this.regexpState = null;\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n};\nvar $d184995ea4e545a3$var$prototypeAccessors = {\n    inFunction: {\n        configurable: true\n    },\n    inGenerator: {\n        configurable: true\n    },\n    inAsync: {\n        configurable: true\n    },\n    canAwait: {\n        configurable: true\n    },\n    allowSuper: {\n        configurable: true\n    },\n    allowDirectSuper: {\n        configurable: true\n    },\n    treatFunctionsAsVar: {\n        configurable: true\n    },\n    allowNewDotTarget: {\n        configurable: true\n    },\n    inClassStaticBlock: {\n        configurable: true\n    }\n};\n$d184995ea4e545a3$export$7acfa6ed01010e37.prototype.parse = function parse() {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node);\n};\n$d184995ea4e545a3$var$prototypeAccessors.inFunction.get = function() {\n    return (this.currentVarScope().flags & $d184995ea4e545a3$var$SCOPE_FUNCTION) > 0;\n};\n$d184995ea4e545a3$var$prototypeAccessors.inGenerator.get = function() {\n    return (this.currentVarScope().flags & $d184995ea4e545a3$var$SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit;\n};\n$d184995ea4e545a3$var$prototypeAccessors.inAsync.get = function() {\n    return (this.currentVarScope().flags & $d184995ea4e545a3$var$SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit;\n};\n$d184995ea4e545a3$var$prototypeAccessors.canAwait.get = function() {\n    for(var i = this.scopeStack.length - 1; i >= 0; i--){\n        var scope = this.scopeStack[i];\n        if (scope.inClassFieldInit || scope.flags & $d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK) return false;\n        if (scope.flags & $d184995ea4e545a3$var$SCOPE_FUNCTION) return (scope.flags & $d184995ea4e545a3$var$SCOPE_ASYNC) > 0;\n    }\n    return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;\n};\n$d184995ea4e545a3$var$prototypeAccessors.allowSuper.get = function() {\n    var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & $d184995ea4e545a3$var$SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod;\n};\n$d184995ea4e545a3$var$prototypeAccessors.allowDirectSuper.get = function() {\n    return (this.currentThisScope().flags & $d184995ea4e545a3$var$SCOPE_DIRECT_SUPER) > 0;\n};\n$d184995ea4e545a3$var$prototypeAccessors.treatFunctionsAsVar.get = function() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n};\n$d184995ea4e545a3$var$prototypeAccessors.allowNewDotTarget.get = function() {\n    var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & ($d184995ea4e545a3$var$SCOPE_FUNCTION | $d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit;\n};\n$d184995ea4e545a3$var$prototypeAccessors.inClassStaticBlock.get = function() {\n    return (this.currentVarScope().flags & $d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK) > 0;\n};\n$d184995ea4e545a3$export$7acfa6ed01010e37.extend = function extend() {\n    var plugins = [], len = arguments.length;\n    while(len--)plugins[len] = arguments[len];\n    var cls = this;\n    for(var i = 0; i < plugins.length; i++)cls = plugins[i](cls);\n    return cls;\n};\n$d184995ea4e545a3$export$7acfa6ed01010e37.parse = function parse(input, options) {\n    return new this(options, input).parse();\n};\n$d184995ea4e545a3$export$7acfa6ed01010e37.parseExpressionAt = function parseExpressionAt(input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression();\n};\n$d184995ea4e545a3$export$7acfa6ed01010e37.tokenizer = function tokenizer(input, options) {\n    return new this(options, input);\n};\nObject.defineProperties($d184995ea4e545a3$export$7acfa6ed01010e37.prototype, $d184995ea4e545a3$var$prototypeAccessors);\nvar $d184995ea4e545a3$var$pp$9 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n// ## Parser utilities\nvar $d184995ea4e545a3$var$literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n$d184995ea4e545a3$var$pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) return false;\n    for(;;){\n        // Try to find string literal.\n        $d184995ea4e545a3$var$skipWhiteSpace.lastIndex = start;\n        start += $d184995ea4e545a3$var$skipWhiteSpace.exec(this.input)[0].length;\n        var match = $d184995ea4e545a3$var$literal.exec(this.input.slice(start));\n        if (!match) return false;\n        if ((match[1] || match[2]) === \"use strict\") {\n            $d184995ea4e545a3$var$skipWhiteSpace.lastIndex = start + match[0].length;\n            var spaceAfter = $d184995ea4e545a3$var$skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n            var next = this.input.charAt(end);\n            return next === \";\" || next === \"}\" || $d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(spaceAfter[0]) && !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\");\n        }\n        start += match[0].length;\n        // Skip semicolon, if any.\n        $d184995ea4e545a3$var$skipWhiteSpace.lastIndex = start;\n        start += $d184995ea4e545a3$var$skipWhiteSpace.exec(this.input)[0].length;\n        if (this.input[start] === \";\") start++;\n    }\n};\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n$d184995ea4e545a3$var$pp$9.eat = function(type) {\n    if (this.type === type) {\n        this.next();\n        return true;\n    } else return false;\n};\n// Tests whether parsed token is a contextual keyword.\n$d184995ea4e545a3$var$pp$9.isContextual = function(name) {\n    return this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name && this.value === name && !this.containsEsc;\n};\n// Consumes contextual keyword if possible.\n$d184995ea4e545a3$var$pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) return false;\n    this.next();\n    return true;\n};\n// Asserts that following token is given contextual keyword.\n$d184995ea4e545a3$var$pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) this.unexpected();\n};\n// Test whether a semicolon can be inserted at the current position.\n$d184995ea4e545a3$var$pp$9.canInsertSemicolon = function() {\n    return this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eof || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR || $d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.lastTokEnd, this.start));\n};\n$d184995ea4e545a3$var$pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n        if (this.options.onInsertedSemicolon) this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n        return true;\n    }\n};\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n$d184995ea4e545a3$var$pp$9.semicolon = function() {\n    if (!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi) && !this.insertSemicolon()) this.unexpected();\n};\n$d184995ea4e545a3$var$pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n        if (this.options.onTrailingComma) this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n        if (!notNext) this.next();\n        return true;\n    }\n};\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n$d184995ea4e545a3$var$pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n};\n// Raise an unexpected token error.\n$d184995ea4e545a3$var$pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\nvar $d184995ea4e545a3$var$DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n};\n$d184995ea4e545a3$var$pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) return;\n    if (refDestructuringErrors.trailingComma > -1) this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\");\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\");\n};\n$d184995ea4e545a3$var$pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) return false;\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\");\n    if (doubleProto >= 0) this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\");\n};\n$d184995ea4e545a3$var$pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) this.raise(this.yieldPos, \"Yield expression cannot be a default value\");\n    if (this.awaitPos) this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n};\n$d184995ea4e545a3$var$pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\") return this.isSimpleAssignTarget(expr.expression);\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\";\n};\nvar $d184995ea4e545a3$var$pp$8 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n// ### Statement parsing\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n$d184995ea4e545a3$var$pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) node.body = [];\n    while(this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.eof){\n        var stmt = this.parseStatement(null, true, exports);\n        node.body.push(stmt);\n    }\n    if (this.inModule) for(var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1){\n        var name = list[i];\n        this.raiseRecoverable(this.undefinedExports[name].start, \"Export '\" + name + \"' is not defined\");\n    }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\");\n};\nvar $d184995ea4e545a3$var$loopLabel = {\n    kind: \"loop\"\n}, $d184995ea4e545a3$var$switchLabel = {\n    kind: \"switch\"\n};\n$d184995ea4e545a3$var$pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) return false;\n    $d184995ea4e545a3$var$skipWhiteSpace.lastIndex = this.pos;\n    var skip = $d184995ea4e545a3$var$skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92) return true;\n     // '[', '/'\n    if (context) return false;\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) return true;\n     // '{', astral\n    if ($d184995ea4e545a3$export$56b48cc5d7560ffb(nextCh, true)) {\n        var pos = next + 1;\n        while($d184995ea4e545a3$export$332f4d7bee38db93(nextCh = this.input.charCodeAt(pos), true))++pos;\n        if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) return true;\n        var ident = this.input.slice(next, pos);\n        if (!$d184995ea4e545a3$var$keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n};\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\n$d184995ea4e545a3$var$pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) return false;\n    $d184995ea4e545a3$var$skipWhiteSpace.lastIndex = this.pos;\n    var skip = $d184995ea4e545a3$var$skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !$d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === \"function\" && (next + 8 === this.input.length || !($d184995ea4e545a3$export$332f4d7bee38db93(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00));\n};\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n$d184995ea4e545a3$var$pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n    if (this.isLet(context)) {\n        starttype = $d184995ea4e545a3$export$b54c7ea7aabba5c8._var;\n        kind = \"let\";\n    }\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n    switch(starttype){\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._break:\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._continue:\n            return this.parseBreakContinueStatement(node, starttype.keyword);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._debugger:\n            return this.parseDebuggerStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._do:\n            return this.parseDoStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._for:\n            return this.parseForStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._function:\n            // Function as sole body of either an if statement or a labeled statement\n            // works, but not when it is part of a labeled statement that is the sole\n            // body of an if statement.\n            if (context && (this.strict || context !== \"if\" && context !== \"label\") && this.options.ecmaVersion >= 6) this.unexpected();\n            return this.parseFunctionStatement(node, false, !context);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._class:\n            if (context) this.unexpected();\n            return this.parseClass(node, true);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._if:\n            return this.parseIfStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._return:\n            return this.parseReturnStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._switch:\n            return this.parseSwitchStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._throw:\n            return this.parseThrowStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._try:\n            return this.parseTryStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._const:\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._var:\n            kind = kind || this.value;\n            if (context && kind !== \"var\") this.unexpected();\n            return this.parseVarStatement(node, kind);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._while:\n            return this.parseWhileStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._with:\n            return this.parseWithStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL:\n            return this.parseBlock(true, node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.semi:\n            return this.parseEmptyStatement(node);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._export:\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._import:\n            if (this.options.ecmaVersion > 10 && starttype === $d184995ea4e545a3$export$b54c7ea7aabba5c8._import) {\n                $d184995ea4e545a3$var$skipWhiteSpace.lastIndex = this.pos;\n                var skip = $d184995ea4e545a3$var$skipWhiteSpace.exec(this.input);\n                var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n                if (nextCh === 40 || nextCh === 46) return this.parseExpressionStatement(node, this.parseExpression());\n            }\n            if (!this.options.allowImportExportEverywhere) {\n                if (!topLevel) this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n                if (!this.inModule) this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n            }\n            return starttype === $d184995ea4e545a3$export$b54c7ea7aabba5c8._import ? this.parseImport(node) : this.parseExport(node, exports);\n        // If the statement does not start with a statement keyword or a\n        // brace, it's an ExpressionStatement or LabeledStatement. We\n        // simply start parsing an expression, and afterwards, if the\n        // next token is a colon and the expression was a simple\n        // Identifier node, we switch to interpreting it as a label.\n        default:\n            if (this.isAsyncFunction()) {\n                if (context) this.unexpected();\n                this.next();\n                return this.parseFunctionStatement(node, true, !context);\n            }\n            var maybeName = this.value, expr = this.parseExpression();\n            if (starttype === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name && expr.type === \"Identifier\" && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.colon)) return this.parseLabeledStatement(node, maybeName, expr, context);\n            else return this.parseExpressionStatement(node, expr);\n    }\n};\n$d184995ea4e545a3$var$pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi) || this.insertSemicolon()) node.label = null;\n    else if (this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) this.unexpected();\n    else {\n        node.label = this.parseIdent();\n        this.semicolon();\n    }\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for(; i < this.labels.length; ++i){\n        var lab = this.labels[i];\n        if (node.label == null || lab.name === node.label.name) {\n            if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n            if (node.label && isBreak) break;\n        }\n    }\n    if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push($d184995ea4e545a3$var$loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6) this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi);\n    else this.semicolon();\n    return this.finishNode(node, \"DoWhileStatement\");\n};\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n$d184995ea4e545a3$var$pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n    this.labels.push($d184995ea4e545a3$var$loopLabel);\n    this.enterScope(0);\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL);\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.semi) {\n        if (awaitAt > -1) this.unexpected(awaitAt);\n        return this.parseFor(node, null);\n    }\n    var isLet = this.isLet();\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._var || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._const || isLet) {\n        var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n        this.next();\n        this.parseVar(init$1, true, kind);\n        this.finishNode(init$1, \"VariableDeclaration\");\n        if ((this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && init$1.declarations.length === 1) {\n            if (this.options.ecmaVersion >= 9) {\n                if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in) {\n                    if (awaitAt > -1) this.unexpected(awaitAt);\n                } else node.await = awaitAt > -1;\n            }\n            return this.parseForIn(node, init$1);\n        }\n        if (awaitAt > -1) this.unexpected(awaitAt);\n        return this.parseFor(node, init$1);\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n    var refDestructuringErrors = new $d184995ea4e545a3$var$DestructuringErrors;\n    var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n        if (this.options.ecmaVersion >= 9) {\n            if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in) {\n                if (awaitAt > -1) this.unexpected(awaitAt);\n            } else node.await = awaitAt > -1;\n        }\n        if (startsWithLet && isForOf) this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\");\n        this.toAssignable(init, false, refDestructuringErrors);\n        this.checkLValPattern(init);\n        return this.parseForIn(node, init);\n    } else this.checkExpressionErrors(refDestructuringErrors, true);\n    if (awaitAt > -1) this.unexpected(awaitAt);\n    return this.parseFor(node, init);\n};\n$d184995ea4e545a3$var$pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, $d184995ea4e545a3$var$FUNC_STATEMENT | (declarationPosition ? 0 : $d184995ea4e545a3$var$FUNC_HANGING_STATEMENT), false, isAsync);\n};\n$d184995ea4e545a3$var$pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction) this.raise(this.start, \"'return' outside of function\");\n    this.next();\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi) || this.insertSemicolon()) node.argument = null;\n    else {\n        node.argument = this.parseExpression();\n        this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL);\n    this.labels.push($d184995ea4e545a3$var$switchLabel);\n    this.enterScope(0);\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n    var cur;\n    for(var sawDefault = false; this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR;)if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._case || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._default) {\n        var isCase = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._case;\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) cur.test = this.parseExpression();\n        else {\n            if (sawDefault) this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\");\n            sawDefault = true;\n            cur.test = null;\n        }\n        this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.colon);\n    } else {\n        if (!cur) this.unexpected();\n        cur.consequent.push(this.parseStatement(null));\n    }\n    this.exitScope();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if ($d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n};\n// Reused empty array added for node fields that are always empty.\nvar $d184995ea4e545a3$var$empty$1 = [];\n$d184995ea4e545a3$var$pp$8.parseCatchClauseParam = function() {\n    var param = this.parseBindingAtom();\n    var simple = param.type === \"Identifier\";\n    this.enterScope(simple ? $d184995ea4e545a3$var$SCOPE_SIMPLE_CATCH : 0);\n    this.checkLValPattern(param, simple ? $d184995ea4e545a3$var$BIND_SIMPLE_CATCH : $d184995ea4e545a3$var$BIND_LEXICAL);\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR);\n    return param;\n};\n$d184995ea4e545a3$var$pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._catch) {\n        var clause = this.startNode();\n        this.next();\n        if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL)) clause.param = this.parseCatchClauseParam();\n        else {\n            if (this.options.ecmaVersion < 10) this.unexpected();\n            clause.param = null;\n            this.enterScope(0);\n        }\n        clause.body = this.parseBlock(false);\n        this.exitScope();\n        node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) this.raise(node.start, \"Missing catch or finally clause\");\n    return this.finishNode(node, \"TryStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n};\n$d184995ea4e545a3$var$pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push($d184995ea4e545a3$var$loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseWithStatement = function(node) {\n    if (this.strict) this.raise(this.start, \"'with' in strict mode\");\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for(var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1){\n        var label = list[i$1];\n        if (label.name === maybeName) this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    }\n    var kind = this.type.isLoop ? \"loop\" : this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._switch ? \"switch\" : null;\n    for(var i = this.labels.length - 1; i >= 0; i--){\n        var label$1 = this.labels[i];\n        if (label$1.statementStart === node.start) {\n            // Update information about previous labels on this node\n            label$1.statementStart = this.start;\n            label$1.kind = kind;\n        } else break;\n    }\n    this.labels.push({\n        name: maybeName,\n        kind: kind,\n        statementStart: this.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n};\n$d184995ea4e545a3$var$pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n};\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n$d184995ea4e545a3$var$pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n    if (node === void 0) node = this.startNode();\n    node.body = [];\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL);\n    if (createNewLexicalScope) this.enterScope(0);\n    while(this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR){\n        var stmt = this.parseStatement(null);\n        node.body.push(stmt);\n    }\n    if (exitStrict) this.strict = false;\n    this.next();\n    if (createNewLexicalScope) this.exitScope();\n    return this.finishNode(node, \"BlockStatement\");\n};\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n$d184995ea4e545a3$var$pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi);\n    node.test = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.semi ? null : this.parseExpression();\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi);\n    node.update = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR ? null : this.parseExpression();\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n};\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n$d184995ea4e545a3$var$pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in;\n    this.next();\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) this.raise(init.start, (isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\");\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n};\n// Parse a list of variable declarations.\n$d184995ea4e545a3$var$pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n    node.declarations = [];\n    node.kind = kind;\n    for(;;){\n        var decl = this.startNode();\n        this.parseVarId(decl, kind);\n        if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.eq)) decl.init = this.parseMaybeAssign(isFor);\n        else if (!allowMissingInitializer && kind === \"const\" && !(this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) this.unexpected();\n        else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._in || this.isContextual(\"of\")))) this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n        else decl.init = null;\n        node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n        if (!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma)) break;\n    }\n    return node;\n};\n$d184995ea4e545a3$var$pp$8.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLValPattern(decl.id, kind === \"var\" ? $d184995ea4e545a3$var$BIND_VAR : $d184995ea4e545a3$var$BIND_LEXICAL, false);\n};\nvar $d184995ea4e545a3$var$FUNC_STATEMENT = 1, $d184995ea4e545a3$var$FUNC_HANGING_STATEMENT = 2, $d184995ea4e545a3$var$FUNC_NULLABLE_ID = 4;\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n$d184995ea4e545a3$var$pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n        if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.star && statement & $d184995ea4e545a3$var$FUNC_HANGING_STATEMENT) this.unexpected();\n        node.generator = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.star);\n    }\n    if (this.options.ecmaVersion >= 8) node.async = !!isAsync;\n    if (statement & $d184995ea4e545a3$var$FUNC_STATEMENT) {\n        node.id = statement & $d184995ea4e545a3$var$FUNC_NULLABLE_ID && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.name ? null : this.parseIdent();\n        if (node.id && !(statement & $d184995ea4e545a3$var$FUNC_HANGING_STATEMENT)) this.checkLValSimple(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? $d184995ea4e545a3$var$BIND_VAR : $d184995ea4e545a3$var$BIND_LEXICAL : $d184995ea4e545a3$var$BIND_FUNCTION);\n    }\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope($d184995ea4e545a3$var$functionFlags(node.async, node.generator));\n    if (!(statement & $d184995ea4e545a3$var$FUNC_STATEMENT)) node.id = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name ? this.parseIdent() : null;\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, statement & $d184995ea4e545a3$var$FUNC_STATEMENT ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\n$d184995ea4e545a3$var$pp$8.parseFunctionParams = function(node) {\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL);\n    node.params = this.parseBindingList($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n};\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n$d184995ea4e545a3$var$pp$8.parseClass = function(node, isStatement) {\n    this.next();\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL);\n    while(this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR){\n        var element = this.parseClassElement(node.superClass !== null);\n        if (element) {\n            classBody.body.push(element);\n            if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n                if (hadConstructor) this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\");\n                hadConstructor = true;\n            } else if (element.key && element.key.type === \"PrivateIdentifier\" && $d184995ea4e545a3$var$isPrivateNameConflicted(privateNameMap, element)) this.raiseRecoverable(element.key.start, \"Identifier '#\" + element.key.name + \"' has already been declared\");\n        }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\n$d184995ea4e545a3$var$pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi)) return null;\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n    if (this.eatContextual(\"static\")) {\n        // Parse static init block\n        if (ecmaVersion >= 13 && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL)) {\n            this.parseClassStaticBlock(node);\n            return node;\n        }\n        if (this.isClassElementNameStart() || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.star) isStatic = true;\n        else keyName = \"static\";\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n        if ((this.isClassElementNameStart() || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.star) && !this.canInsertSemicolon()) isAsync = true;\n        else keyName = \"async\";\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.star)) isGenerator = true;\n    if (!keyName && !isAsync && !isGenerator) {\n        var lastValue = this.value;\n        if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n            if (this.isClassElementNameStart()) kind = lastValue;\n            else keyName = lastValue;\n        }\n    }\n    // Parse element name\n    if (keyName) {\n        // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n        // The last token is any of those. Make it the element name.\n        node.computed = false;\n        node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n        node.key.name = keyName;\n        this.finishNode(node.key, \"Identifier\");\n    } else this.parseClassElementName(node);\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL || kind !== \"method\" || isGenerator || isAsync) {\n        var isConstructor = !node.static && $d184995ea4e545a3$var$checkKeyName(node, \"constructor\");\n        var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n        // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n        if (isConstructor && kind !== \"method\") this.raise(node.key.start, \"Constructor can't have get/set modifier\");\n        node.kind = isConstructor ? \"constructor\" : kind;\n        this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else this.parseClassField(node);\n    return node;\n};\n$d184995ea4e545a3$var$pp$8.isClassElementNameStart = function() {\n    return this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.privateId || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.num || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.string || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL || this.type.keyword;\n};\n$d184995ea4e545a3$var$pp$8.parseClassElementName = function(element) {\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.privateId) {\n        if (this.value === \"constructor\") this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n        element.computed = false;\n        element.key = this.parsePrivateIdent();\n    } else this.parsePropertyName(element);\n};\n$d184995ea4e545a3$var$pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n        if (isGenerator) this.raise(key.start, \"Constructor can't be a generator\");\n        if (isAsync) this.raise(key.start, \"Constructor can't be an async method\");\n    } else if (method.static && $d184995ea4e545a3$var$checkKeyName(method, \"prototype\")) this.raise(key.start, \"Classes may not have a static property named prototype\");\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0) this.raiseRecoverable(value.start, \"getter should have no params\");\n    if (method.kind === \"set\" && value.params.length !== 1) this.raiseRecoverable(value.start, \"setter should have exactly one param\");\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\") this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\");\n    return this.finishNode(method, \"MethodDefinition\");\n};\n$d184995ea4e545a3$var$pp$8.parseClassField = function(field) {\n    if ($d184995ea4e545a3$var$checkKeyName(field, \"constructor\")) this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    else if (field.static && $d184995ea4e545a3$var$checkKeyName(field, \"prototype\")) this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.eq)) {\n        // To raise SyntaxError if 'arguments' exists in the initializer.\n        var scope = this.currentThisScope();\n        var inClassFieldInit = scope.inClassFieldInit;\n        scope.inClassFieldInit = true;\n        field.value = this.parseMaybeAssign();\n        scope.inClassFieldInit = inClassFieldInit;\n    } else field.value = null;\n    this.semicolon();\n    return this.finishNode(field, \"PropertyDefinition\");\n};\n$d184995ea4e545a3$var$pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope($d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK | $d184995ea4e545a3$var$SCOPE_SUPER);\n    while(this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR){\n        var stmt = this.parseStatement(null);\n        node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n    return this.finishNode(node, \"StaticBlock\");\n};\n$d184995ea4e545a3$var$pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) {\n        node.id = this.parseIdent();\n        if (isStatement) this.checkLValSimple(node.id, $d184995ea4e545a3$var$BIND_LEXICAL, false);\n    } else {\n        if (isStatement === true) this.unexpected();\n        node.id = null;\n    }\n};\n$d184995ea4e545a3$var$pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8._extends) ? this.parseExprSubscripts(null, false) : null;\n};\n$d184995ea4e545a3$var$pp$8.enterClassBody = function() {\n    var element = {\n        declared: Object.create(null),\n        used: []\n    };\n    this.privateNameStack.push(element);\n    return element.declared;\n};\n$d184995ea4e545a3$var$pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    if (!this.options.checkPrivateFields) return;\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for(var i = 0; i < used.length; ++i){\n        var id = used[i];\n        if (!$d184995ea4e545a3$var$hasOwn(declared, id.name)) {\n            if (parent) parent.used.push(id);\n            else this.raiseRecoverable(id.start, \"Private field '#\" + id.name + \"' must be declared in an enclosing class\");\n        }\n    }\n};\nfunction $d184995ea4e545a3$var$isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) next = (element.static ? \"s\" : \"i\") + element.kind;\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (curr === \"iget\" && next === \"iset\" || curr === \"iset\" && next === \"iget\" || curr === \"sget\" && next === \"sset\" || curr === \"sset\" && next === \"sget\") {\n        privateNameMap[name] = \"true\";\n        return false;\n    } else if (!curr) {\n        privateNameMap[name] = next;\n        return false;\n    } else return true;\n}\nfunction $d184995ea4e545a3$var$checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (key.type === \"Identifier\" && key.name === name || key.type === \"Literal\" && key.value === name);\n}\n// Parses module export declaration.\n$d184995ea4e545a3$var$pp$8.parseExportAllDeclaration = function(node, exports) {\n    if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n            node.exported = this.parseModuleExportName();\n            this.checkExport(exports, node.exported, this.lastTokStart);\n        } else node.exported = null;\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.string) this.unexpected();\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n};\n$d184995ea4e545a3$var$pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.star)) return this.parseExportAllDeclaration(node, exports);\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8._default)) {\n        this.checkExport(exports, \"default\", this.lastTokStart);\n        node.declaration = this.parseExportDefaultDeclaration();\n        return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n        node.declaration = this.parseExportDeclaration(node);\n        if (node.declaration.type === \"VariableDeclaration\") this.checkVariableExport(exports, node.declaration.declarations);\n        else this.checkExport(exports, node.declaration.id, node.declaration.id.start);\n        node.specifiers = [];\n        node.source = null;\n    } else {\n        node.declaration = null;\n        node.specifiers = this.parseExportSpecifiers(exports);\n        if (this.eatContextual(\"from\")) {\n            if (this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.string) this.unexpected();\n            node.source = this.parseExprAtom();\n        } else {\n            for(var i = 0, list = node.specifiers; i < list.length; i += 1){\n                // check for keywords used as local names\n                var spec = list[i];\n                this.checkUnreserved(spec.local);\n                // check if export is defined\n                this.checkLocalExport(spec.local);\n                if (spec.local.type === \"Literal\") this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n            }\n            node.source = null;\n        }\n        this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\");\n};\n$d184995ea4e545a3$var$pp$8.parseExportDeclaration = function(node) {\n    return this.parseStatement(null);\n};\n$d184995ea4e545a3$var$pp$8.parseExportDefaultDeclaration = function() {\n    var isAsync;\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) this.next();\n        return this.parseFunction(fNode, $d184995ea4e545a3$var$FUNC_STATEMENT | $d184995ea4e545a3$var$FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._class) {\n        var cNode = this.startNode();\n        return this.parseClass(cNode, \"nullableID\");\n    } else {\n        var declaration = this.parseMaybeAssign();\n        this.semicolon();\n        return declaration;\n    }\n};\n$d184995ea4e545a3$var$pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) return;\n    if (typeof name !== \"string\") name = name.type === \"Identifier\" ? name.name : name.value;\n    if ($d184995ea4e545a3$var$hasOwn(exports, name)) this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\");\n    exports[name] = true;\n};\n$d184995ea4e545a3$var$pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\") this.checkExport(exports, pat, pat.start);\n    else if (type === \"ObjectPattern\") for(var i = 0, list = pat.properties; i < list.length; i += 1){\n        var prop = list[i];\n        this.checkPatternExport(exports, prop);\n    }\n    else if (type === \"ArrayPattern\") for(var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1){\n        var elt = list$1[i$1];\n        if (elt) this.checkPatternExport(exports, elt);\n    }\n    else if (type === \"Property\") this.checkPatternExport(exports, pat.value);\n    else if (type === \"AssignmentPattern\") this.checkPatternExport(exports, pat.left);\n    else if (type === \"RestElement\") this.checkPatternExport(exports, pat.argument);\n    else if (type === \"ParenthesizedExpression\") this.checkPatternExport(exports, pat.expression);\n};\n$d184995ea4e545a3$var$pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) return;\n    for(var i = 0, list = decls; i < list.length; i += 1){\n        var decl = list[i];\n        this.checkPatternExport(exports, decl.id);\n    }\n};\n$d184995ea4e545a3$var$pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" || this.type.keyword === \"const\" || this.type.keyword === \"class\" || this.type.keyword === \"function\" || this.isLet() || this.isAsyncFunction();\n};\n// Parses a comma-separated list of module exports.\n$d184995ea4e545a3$var$pp$8.parseExportSpecifier = function(exports) {\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(exports, node.exported, node.exported.start);\n    return this.finishNode(node, \"ExportSpecifier\");\n};\n$d184995ea4e545a3$var$pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL);\n    while(!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR)){\n        if (!first) {\n            this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n            if (this.afterTrailingComma($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR)) break;\n        } else first = false;\n        nodes.push(this.parseExportSpecifier(exports));\n    }\n    return nodes;\n};\n// Parses import declaration.\n$d184995ea4e545a3$var$pp$8.parseImport = function(node) {\n    this.next();\n    // import '...'\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.string) {\n        node.specifiers = $d184995ea4e545a3$var$empty$1;\n        node.source = this.parseExprAtom();\n    } else {\n        node.specifiers = this.parseImportSpecifiers();\n        this.expectContextual(\"from\");\n        node.source = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n};\n// Parses a comma-separated list of module imports.\n$d184995ea4e545a3$var$pp$8.parseImportSpecifier = function() {\n    var node = this.startNode();\n    node.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) node.local = this.parseIdent();\n    else {\n        this.checkUnreserved(node.imported);\n        node.local = node.imported;\n    }\n    this.checkLValSimple(node.local, $d184995ea4e545a3$var$BIND_LEXICAL);\n    return this.finishNode(node, \"ImportSpecifier\");\n};\n$d184995ea4e545a3$var$pp$8.parseImportDefaultSpecifier = function() {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, $d184995ea4e545a3$var$BIND_LEXICAL);\n    return this.finishNode(node, \"ImportDefaultSpecifier\");\n};\n$d184995ea4e545a3$var$pp$8.parseImportNamespaceSpecifier = function() {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, $d184995ea4e545a3$var$BIND_LEXICAL);\n    return this.finishNode(node, \"ImportNamespaceSpecifier\");\n};\n$d184995ea4e545a3$var$pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) {\n        nodes.push(this.parseImportDefaultSpecifier());\n        if (!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma)) return nodes;\n    }\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.star) {\n        nodes.push(this.parseImportNamespaceSpecifier());\n        return nodes;\n    }\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL);\n    while(!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR)){\n        if (!first) {\n            this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n            if (this.afterTrailingComma($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR)) break;\n        } else first = false;\n        nodes.push(this.parseImportSpecifier());\n    }\n    return nodes;\n};\n$d184995ea4e545a3$var$pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.string) {\n        var stringLiteral = this.parseLiteral(this.value);\n        if ($d184995ea4e545a3$var$loneSurrogate.test(stringLiteral.value)) this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n        return stringLiteral;\n    }\n    return this.parseIdent(true);\n};\n// Set `ExpressionStatement#directive` property for directive prologues.\n$d184995ea4e545a3$var$pp$8.adaptDirectivePrologue = function(statements) {\n    for(var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i)statements[i].directive = statements[i].expression.raw.slice(1, -1);\n};\n$d184995ea4e545a3$var$pp$8.isDirectiveCandidate = function(statement) {\n    return this.options.ecmaVersion >= 5 && statement.type === \"ExpressionStatement\" && statement.expression.type === \"Literal\" && typeof statement.expression.value === \"string\" && // Reject parenthesized strings.\n    (this.input[statement.start] === '\"' || this.input[statement.start] === \"'\");\n};\nvar $d184995ea4e545a3$var$pp$7 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n// Convert existing expression atom to assignable pattern\n// if possible.\n$d184995ea4e545a3$var$pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) switch(node.type){\n        case \"Identifier\":\n            if (this.inAsync && node.name === \"await\") this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\");\n            break;\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n        case \"RestElement\":\n            break;\n        case \"ObjectExpression\":\n            node.type = \"ObjectPattern\";\n            if (refDestructuringErrors) this.checkPatternErrors(refDestructuringErrors, true);\n            for(var i = 0, list = node.properties; i < list.length; i += 1){\n                var prop = list[i];\n                this.toAssignable(prop, isBinding);\n                // Early error:\n                //   AssignmentRestProperty[Yield, Await] :\n                //     `...` DestructuringAssignmentTarget[Yield, Await]\n                //\n                //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n                if (prop.type === \"RestElement\" && (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")) this.raise(prop.argument.start, \"Unexpected token\");\n            }\n            break;\n        case \"Property\":\n            // AssignmentProperty has type === \"Property\"\n            if (node.kind !== \"init\") this.raise(node.key.start, \"Object pattern can't contain getter or setter\");\n            this.toAssignable(node.value, isBinding);\n            break;\n        case \"ArrayExpression\":\n            node.type = \"ArrayPattern\";\n            if (refDestructuringErrors) this.checkPatternErrors(refDestructuringErrors, true);\n            this.toAssignableList(node.elements, isBinding);\n            break;\n        case \"SpreadElement\":\n            node.type = \"RestElement\";\n            this.toAssignable(node.argument, isBinding);\n            if (node.argument.type === \"AssignmentPattern\") this.raise(node.argument.start, \"Rest elements cannot have a default value\");\n            break;\n        case \"AssignmentExpression\":\n            if (node.operator !== \"=\") this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n            node.type = \"AssignmentPattern\";\n            delete node.operator;\n            this.toAssignable(node.left, isBinding);\n            break;\n        case \"ParenthesizedExpression\":\n            this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n            break;\n        case \"ChainExpression\":\n            this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n            break;\n        case \"MemberExpression\":\n            if (!isBinding) break;\n        default:\n            this.raise(node.start, \"Assigning to rvalue\");\n    }\n    else if (refDestructuringErrors) this.checkPatternErrors(refDestructuringErrors, true);\n    return node;\n};\n// Convert list of expression atoms to binding list.\n$d184995ea4e545a3$var$pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for(var i = 0; i < end; i++){\n        var elt = exprList[i];\n        if (elt) this.toAssignable(elt, isBinding);\n    }\n    if (end) {\n        var last = exprList[end - 1];\n        if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") this.unexpected(last.argument.start);\n    }\n    return exprList;\n};\n// Parses spread element.\n$d184995ea4e545a3$var$pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\");\n};\n$d184995ea4e545a3$var$pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) this.unexpected();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n};\n// Parses lvalue (assignable) atom.\n$d184995ea4e545a3$var$pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) switch(this.type){\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL:\n            var node = this.startNode();\n            this.next();\n            node.elements = this.parseBindingList($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketR, true, true);\n            return this.finishNode(node, \"ArrayPattern\");\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL:\n            return this.parseObj(true);\n    }\n    return this.parseIdent();\n};\n$d184995ea4e545a3$var$pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n    var elts = [], first = true;\n    while(!this.eat(close)){\n        if (first) first = false;\n        else this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n        if (allowEmpty && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) elts.push(null);\n        else if (allowTrailingComma && this.afterTrailingComma(close)) break;\n        else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.ellipsis) {\n            var rest = this.parseRestBinding();\n            this.parseBindingListItem(rest);\n            elts.push(rest);\n            if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n            this.expect(close);\n            break;\n        } else elts.push(this.parseAssignableListItem(allowModifiers));\n    }\n    return elts;\n};\n$d184995ea4e545a3$var$pp$7.parseAssignableListItem = function(allowModifiers) {\n    var elem = this.parseMaybeDefault(this.start, this.startLoc);\n    this.parseBindingListItem(elem);\n    return elem;\n};\n$d184995ea4e545a3$var$pp$7.parseBindingListItem = function(param) {\n    return param;\n};\n// Parses assignment pattern around given atom if possible.\n$d184995ea4e545a3$var$pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.eq)) return left;\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\");\n};\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n$d184995ea4e545a3$var$pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if (bindingType === void 0) bindingType = $d184995ea4e545a3$var$BIND_NONE;\n    var isBind = bindingType !== $d184995ea4e545a3$var$BIND_NONE;\n    switch(expr.type){\n        case \"Identifier\":\n            if (this.strict && this.reservedWordsStrictBind.test(expr.name)) this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n            if (isBind) {\n                if (bindingType === $d184995ea4e545a3$var$BIND_LEXICAL && expr.name === \"let\") this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\");\n                if (checkClashes) {\n                    if ($d184995ea4e545a3$var$hasOwn(checkClashes, expr.name)) this.raiseRecoverable(expr.start, \"Argument name clash\");\n                    checkClashes[expr.name] = true;\n                }\n                if (bindingType !== $d184995ea4e545a3$var$BIND_OUTSIDE) this.declareName(expr.name, bindingType, expr.start);\n            }\n            break;\n        case \"ChainExpression\":\n            this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n            break;\n        case \"MemberExpression\":\n            if (isBind) this.raiseRecoverable(expr.start, \"Binding member expression\");\n            break;\n        case \"ParenthesizedExpression\":\n            if (isBind) this.raiseRecoverable(expr.start, \"Binding parenthesized expression\");\n            return this.checkLValSimple(expr.expression, bindingType, checkClashes);\n        default:\n            this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n};\n$d184995ea4e545a3$var$pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if (bindingType === void 0) bindingType = $d184995ea4e545a3$var$BIND_NONE;\n    switch(expr.type){\n        case \"ObjectPattern\":\n            for(var i = 0, list = expr.properties; i < list.length; i += 1){\n                var prop = list[i];\n                this.checkLValInnerPattern(prop, bindingType, checkClashes);\n            }\n            break;\n        case \"ArrayPattern\":\n            for(var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1){\n                var elem = list$1[i$1];\n                if (elem) this.checkLValInnerPattern(elem, bindingType, checkClashes);\n            }\n            break;\n        default:\n            this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n};\n$d184995ea4e545a3$var$pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if (bindingType === void 0) bindingType = $d184995ea4e545a3$var$BIND_NONE;\n    switch(expr.type){\n        case \"Property\":\n            // AssignmentProperty has type === \"Property\"\n            this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n            break;\n        case \"AssignmentPattern\":\n            this.checkLValPattern(expr.left, bindingType, checkClashes);\n            break;\n        case \"RestElement\":\n            this.checkLValPattern(expr.argument, bindingType, checkClashes);\n            break;\n        default:\n            this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n};\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\nvar $d184995ea4e545a3$export$68e7b4c4d99215d9 = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n};\nvar $d184995ea4e545a3$export$2b5f701edfbd6f00 = {\n    b_stat: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"{\", false),\n    b_expr: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"{\", true),\n    b_tmpl: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"${\", false),\n    p_stat: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"(\", false),\n    p_expr: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"(\", true),\n    q_tmpl: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"`\", true, true, function(p) {\n        return p.tryReadTemplateToken();\n    }),\n    f_stat: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"function\", false),\n    f_expr: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"function\", true),\n    f_expr_gen: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"function\", true, false, null, true),\n    f_gen: new $d184995ea4e545a3$export$68e7b4c4d99215d9(\"function\", false, false, null, true)\n};\nvar $d184995ea4e545a3$var$pp$6 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n$d184995ea4e545a3$var$pp$6.initialContext = function() {\n    return [\n        $d184995ea4e545a3$export$2b5f701edfbd6f00.b_stat\n    ];\n};\n$d184995ea4e545a3$var$pp$6.curContext = function() {\n    return this.context[this.context.length - 1];\n};\n$d184995ea4e545a3$var$pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === $d184995ea4e545a3$export$2b5f701edfbd6f00.f_expr || parent === $d184995ea4e545a3$export$2b5f701edfbd6f00.f_stat) return true;\n    if (prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.colon && (parent === $d184995ea4e545a3$export$2b5f701edfbd6f00.b_stat || parent === $d184995ea4e545a3$export$2b5f701edfbd6f00.b_expr)) return !parent.isExpr;\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._return || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name && this.exprAllowed) return $d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.lastTokEnd, this.start));\n    if (prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._else || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.semi || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eof || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.arrow) return true;\n    if (prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL) return parent === $d184995ea4e545a3$export$2b5f701edfbd6f00.b_stat;\n    if (prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._var || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._const || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) return false;\n    return !this.exprAllowed;\n};\n$d184995ea4e545a3$var$pp$6.inGeneratorContext = function() {\n    for(var i = this.context.length - 1; i >= 1; i--){\n        var context = this.context[i];\n        if (context.token === \"function\") return context.generator;\n    }\n    return false;\n};\n$d184995ea4e545a3$var$pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.dot) this.exprAllowed = false;\n    else if (update = type.updateContext) update.call(this, prevType);\n    else this.exprAllowed = type.beforeExpr;\n};\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n$d184995ea4e545a3$var$pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) this.context[this.context.length - 1] = tokenCtx;\n};\n// Token-specific context update code\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR.updateContext = $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n        this.exprAllowed = true;\n        return;\n    }\n    var out = this.context.pop();\n    if (out === $d184995ea4e545a3$export$2b5f701edfbd6f00.b_stat && this.curContext().token === \"function\") out = this.context.pop();\n    this.exprAllowed = !out.isExpr;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? $d184995ea4e545a3$export$2b5f701edfbd6f00.b_stat : $d184995ea4e545a3$export$2b5f701edfbd6f00.b_expr);\n    this.exprAllowed = true;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.dollarBraceL.updateContext = function() {\n    this.context.push($d184995ea4e545a3$export$2b5f701edfbd6f00.b_tmpl);\n    this.exprAllowed = true;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._if || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._for || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._with || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._while;\n    this.context.push(statementParens ? $d184995ea4e545a3$export$2b5f701edfbd6f00.p_stat : $d184995ea4e545a3$export$2b5f701edfbd6f00.p_expr);\n    this.exprAllowed = true;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.incDec.updateContext = function() {\n// tokExprAllowed stays unchanged\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8._function.updateContext = $d184995ea4e545a3$export$b54c7ea7aabba5c8._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== $d184995ea4e545a3$export$b54c7ea7aabba5c8._else && !(prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.semi && this.curContext() !== $d184995ea4e545a3$export$2b5f701edfbd6f00.p_stat) && !(prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._return && $d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.colon || prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL) && this.curContext() === $d184995ea4e545a3$export$2b5f701edfbd6f00.b_stat)) this.context.push($d184995ea4e545a3$export$2b5f701edfbd6f00.f_expr);\n    else this.context.push($d184995ea4e545a3$export$2b5f701edfbd6f00.f_stat);\n    this.exprAllowed = false;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote.updateContext = function() {\n    if (this.curContext() === $d184995ea4e545a3$export$2b5f701edfbd6f00.q_tmpl) this.context.pop();\n    else this.context.push($d184995ea4e545a3$export$2b5f701edfbd6f00.q_tmpl);\n    this.exprAllowed = false;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.star.updateContext = function(prevType) {\n    if (prevType === $d184995ea4e545a3$export$b54c7ea7aabba5c8._function) {\n        var index = this.context.length - 1;\n        if (this.context[index] === $d184995ea4e545a3$export$2b5f701edfbd6f00.f_expr) this.context[index] = $d184995ea4e545a3$export$2b5f701edfbd6f00.f_expr_gen;\n        else this.context[index] = $d184995ea4e545a3$export$2b5f701edfbd6f00.f_gen;\n    }\n    this.exprAllowed = true;\n};\n$d184995ea4e545a3$export$b54c7ea7aabba5c8.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.dot) {\n        if (this.value === \"of\" && !this.exprAllowed || this.value === \"yield\" && this.inGeneratorContext()) allowed = true;\n    }\n    this.exprAllowed = allowed;\n};\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\nvar $d184995ea4e545a3$var$pp$5 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n$d184995ea4e545a3$var$pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\") return;\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) return;\n    var key = prop.key;\n    var name;\n    switch(key.type){\n        case \"Identifier\":\n            name = key.name;\n            break;\n        case \"Literal\":\n            name = String(key.value);\n            break;\n        default:\n            return;\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n        if (name === \"__proto__\" && kind === \"init\") {\n            if (propHash.proto) {\n                if (refDestructuringErrors) {\n                    if (refDestructuringErrors.doubleProto < 0) refDestructuringErrors.doubleProto = key.start;\n                } else this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n            }\n            propHash.proto = true;\n        }\n        return;\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n        var redefinition;\n        if (kind === \"init\") redefinition = this.strict && other.init || other.get || other.set;\n        else redefinition = other.init || other[kind];\n        if (redefinition) this.raiseRecoverable(key.start, \"Redefinition of property\");\n    } else other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n    };\n    other[kind] = true;\n};\n// ### Expression parsing\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n$d184995ea4e545a3$var$pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.expressions = [\n            expr\n        ];\n        while(this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma))node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors));\n        return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n};\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n$d184995ea4e545a3$var$pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n        if (this.inGenerator) return this.parseYield(forInit);\n        else this.exprAllowed = false;\n    }\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n        oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n        oldTrailingComma = refDestructuringErrors.trailingComma;\n        oldDoubleProto = refDestructuringErrors.doubleProto;\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n        refDestructuringErrors = new $d184995ea4e545a3$var$DestructuringErrors;\n        ownDestructuringErrors = true;\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) {\n        this.potentialArrowAt = this.start;\n        this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);\n    if (this.type.isAssign) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.operator = this.value;\n        if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eq) left = this.toAssignable(left, false, refDestructuringErrors);\n        if (!ownDestructuringErrors) refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n        if (refDestructuringErrors.shorthandAssign >= left.start) refDestructuringErrors.shorthandAssign = -1;\n         // reset because shorthand default was used correctly\n        if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eq) this.checkLValPattern(left);\n        else this.checkLValSimple(left);\n        node.left = left;\n        this.next();\n        node.right = this.parseMaybeAssign(forInit);\n        if (oldDoubleProto > -1) refDestructuringErrors.doubleProto = oldDoubleProto;\n        return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownDestructuringErrors) this.checkExpressionErrors(refDestructuringErrors, true);\n    if (oldParenAssign > -1) refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n    if (oldTrailingComma > -1) refDestructuringErrors.trailingComma = oldTrailingComma;\n    return left;\n};\n// Parse a ternary conditional (`?:`) operator.\n$d184995ea4e545a3$var$pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.question)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.test = expr;\n        node.consequent = this.parseMaybeAssign();\n        this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.colon);\n        node.alternate = this.parseMaybeAssign(forInit);\n        return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n};\n// Start the precedence parser.\n$d184995ea4e545a3$var$pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit);\n};\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n$d184995ea4e545a3$var$pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8._in)) {\n        if (prec > minPrec) {\n            var logical = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalOR || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalAND;\n            var coalesce = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.coalesce;\n            if (coalesce) // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n            // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n            prec = $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalAND.binop;\n            var op = this.value;\n            this.next();\n            var startPos = this.start, startLoc = this.startLoc;\n            var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n            var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n            if (logical && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.coalesce || coalesce && (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalOR || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalAND)) this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n            return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit);\n        }\n    }\n    return left;\n};\n$d184995ea4e545a3$var$pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") this.raise(right.start, \"Private identifier can only be left side of binary expression\");\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n};\n// Parse unary operators, both prefix and postfix.\n$d184995ea4e545a3$var$pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n        expr = this.parseAwait(forInit);\n        sawUnary = true;\n    } else if (this.type.prefix) {\n        var node = this.startNode(), update = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.incDec;\n        node.operator = this.value;\n        node.prefix = true;\n        this.next();\n        node.argument = this.parseMaybeUnary(null, true, update, forInit);\n        this.checkExpressionErrors(refDestructuringErrors, true);\n        if (update) this.checkLValSimple(node.argument);\n        else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");\n        else if (node.operator === \"delete\" && $d184995ea4e545a3$var$isPrivateFieldAccess(node.argument)) this.raiseRecoverable(node.start, \"Private fields can not be deleted\");\n        else sawUnary = true;\n        expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.privateId) {\n        if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) this.unexpected();\n        expr = this.parsePrivateIdent();\n        // only could be private fields in 'in', such as #x in obj\n        if (this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8._in) this.unexpected();\n    } else {\n        expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n        if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n        while(this.type.postfix && !this.canInsertSemicolon()){\n            var node$1 = this.startNodeAt(startPos, startLoc);\n            node$1.operator = this.value;\n            node$1.prefix = false;\n            node$1.argument = expr;\n            this.checkLValSimple(expr);\n            this.next();\n            expr = this.finishNode(node$1, \"UpdateExpression\");\n        }\n    }\n    if (!incDec && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.starstar)) {\n        if (sawUnary) this.unexpected(this.lastTokStart);\n        else return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false);\n    } else return expr;\n};\nfunction $d184995ea4e545a3$var$isPrivateFieldAccess(node) {\n    return node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" || node.type === \"ChainExpression\" && $d184995ea4e545a3$var$isPrivateFieldAccess(node.expression);\n}\n// Parse call, dot, and `[]`-subscript expressions.\n$d184995ea4e545a3$var$pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\") return expr;\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n        if (refDestructuringErrors.parenthesizedAssign >= result.start) refDestructuringErrors.parenthesizedAssign = -1;\n        if (refDestructuringErrors.parenthesizedBind >= result.start) refDestructuringErrors.parenthesizedBind = -1;\n        if (refDestructuringErrors.trailingComma >= result.start) refDestructuringErrors.trailingComma = -1;\n    }\n    return result;\n};\n$d184995ea4e545a3$var$pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && this.potentialArrowAt === base.start;\n    var optionalChained = false;\n    while(true){\n        var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n        if (element.optional) optionalChained = true;\n        if (element === base || element.type === \"ArrowFunctionExpression\") {\n            if (optionalChained) {\n                var chainNode = this.startNodeAt(startPos, startLoc);\n                chainNode.expression = element;\n                element = this.finishNode(chainNode, \"ChainExpression\");\n            }\n            return element;\n        }\n        base = element;\n    }\n};\n$d184995ea4e545a3$var$pp$5.shouldParseAsyncArrow = function() {\n    return !this.canInsertSemicolon() && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.arrow);\n};\n$d184995ea4e545a3$var$pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit);\n};\n$d184995ea4e545a3$var$pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.questionDot);\n    if (noCalls && optional) this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\");\n    var computed = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL);\n    if (computed || optional && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote || this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.dot)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.object = base;\n        if (computed) {\n            node.property = this.parseExpression();\n            this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketR);\n        } else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.privateId && base.type !== \"Super\") node.property = this.parsePrivateIdent();\n        else node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n        node.computed = !!computed;\n        if (optionalSupported) node.optional = optional;\n        base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL)) {\n        var refDestructuringErrors = new $d184995ea4e545a3$var$DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n        this.yieldPos = 0;\n        this.awaitPos = 0;\n        this.awaitIdentPos = 0;\n        var exprList = this.parseExprList($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n        if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n            this.checkPatternErrors(refDestructuringErrors, false);\n            this.checkYieldAwaitInDefaultParams();\n            if (this.awaitIdentPos > 0) this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\");\n            this.yieldPos = oldYieldPos;\n            this.awaitPos = oldAwaitPos;\n            this.awaitIdentPos = oldAwaitIdentPos;\n            return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit);\n        }\n        this.checkExpressionErrors(refDestructuringErrors, true);\n        this.yieldPos = oldYieldPos || this.yieldPos;\n        this.awaitPos = oldAwaitPos || this.awaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.callee = base;\n        node$1.arguments = exprList;\n        if (optionalSupported) node$1.optional = optional;\n        base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote) {\n        if (optional || optionalChained) this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n        var node$2 = this.startNodeAt(startPos, startLoc);\n        node$2.tag = base;\n        node$2.quasi = this.parseTemplate({\n            isTagged: true\n        });\n        base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base;\n};\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n$d184995ea4e545a3$var$pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.slash) this.readRegexp();\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch(this.type){\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._super:\n            if (!this.allowSuper) this.raise(this.start, \"'super' keyword outside a method\");\n            node = this.startNode();\n            this.next();\n            if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL && !this.allowDirectSuper) this.raise(node.start, \"super() call outside constructor of a subclass\");\n            // The `super` keyword can appear at below:\n            // SuperProperty:\n            //     super [ Expression ]\n            //     super . IdentifierName\n            // SuperCall:\n            //     super ( Arguments )\n            if (this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.dot && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL) this.unexpected();\n            return this.finishNode(node, \"Super\");\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._this:\n            node = this.startNode();\n            this.next();\n            return this.finishNode(node, \"ThisExpression\");\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.name:\n            var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n            var id = this.parseIdent(false);\n            if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8._function)) {\n                this.overrideContext($d184995ea4e545a3$export$2b5f701edfbd6f00.f_expr);\n                return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit);\n            }\n            if (canBeArrow && !this.canInsertSemicolon()) {\n                if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.arrow)) return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [\n                    id\n                ], false, forInit);\n                if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name && !containsEsc && (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n                    id = this.parseIdent(false);\n                    if (this.canInsertSemicolon() || !this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.arrow)) this.unexpected();\n                    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [\n                        id\n                    ], true, forInit);\n                }\n            }\n            return id;\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.regexp:\n            var value = this.value;\n            node = this.parseLiteral(value.value);\n            node.regex = {\n                pattern: value.pattern,\n                flags: value.flags\n            };\n            return node;\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.num:\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.string:\n            return this.parseLiteral(this.value);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._null:\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._true:\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._false:\n            node = this.startNode();\n            node.value = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._null ? null : this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8._true;\n            node.raw = this.type.keyword;\n            this.next();\n            return this.finishNode(node, \"Literal\");\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL:\n            var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n            if (refDestructuringErrors) {\n                if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) refDestructuringErrors.parenthesizedAssign = start;\n                if (refDestructuringErrors.parenthesizedBind < 0) refDestructuringErrors.parenthesizedBind = start;\n            }\n            return expr;\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL:\n            node = this.startNode();\n            this.next();\n            node.elements = this.parseExprList($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketR, true, true, refDestructuringErrors);\n            return this.finishNode(node, \"ArrayExpression\");\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL:\n            this.overrideContext($d184995ea4e545a3$export$2b5f701edfbd6f00.b_expr);\n            return this.parseObj(false, refDestructuringErrors);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._function:\n            node = this.startNode();\n            this.next();\n            return this.parseFunction(node, 0);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._class:\n            return this.parseClass(this.startNode(), false);\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._new:\n            return this.parseNew();\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote:\n            return this.parseTemplate();\n        case $d184995ea4e545a3$export$b54c7ea7aabba5c8._import:\n            if (this.options.ecmaVersion >= 11) return this.parseExprImport(forNew);\n            else return this.unexpected();\n        default:\n            return this.parseExprAtomDefault();\n    }\n};\n$d184995ea4e545a3$var$pp$5.parseExprAtomDefault = function() {\n    this.unexpected();\n};\n$d184995ea4e545a3$var$pp$5.parseExprImport = function(forNew) {\n    var node = this.startNode();\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) this.raiseRecoverable(this.start, \"Escape sequence in keyword import\");\n    var meta = this.parseIdent(true);\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL && !forNew) return this.parseDynamicImport(node);\n    else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.dot) {\n        node.meta = meta;\n        return this.parseImportMeta(node);\n    } else this.unexpected();\n};\n$d184995ea4e545a3$var$pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n    // Verify ending.\n    if (!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR)) {\n        var errorPos = this.start;\n        if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR)) this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n        else this.unexpected(errorPos);\n    }\n    return this.finishNode(node, \"ImportExpression\");\n};\n$d184995ea4e545a3$var$pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"meta\") this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\");\n    if (containsEsc) this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\");\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere) this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\");\n    return this.finishNode(node, \"MetaProperty\");\n};\n$d184995ea4e545a3$var$pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\");\n    this.next();\n    return this.finishNode(node, \"Literal\");\n};\n$d184995ea4e545a3$var$pp$5.parseParenExpression = function() {\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL);\n    var val = this.parseExpression();\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR);\n    return val;\n};\n$d184995ea4e545a3$var$pp$5.shouldParseArrow = function(exprList) {\n    return !this.canInsertSemicolon();\n};\n$d184995ea4e545a3$var$pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n        this.next();\n        var innerStartPos = this.start, innerStartLoc = this.startLoc;\n        var exprList = [], first = true, lastIsComma = false;\n        var refDestructuringErrors = new $d184995ea4e545a3$var$DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n        this.yieldPos = 0;\n        this.awaitPos = 0;\n        // Do not save awaitIdentPos to allow checking awaits nested in parameters\n        while(this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR){\n            first ? first = false : this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n            if (allowTrailingComma && this.afterTrailingComma($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR, true)) {\n                lastIsComma = true;\n                break;\n            } else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.ellipsis) {\n                spreadStart = this.start;\n                exprList.push(this.parseParenItem(this.parseRestBinding()));\n                if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n                break;\n            } else exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n        var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n        this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR);\n        if (canBeArrow && this.shouldParseArrow(exprList) && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.arrow)) {\n            this.checkPatternErrors(refDestructuringErrors, false);\n            this.checkYieldAwaitInDefaultParams();\n            this.yieldPos = oldYieldPos;\n            this.awaitPos = oldAwaitPos;\n            return this.parseParenArrowList(startPos, startLoc, exprList, forInit);\n        }\n        if (!exprList.length || lastIsComma) this.unexpected(this.lastTokStart);\n        if (spreadStart) this.unexpected(spreadStart);\n        this.checkExpressionErrors(refDestructuringErrors, true);\n        this.yieldPos = oldYieldPos || this.yieldPos;\n        this.awaitPos = oldAwaitPos || this.awaitPos;\n        if (exprList.length > 1) {\n            val = this.startNodeAt(innerStartPos, innerStartLoc);\n            val.expressions = exprList;\n            this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n        } else val = exprList[0];\n    } else val = this.parseParenExpression();\n    if (this.options.preserveParens) {\n        var par = this.startNodeAt(startPos, startLoc);\n        par.expression = val;\n        return this.finishNode(par, \"ParenthesizedExpression\");\n    } else return val;\n};\n$d184995ea4e545a3$var$pp$5.parseParenItem = function(item) {\n    return item;\n};\n$d184995ea4e545a3$var$pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit);\n};\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\nvar $d184995ea4e545a3$var$empty = [];\n$d184995ea4e545a3$var$pp$5.parseNew = function() {\n    if (this.containsEsc) this.raiseRecoverable(this.start, \"Escape sequence in keyword new\");\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.dot)) {\n        node.meta = meta;\n        var containsEsc = this.containsEsc;\n        node.property = this.parseIdent(true);\n        if (node.property.name !== \"target\") this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\");\n        if (containsEsc) this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\");\n        if (!this.allowNewDotTarget) this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\");\n        return this.finishNode(node, \"MetaProperty\");\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL)) node.arguments = this.parseExprList($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR, this.options.ecmaVersion >= 8, false);\n    else node.arguments = $d184995ea4e545a3$var$empty;\n    return this.finishNode(node, \"NewExpression\");\n};\n// Parse template expression.\n$d184995ea4e545a3$var$pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n    var elem = this.startNode();\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.invalidTemplate) {\n        if (!isTagged) this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n        elem.value = {\n            raw: this.value,\n            cooked: null\n        };\n    } else elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n    };\n    this.next();\n    elem.tail = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote;\n    return this.finishNode(elem, \"TemplateElement\");\n};\n$d184995ea4e545a3$var$pp$5.parseTemplate = function(ref) {\n    if (ref === void 0) ref = {};\n    var isTagged = ref.isTagged;\n    if (isTagged === void 0) isTagged = false;\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({\n        isTagged: isTagged\n    });\n    node.quasis = [\n        curElt\n    ];\n    while(!curElt.tail){\n        if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eof) this.raise(this.pos, \"Unterminated template literal\");\n        this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.dollarBraceL);\n        node.expressions.push(this.parseExpression());\n        this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR);\n        node.quasis.push(curElt = this.parseTemplateElement({\n            isTagged: isTagged\n        }));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n};\n$d184995ea4e545a3$var$pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" && (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.num || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.string || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.star) && !$d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.lastTokEnd, this.start));\n};\n// Parse an object literal or binding pattern.\n$d184995ea4e545a3$var$pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while(!this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR)){\n        if (!first) {\n            this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n            if (this.options.ecmaVersion >= 5 && this.afterTrailingComma($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR)) break;\n        } else first = false;\n        var prop = this.parseProperty(isPattern, refDestructuringErrors);\n        if (!isPattern) this.checkPropClash(prop, propHash, refDestructuringErrors);\n        node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\n$d184995ea4e545a3$var$pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.ellipsis)) {\n        if (isPattern) {\n            prop.argument = this.parseIdent(false);\n            if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n            return this.finishNode(prop, \"RestElement\");\n        }\n        // Parse argument.\n        prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n        // To disallow trailing comma via `this.toAssignable()`.\n        if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) refDestructuringErrors.trailingComma = this.start;\n        // Finish\n        return this.finishNode(prop, \"SpreadElement\");\n    }\n    if (this.options.ecmaVersion >= 6) {\n        prop.method = false;\n        prop.shorthand = false;\n        if (isPattern || refDestructuringErrors) {\n            startPos = this.start;\n            startLoc = this.startLoc;\n        }\n        if (!isPattern) isGenerator = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.star);\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.star);\n        this.parsePropertyName(prop);\n    } else isAsync = false;\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\");\n};\n$d184995ea4e545a3$var$pp$5.parseGetterSetter = function(prop) {\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\") this.raiseRecoverable(start, \"getter should have no params\");\n        else this.raiseRecoverable(start, \"setter should have exactly one param\");\n    } else if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n};\n$d184995ea4e545a3$var$pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.colon) this.unexpected();\n    if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.colon)) {\n        prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n        prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL) {\n        if (isPattern) this.unexpected();\n        prop.kind = \"init\";\n        prop.method = true;\n        prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.eq) {\n        if (isGenerator || isAsync) this.unexpected();\n        this.parseGetterSetter(prop);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n        if (isGenerator || isAsync) this.unexpected();\n        this.checkUnreserved(prop.key);\n        if (prop.key.name === \"await\" && !this.awaitIdentPos) this.awaitIdentPos = startPos;\n        prop.kind = \"init\";\n        if (isPattern) prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n        else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eq && refDestructuringErrors) {\n            if (refDestructuringErrors.shorthandAssign < 0) refDestructuringErrors.shorthandAssign = this.start;\n            prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n        } else prop.value = this.copyNode(prop.key);\n        prop.shorthand = true;\n    } else this.unexpected();\n};\n$d184995ea4e545a3$var$pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n        if (this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL)) {\n            prop.computed = true;\n            prop.key = this.parseMaybeAssign();\n            this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketR);\n            return prop.key;\n        } else prop.computed = false;\n    }\n    return prop.key = this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.num || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n};\n// Initialize empty function node.\n$d184995ea4e545a3$var$pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) node.generator = node.expression = false;\n    if (this.options.ecmaVersion >= 8) node.async = false;\n};\n// Parse object or class method.\n$d184995ea4e545a3$var$pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6) node.generator = isGenerator;\n    if (this.options.ecmaVersion >= 8) node.async = !!isAsync;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope($d184995ea4e545a3$var$functionFlags(isAsync, node.generator) | $d184995ea4e545a3$var$SCOPE_SUPER | (allowDirectSuper ? $d184995ea4e545a3$var$SCOPE_DIRECT_SUPER : 0));\n    this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL);\n    node.params = this.parseBindingList($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\");\n};\n// Parse arrow function expression with given parameters.\n$d184995ea4e545a3$var$pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.enterScope($d184995ea4e545a3$var$functionFlags(isAsync, false) | $d184995ea4e545a3$var$SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) node.async = !!isAsync;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n// Parse function body and check parameters.\n$d184995ea4e545a3$var$pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL;\n    var oldStrict = this.strict, useStrict = false;\n    if (isExpression) {\n        node.body = this.parseMaybeAssign(forInit);\n        node.expression = true;\n        this.checkParams(node, false);\n    } else {\n        var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n        if (!oldStrict || nonSimple) {\n            useStrict = this.strictDirective(this.end);\n            // If this is a strict mode function, verify that argument names\n            // are not repeated, and it does not try to bind the words `eval`\n            // or `arguments`.\n            if (useStrict && nonSimple) this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n        }\n        // Start a new scope with regard to labels and the `inFunction`\n        // flag (restore them to their old value afterwards).\n        var oldLabels = this.labels;\n        this.labels = [];\n        if (useStrict) this.strict = true;\n        // Add the params to varDeclaredNames to ensure that an error is thrown\n        // if a let/const declaration in the function clashes with one of the params.\n        this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n        // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n        if (this.strict && node.id) this.checkLValSimple(node.id, $d184995ea4e545a3$var$BIND_OUTSIDE);\n        node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n        node.expression = false;\n        this.adaptDirectivePrologue(node.body.body);\n        this.labels = oldLabels;\n    }\n    this.exitScope();\n};\n$d184995ea4e545a3$var$pp$5.isSimpleParamList = function(params) {\n    for(var i = 0, list = params; i < list.length; i += 1){\n        var param = list[i];\n        if (param.type !== \"Identifier\") return false;\n    }\n    return true;\n};\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n$d184995ea4e545a3$var$pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for(var i = 0, list = node.params; i < list.length; i += 1){\n        var param = list[i];\n        this.checkLValInnerPattern(param, $d184995ea4e545a3$var$BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n};\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n$d184995ea4e545a3$var$pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while(!this.eat(close)){\n        if (!first) {\n            this.expect($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n            if (allowTrailingComma && this.afterTrailingComma(close)) break;\n        } else first = false;\n        var elt = void 0;\n        if (allowEmpty && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma) elt = null;\n        else if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.ellipsis) {\n            elt = this.parseSpread(refDestructuringErrors);\n            if (refDestructuringErrors && this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.comma && refDestructuringErrors.trailingComma < 0) refDestructuringErrors.trailingComma = this.start;\n        } else elt = this.parseMaybeAssign(false, refDestructuringErrors);\n        elts.push(elt);\n    }\n    return elts;\n};\n$d184995ea4e545a3$var$pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n    if (this.inGenerator && name === \"yield\") this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\");\n    if (this.inAsync && name === \"await\") this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\");\n    if (this.currentThisScope().inClassFieldInit && name === \"arguments\") this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\");\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\")) this.raise(start, \"Cannot use \" + name + \" in class static initialization block\");\n    if (this.keywords.test(name)) this.raise(start, \"Unexpected keyword '\" + name + \"'\");\n    if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf(\"\\\\\") !== -1) return;\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n        if (!this.inAsync && name === \"await\") this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\");\n        this.raiseRecoverable(start, \"The keyword '\" + name + \"' is reserved\");\n    }\n};\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n$d184995ea4e545a3$var$pp$5.parseIdent = function(liberal) {\n    var node = this.parseIdentNode();\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n        this.checkUnreserved(node);\n        if (node.name === \"await\" && !this.awaitIdentPos) this.awaitIdentPos = node.start;\n    }\n    return node;\n};\n$d184995ea4e545a3$var$pp$5.parseIdentNode = function() {\n    var node = this.startNode();\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.name) node.name = this.value;\n    else if (this.type.keyword) {\n        node.name = this.type.keyword;\n        // To fix https://github.com/acornjs/acorn/issues/575\n        // `class` and `function` keywords push new context into this.context.\n        // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n        // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n        if ((node.name === \"class\" || node.name === \"function\") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) this.context.pop();\n    } else this.unexpected();\n    return node;\n};\n$d184995ea4e545a3$var$pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.privateId) node.name = this.value;\n    else this.unexpected();\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n    // For validating existence\n    if (this.options.checkPrivateFields) {\n        if (this.privateNameStack.length === 0) this.raise(node.start, \"Private field '#\" + node.name + \"' must be declared in an enclosing class\");\n        else this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n    return node;\n};\n// Parses yield expression inside generator.\n$d184995ea4e545a3$var$pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) this.yieldPos = this.start;\n    var node = this.startNode();\n    this.next();\n    if (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.semi || this.canInsertSemicolon() || this.type !== $d184995ea4e545a3$export$b54c7ea7aabba5c8.star && !this.type.startsExpr) {\n        node.delegate = false;\n        node.argument = null;\n    } else {\n        node.delegate = this.eat($d184995ea4e545a3$export$b54c7ea7aabba5c8.star);\n        node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\");\n};\n$d184995ea4e545a3$var$pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) this.awaitPos = this.start;\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\");\n};\nvar $d184995ea4e545a3$var$pp$4 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n$d184995ea4e545a3$var$pp$4.raise = function(pos, message) {\n    var loc = $d184995ea4e545a3$export$7af82191547c5ff7(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos;\n    err.loc = loc;\n    err.raisedAt = this.pos;\n    throw err;\n};\n$d184995ea4e545a3$var$pp$4.raiseRecoverable = $d184995ea4e545a3$var$pp$4.raise;\n$d184995ea4e545a3$var$pp$4.curPosition = function() {\n    if (this.options.locations) return new $d184995ea4e545a3$export$13807d9ee5a34a42(this.curLine, this.pos - this.lineStart);\n};\nvar $d184995ea4e545a3$var$pp$3 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\nvar $d184995ea4e545a3$var$Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n    // A switch to disallow the identifier reference 'arguments'\n    this.inClassFieldInit = false;\n};\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n$d184995ea4e545a3$var$pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new $d184995ea4e545a3$var$Scope(flags));\n};\n$d184995ea4e545a3$var$pp$3.exitScope = function() {\n    this.scopeStack.pop();\n};\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\n$d184995ea4e545a3$var$pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return scope.flags & $d184995ea4e545a3$var$SCOPE_FUNCTION || !this.inModule && scope.flags & $d184995ea4e545a3$var$SCOPE_TOP;\n};\n$d184995ea4e545a3$var$pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === $d184995ea4e545a3$var$BIND_LEXICAL) {\n        var scope = this.currentScope();\n        redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n        scope.lexical.push(name);\n        if (this.inModule && scope.flags & $d184995ea4e545a3$var$SCOPE_TOP) delete this.undefinedExports[name];\n    } else if (bindingType === $d184995ea4e545a3$var$BIND_SIMPLE_CATCH) {\n        var scope$1 = this.currentScope();\n        scope$1.lexical.push(name);\n    } else if (bindingType === $d184995ea4e545a3$var$BIND_FUNCTION) {\n        var scope$2 = this.currentScope();\n        if (this.treatFunctionsAsVar) redeclared = scope$2.lexical.indexOf(name) > -1;\n        else redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;\n        scope$2.functions.push(name);\n    } else for(var i = this.scopeStack.length - 1; i >= 0; --i){\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & $d184995ea4e545a3$var$SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n            redeclared = true;\n            break;\n        }\n        scope$3.var.push(name);\n        if (this.inModule && scope$3.flags & $d184995ea4e545a3$var$SCOPE_TOP) delete this.undefinedExports[name];\n        if (scope$3.flags & $d184995ea4e545a3$var$SCOPE_VAR) break;\n    }\n    if (redeclared) this.raiseRecoverable(pos, \"Identifier '\" + name + \"' has already been declared\");\n};\n$d184995ea4e545a3$var$pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) this.undefinedExports[id.name] = id;\n};\n$d184995ea4e545a3$var$pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1];\n};\n$d184995ea4e545a3$var$pp$3.currentVarScope = function() {\n    for(var i = this.scopeStack.length - 1;; i--){\n        var scope = this.scopeStack[i];\n        if (scope.flags & $d184995ea4e545a3$var$SCOPE_VAR) return scope;\n    }\n};\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n$d184995ea4e545a3$var$pp$3.currentThisScope = function() {\n    for(var i = this.scopeStack.length - 1;; i--){\n        var scope = this.scopeStack[i];\n        if (scope.flags & $d184995ea4e545a3$var$SCOPE_VAR && !(scope.flags & $d184995ea4e545a3$var$SCOPE_ARROW)) return scope;\n    }\n};\nvar $d184995ea4e545a3$export$85c928794f8d04d4 = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations) this.loc = new $d184995ea4e545a3$export$7387db7caf96fcdb(parser, loc);\n    if (parser.options.directSourceFile) this.sourceFile = parser.options.directSourceFile;\n    if (parser.options.ranges) this.range = [\n        pos,\n        0\n    ];\n};\n// Start an AST node, attaching a start offset.\nvar $d184995ea4e545a3$var$pp$2 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n$d184995ea4e545a3$var$pp$2.startNode = function() {\n    return new $d184995ea4e545a3$export$85c928794f8d04d4(this, this.start, this.startLoc);\n};\n$d184995ea4e545a3$var$pp$2.startNodeAt = function(pos, loc) {\n    return new $d184995ea4e545a3$export$85c928794f8d04d4(this, pos, loc);\n};\n// Finish an AST node, adding `type` and `end` properties.\nfunction $d184995ea4e545a3$var$finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations) node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    return node;\n}\n$d184995ea4e545a3$var$pp$2.finishNode = function(node, type) {\n    return $d184995ea4e545a3$var$finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n};\n// Finish node at given position\n$d184995ea4e545a3$var$pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return $d184995ea4e545a3$var$finishNodeAt.call(this, node, type, pos, loc);\n};\n$d184995ea4e545a3$var$pp$2.copyNode = function(node) {\n    var newNode = new $d184995ea4e545a3$export$85c928794f8d04d4(this, node.start, this.startLoc);\n    for(var prop in node)newNode[prop] = node[prop];\n    return newNode;\n};\n// This file contains Unicode properties extracted from the ECMAScript specification.\n// The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n// #table-binary-unicode-properties\nvar $d184995ea4e545a3$var$ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar $d184995ea4e545a3$var$ecma10BinaryProperties = $d184995ea4e545a3$var$ecma9BinaryProperties + \" Extended_Pictographic\";\nvar $d184995ea4e545a3$var$ecma11BinaryProperties = $d184995ea4e545a3$var$ecma10BinaryProperties;\nvar $d184995ea4e545a3$var$ecma12BinaryProperties = $d184995ea4e545a3$var$ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar $d184995ea4e545a3$var$ecma13BinaryProperties = $d184995ea4e545a3$var$ecma12BinaryProperties;\nvar $d184995ea4e545a3$var$ecma14BinaryProperties = $d184995ea4e545a3$var$ecma13BinaryProperties;\nvar $d184995ea4e545a3$var$unicodeBinaryProperties = {\n    9: $d184995ea4e545a3$var$ecma9BinaryProperties,\n    10: $d184995ea4e545a3$var$ecma10BinaryProperties,\n    11: $d184995ea4e545a3$var$ecma11BinaryProperties,\n    12: $d184995ea4e545a3$var$ecma12BinaryProperties,\n    13: $d184995ea4e545a3$var$ecma13BinaryProperties,\n    14: $d184995ea4e545a3$var$ecma14BinaryProperties\n};\n// #table-binary-unicode-properties-of-strings\nvar $d184995ea4e545a3$var$ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\nvar $d184995ea4e545a3$var$unicodeBinaryPropertiesOfStrings = {\n    9: \"\",\n    10: \"\",\n    11: \"\",\n    12: \"\",\n    13: \"\",\n    14: $d184995ea4e545a3$var$ecma14BinaryPropertiesOfStrings\n};\n// #table-unicode-general-category-values\nvar $d184995ea4e545a3$var$unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n// #table-unicode-script-values\nvar $d184995ea4e545a3$var$ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar $d184995ea4e545a3$var$ecma10ScriptValues = $d184995ea4e545a3$var$ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar $d184995ea4e545a3$var$ecma11ScriptValues = $d184995ea4e545a3$var$ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar $d184995ea4e545a3$var$ecma12ScriptValues = $d184995ea4e545a3$var$ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar $d184995ea4e545a3$var$ecma13ScriptValues = $d184995ea4e545a3$var$ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar $d184995ea4e545a3$var$ecma14ScriptValues = $d184995ea4e545a3$var$ecma13ScriptValues + \" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz\";\nvar $d184995ea4e545a3$var$unicodeScriptValues = {\n    9: $d184995ea4e545a3$var$ecma9ScriptValues,\n    10: $d184995ea4e545a3$var$ecma10ScriptValues,\n    11: $d184995ea4e545a3$var$ecma11ScriptValues,\n    12: $d184995ea4e545a3$var$ecma12ScriptValues,\n    13: $d184995ea4e545a3$var$ecma13ScriptValues,\n    14: $d184995ea4e545a3$var$ecma14ScriptValues\n};\nvar $d184995ea4e545a3$var$data = {};\nfunction $d184995ea4e545a3$var$buildUnicodeData(ecmaVersion) {\n    var d = $d184995ea4e545a3$var$data[ecmaVersion] = {\n        binary: $d184995ea4e545a3$var$wordsRegexp($d184995ea4e545a3$var$unicodeBinaryProperties[ecmaVersion] + \" \" + $d184995ea4e545a3$var$unicodeGeneralCategoryValues),\n        binaryOfStrings: $d184995ea4e545a3$var$wordsRegexp($d184995ea4e545a3$var$unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n        nonBinary: {\n            General_Category: $d184995ea4e545a3$var$wordsRegexp($d184995ea4e545a3$var$unicodeGeneralCategoryValues),\n            Script: $d184995ea4e545a3$var$wordsRegexp($d184995ea4e545a3$var$unicodeScriptValues[ecmaVersion])\n        }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\nfor(var $d184995ea4e545a3$var$i = 0, $d184995ea4e545a3$var$list = [\n    9,\n    10,\n    11,\n    12,\n    13,\n    14\n]; $d184995ea4e545a3$var$i < $d184995ea4e545a3$var$list.length; $d184995ea4e545a3$var$i += 1){\n    var $d184995ea4e545a3$var$ecmaVersion = $d184995ea4e545a3$var$list[$d184995ea4e545a3$var$i];\n    $d184995ea4e545a3$var$buildUnicodeData($d184995ea4e545a3$var$ecmaVersion);\n}\nvar $d184995ea4e545a3$var$pp$1 = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\nvar $d184995ea4e545a3$var$RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n    this.unicodeProperties = $d184995ea4e545a3$var$data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchV = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n    var unicodeSets = flags.indexOf(\"v\") !== -1;\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n        this.switchU = true;\n        this.switchV = true;\n        this.switchN = true;\n    } else {\n        this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n        this.switchV = false;\n        this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n    }\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.raise = function raise(message) {\n    this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + message);\n};\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n$d184995ea4e545a3$var$RegExpValidationState.prototype.at = function at(i, forceU) {\n    if (forceU === void 0) forceU = false;\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) return -1;\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) return c;\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c;\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.nextIndex = function nextIndex(i, forceU) {\n    if (forceU === void 0) forceU = false;\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) return l;\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l || (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) return i + 1;\n    return i + 2;\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.current = function current(forceU) {\n    if (forceU === void 0) forceU = false;\n    return this.at(this.pos, forceU);\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.lookahead = function lookahead(forceU) {\n    if (forceU === void 0) forceU = false;\n    return this.at(this.nextIndex(this.pos, forceU), forceU);\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.advance = function advance(forceU) {\n    if (forceU === void 0) forceU = false;\n    this.pos = this.nextIndex(this.pos, forceU);\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.eat = function eat(ch, forceU) {\n    if (forceU === void 0) forceU = false;\n    if (this.current(forceU) === ch) {\n        this.advance(forceU);\n        return true;\n    }\n    return false;\n};\n$d184995ea4e545a3$var$RegExpValidationState.prototype.eatChars = function eatChars(chs, forceU) {\n    if (forceU === void 0) forceU = false;\n    var pos = this.pos;\n    for(var i = 0, list = chs; i < list.length; i += 1){\n        var ch = list[i];\n        var current = this.at(pos, forceU);\n        if (current === -1 || current !== ch) return false;\n        pos = this.nextIndex(pos, forceU);\n    }\n    this.pos = pos;\n    return true;\n};\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */ $d184995ea4e545a3$var$pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n    var u = false;\n    var v = false;\n    for(var i = 0; i < flags.length; i++){\n        var flag = flags.charAt(i);\n        if (validFlags.indexOf(flag) === -1) this.raise(state.start, \"Invalid regular expression flag\");\n        if (flags.indexOf(flag, i + 1) > -1) this.raise(state.start, \"Duplicate regular expression flag\");\n        if (flag === \"u\") u = true;\n        if (flag === \"v\") v = true;\n    }\n    if (this.options.ecmaVersion >= 15 && u && v) this.raise(state.start, \"Invalid regular expression flag\");\n};\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */ $d184995ea4e545a3$var$pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n        state.switchN = true;\n        this.regexp_pattern(state);\n    }\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n$d184995ea4e545a3$var$pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n    this.regexp_disjunction(state);\n    if (state.pos !== state.source.length) {\n        // Make the same messages as V8.\n        if (state.eat(0x29 /* ) */ )) state.raise(\"Unmatched ')'\");\n        if (state.eat(0x5D /* ] */ ) || state.eat(0x7D /* } */ )) state.raise(\"Lone quantifier brackets\");\n    }\n    if (state.maxBackReference > state.numCapturingParens) state.raise(\"Invalid escape\");\n    for(var i = 0, list = state.backReferenceNames; i < list.length; i += 1){\n        var name = list[i];\n        if (state.groupNames.indexOf(name) === -1) state.raise(\"Invalid named capture referenced\");\n    }\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n$d184995ea4e545a3$var$pp$1.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while(state.eat(0x7C /* | */ ))this.regexp_alternative(state);\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) state.raise(\"Nothing to repeat\");\n    if (state.eat(0x7B /* { */ )) state.raise(\"Lone quantifier brackets\");\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n$d184995ea4e545a3$var$pp$1.regexp_alternative = function(state) {\n    while(state.pos < state.source.length && this.regexp_eatTerm(state));\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n$d184995ea4e545a3$var$pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n        // Handle `QuantifiableAssertion Quantifier` alternative.\n        // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n        // is a QuantifiableAssertion.\n        if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) // Make the same message as V8.\n        {\n            if (state.switchU) state.raise(\"Invalid quantifier\");\n        }\n        return true;\n    }\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n        this.regexp_eatQuantifier(state);\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n$d184995ea4e545a3$var$pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n    // ^, $\n    if (state.eat(0x5E /* ^ */ ) || state.eat(0x24 /* $ */ )) return true;\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */ )) {\n        if (state.eat(0x42 /* B */ ) || state.eat(0x62 /* b */ )) return true;\n        state.pos = start;\n    }\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */ ) && state.eat(0x3F /* ? */ )) {\n        var lookbehind = false;\n        if (this.options.ecmaVersion >= 9) lookbehind = state.eat(0x3C /* < */ );\n        if (state.eat(0x3D /* = */ ) || state.eat(0x21 /* ! */ )) {\n            this.regexp_disjunction(state);\n            if (!state.eat(0x29 /* ) */ )) state.raise(\"Unterminated group\");\n            state.lastAssertionIsQuantifiable = !lookbehind;\n            return true;\n        }\n    }\n    state.pos = start;\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n$d184995ea4e545a3$var$pp$1.regexp_eatQuantifier = function(state, noError) {\n    if (noError === void 0) noError = false;\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n        state.eat(0x3F /* ? */ );\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n$d184995ea4e545a3$var$pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return state.eat(0x2A /* * */ ) || state.eat(0x2B /* + */ ) || state.eat(0x3F /* ? */ ) || this.regexp_eatBracedQuantifier(state, noError);\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */ )) {\n        var min = 0, max = -1;\n        if (this.regexp_eatDecimalDigits(state)) {\n            min = state.lastIntValue;\n            if (state.eat(0x2C /* , */ ) && this.regexp_eatDecimalDigits(state)) max = state.lastIntValue;\n            if (state.eat(0x7D /* } */ )) {\n                // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n                if (max !== -1 && max < min && !noError) state.raise(\"numbers out of order in {} quantifier\");\n                return true;\n            }\n        }\n        if (state.switchU && !noError) state.raise(\"Incomplete quantifier\");\n        state.pos = start;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n$d184995ea4e545a3$var$pp$1.regexp_eatAtom = function(state) {\n    return this.regexp_eatPatternCharacters(state) || state.eat(0x2E /* . */ ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */ )) {\n        if (this.regexp_eatAtomEscape(state)) return true;\n        state.pos = start;\n    }\n    return false;\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */ )) {\n        if (state.eat(0x3F /* ? */ ) && state.eat(0x3A /* : */ )) {\n            this.regexp_disjunction(state);\n            if (state.eat(0x29 /* ) */ )) return true;\n            state.raise(\"Unterminated group\");\n        }\n        state.pos = start;\n    }\n    return false;\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */ )) {\n        if (this.options.ecmaVersion >= 9) this.regexp_groupSpecifier(state);\n        else if (state.current() === 0x3F /* ? */ ) state.raise(\"Invalid group\");\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */ )) {\n            state.numCapturingParens += 1;\n            return true;\n        }\n        state.raise(\"Unterminated group\");\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n$d184995ea4e545a3$var$pp$1.regexp_eatExtendedAtom = function(state) {\n    return state.eat(0x2E /* . */ ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n$d184995ea4e545a3$var$pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) state.raise(\"Nothing to repeat\");\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n$d184995ea4e545a3$var$pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if ($d184995ea4e545a3$var$isSyntaxCharacter(ch)) {\n        state.lastIntValue = ch;\n        state.advance();\n        return true;\n    }\n    return false;\n};\nfunction $d184995ea4e545a3$var$isSyntaxCharacter(ch) {\n    return ch === 0x24 /* $ */  || ch >= 0x28 /* ( */  && ch <= 0x2B /* + */  || ch === 0x2E /* . */  || ch === 0x3F /* ? */  || ch >= 0x5B /* [ */  && ch <= 0x5E /* ^ */  || ch >= 0x7B /* { */  && ch <= 0x7D /* } */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\n$d184995ea4e545a3$var$pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while((ch = state.current()) !== -1 && !$d184995ea4e545a3$var$isSyntaxCharacter(ch))state.advance();\n    return state.pos !== start;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n$d184995ea4e545a3$var$pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (ch !== -1 && ch !== 0x24 /* $ */  && !(ch >= 0x28 /* ( */  && ch <= 0x2B /* + */ ) && ch !== 0x2E /* . */  && ch !== 0x3F /* ? */  && ch !== 0x5B /* [ */  && ch !== 0x5E /* ^ */  && ch !== 0x7C /* | */ ) {\n        state.advance();\n        return true;\n    }\n    return false;\n};\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\n$d184995ea4e545a3$var$pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */ )) {\n        if (this.regexp_eatGroupName(state)) {\n            if (state.groupNames.indexOf(state.lastStringValue) !== -1) state.raise(\"Duplicate capture group name\");\n            state.groupNames.push(state.lastStringValue);\n            return;\n        }\n        state.raise(\"Invalid group\");\n    }\n};\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\n$d184995ea4e545a3$var$pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */ )) {\n        if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */ )) return true;\n        state.raise(\"Invalid capture group name\");\n    }\n    return false;\n};\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\n$d184995ea4e545a3$var$pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n        state.lastStringValue += $d184995ea4e545a3$var$codePointToString(state.lastIntValue);\n        while(this.regexp_eatRegExpIdentifierPart(state))state.lastStringValue += $d184995ea4e545a3$var$codePointToString(state.lastIntValue);\n        return true;\n    }\n    return false;\n};\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n$d184995ea4e545a3$var$pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n    if (ch === 0x5C /* \\ */  && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) ch = state.lastIntValue;\n    if ($d184995ea4e545a3$var$isRegExpIdentifierStart(ch)) {\n        state.lastIntValue = ch;\n        return true;\n    }\n    state.pos = start;\n    return false;\n};\nfunction $d184995ea4e545a3$var$isRegExpIdentifierStart(ch) {\n    return $d184995ea4e545a3$export$56b48cc5d7560ffb(ch, true) || ch === 0x24 /* $ */  || ch === 0x5F /* _ */ ;\n}\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\n$d184995ea4e545a3$var$pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n    if (ch === 0x5C /* \\ */  && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) ch = state.lastIntValue;\n    if ($d184995ea4e545a3$var$isRegExpIdentifierPart(ch)) {\n        state.lastIntValue = ch;\n        return true;\n    }\n    state.pos = start;\n    return false;\n};\nfunction $d184995ea4e545a3$var$isRegExpIdentifierPart(ch) {\n    return $d184995ea4e545a3$export$332f4d7bee38db93(ch, true) || ch === 0x24 /* $ */  || ch === 0x5F /* _ */  || ch === 0x200C /* <ZWNJ> */  || ch === 0x200D /* <ZWJ> */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatAtomEscape = function(state) {\n    if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) return true;\n    if (state.switchU) {\n        // Make the same message as V8.\n        if (state.current() === 0x63 /* c */ ) state.raise(\"Invalid unicode escape\");\n        state.raise(\"Invalid escape\");\n    }\n    return false;\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n        var n = state.lastIntValue;\n        if (state.switchU) {\n            // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n            if (n > state.maxBackReference) state.maxBackReference = n;\n            return true;\n        }\n        if (n <= state.numCapturingParens) return true;\n        state.pos = start;\n    }\n    return false;\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */ )) {\n        if (this.regexp_eatGroupName(state)) {\n            state.backReferenceNames.push(state.lastStringValue);\n            return true;\n        }\n        state.raise(\"Invalid named reference\");\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatCharacterEscape = function(state) {\n    return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */ )) {\n        if (this.regexp_eatControlLetter(state)) return true;\n        state.pos = start;\n    }\n    return false;\n};\n$d184995ea4e545a3$var$pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */  && !$d184995ea4e545a3$var$isDecimalDigit(state.lookahead())) {\n        state.lastIntValue = 0;\n        state.advance();\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */ ) {\n        state.lastIntValue = 0x09; /* \\t */ \n        state.advance();\n        return true;\n    }\n    if (ch === 0x6E /* n */ ) {\n        state.lastIntValue = 0x0A; /* \\n */ \n        state.advance();\n        return true;\n    }\n    if (ch === 0x76 /* v */ ) {\n        state.lastIntValue = 0x0B; /* \\v */ \n        state.advance();\n        return true;\n    }\n    if (ch === 0x66 /* f */ ) {\n        state.lastIntValue = 0x0C; /* \\f */ \n        state.advance();\n        return true;\n    }\n    if (ch === 0x72 /* r */ ) {\n        state.lastIntValue = 0x0D; /* \\r */ \n        state.advance();\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n$d184995ea4e545a3$var$pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if ($d184995ea4e545a3$var$isControlLetter(ch)) {\n        state.lastIntValue = ch % 0x20;\n        state.advance();\n        return true;\n    }\n    return false;\n};\nfunction $d184995ea4e545a3$var$isControlLetter(ch) {\n    return ch >= 0x41 /* A */  && ch <= 0x5A /* Z */  || ch >= 0x61 /* a */  && ch <= 0x7A /* z */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n$d184995ea4e545a3$var$pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if (forceU === void 0) forceU = false;\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n    if (state.eat(0x75 /* u */ )) {\n        if (this.regexp_eatFixedHexDigits(state, 4)) {\n            var lead = state.lastIntValue;\n            if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n                var leadSurrogateEnd = state.pos;\n                if (state.eat(0x5C /* \\ */ ) && state.eat(0x75 /* u */ ) && this.regexp_eatFixedHexDigits(state, 4)) {\n                    var trail = state.lastIntValue;\n                    if (trail >= 0xDC00 && trail <= 0xDFFF) {\n                        state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n                        return true;\n                    }\n                }\n                state.pos = leadSurrogateEnd;\n                state.lastIntValue = lead;\n            }\n            return true;\n        }\n        if (switchU && state.eat(0x7B /* { */ ) && this.regexp_eatHexDigits(state) && state.eat(0x7D /* } */ ) && $d184995ea4e545a3$var$isValidUnicode(state.lastIntValue)) return true;\n        if (switchU) state.raise(\"Invalid unicode escape\");\n        state.pos = start;\n    }\n    return false;\n};\nfunction $d184995ea4e545a3$var$isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n        if (this.regexp_eatSyntaxCharacter(state)) return true;\n        if (state.eat(0x2F /* / */ )) {\n            state.lastIntValue = 0x2F; /* / */ \n            return true;\n        }\n        return false;\n    }\n    var ch = state.current();\n    if (ch !== 0x63 /* c */  && (!state.switchN || ch !== 0x6B /* k */ )) {\n        state.lastIntValue = ch;\n        state.advance();\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */  && ch <= 0x39 /* 9 */ ) {\n        do {\n            state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */ );\n            state.advance();\n        }while ((ch = state.current()) >= 0x30 /* 0 */  && ch <= 0x39 /* 9 */ );\n        return true;\n    }\n    return false;\n};\n// Return values used by character set parsing methods, needed to\n// forbid negation of sets that can match strings.\nvar $d184995ea4e545a3$var$CharSetNone = 0; // Nothing parsed\nvar $d184995ea4e545a3$var$CharSetOk = 1; // Construct parsed, cannot contain strings\nvar $d184995ea4e545a3$var$CharSetString = 2; // Construct parsed, can contain strings\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n    if ($d184995ea4e545a3$var$isCharacterClassEscape(ch)) {\n        state.lastIntValue = -1;\n        state.advance();\n        return $d184995ea4e545a3$var$CharSetOk;\n    }\n    var negate = false;\n    if (state.switchU && this.options.ecmaVersion >= 9 && ((negate = ch === 0x50 /* P */ ) || ch === 0x70 /* p */ )) {\n        state.lastIntValue = -1;\n        state.advance();\n        var result;\n        if (state.eat(0x7B /* { */ ) && (result = this.regexp_eatUnicodePropertyValueExpression(state)) && state.eat(0x7D /* } */ )) {\n            if (negate && result === $d184995ea4e545a3$var$CharSetString) state.raise(\"Invalid property name\");\n            return result;\n        }\n        state.raise(\"Invalid property name\");\n    }\n    return $d184995ea4e545a3$var$CharSetNone;\n};\nfunction $d184995ea4e545a3$var$isCharacterClassEscape(ch) {\n    return ch === 0x64 /* d */  || ch === 0x44 /* D */  || ch === 0x73 /* s */  || ch === 0x53 /* S */  || ch === 0x77 /* w */  || ch === 0x57 /* W */ ;\n}\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\n$d184995ea4e545a3$var$pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */ )) {\n        var name = state.lastStringValue;\n        if (this.regexp_eatUnicodePropertyValue(state)) {\n            var value = state.lastStringValue;\n            this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n            return $d184995ea4e545a3$var$CharSetOk;\n        }\n    }\n    state.pos = start;\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n        var nameOrValue = state.lastStringValue;\n        return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    }\n    return $d184995ea4e545a3$var$CharSetNone;\n};\n$d184995ea4e545a3$var$pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!$d184995ea4e545a3$var$hasOwn(state.unicodeProperties.nonBinary, name)) state.raise(\"Invalid property name\");\n    if (!state.unicodeProperties.nonBinary[name].test(value)) state.raise(\"Invalid property value\");\n};\n$d184995ea4e545a3$var$pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (state.unicodeProperties.binary.test(nameOrValue)) return $d184995ea4e545a3$var$CharSetOk;\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) return $d184995ea4e545a3$var$CharSetString;\n    state.raise(\"Invalid property name\");\n};\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\n$d184995ea4e545a3$var$pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while($d184995ea4e545a3$var$isUnicodePropertyNameCharacter(ch = state.current())){\n        state.lastStringValue += $d184995ea4e545a3$var$codePointToString(ch);\n        state.advance();\n    }\n    return state.lastStringValue !== \"\";\n};\nfunction $d184995ea4e545a3$var$isUnicodePropertyNameCharacter(ch) {\n    return $d184995ea4e545a3$var$isControlLetter(ch) || ch === 0x5F /* _ */ ;\n}\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\n$d184995ea4e545a3$var$pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while($d184995ea4e545a3$var$isUnicodePropertyValueCharacter(ch = state.current())){\n        state.lastStringValue += $d184995ea4e545a3$var$codePointToString(ch);\n        state.advance();\n    }\n    return state.lastStringValue !== \"\";\n};\nfunction $d184995ea4e545a3$var$isUnicodePropertyValueCharacter(ch) {\n    return $d184995ea4e545a3$var$isUnicodePropertyNameCharacter(ch) || $d184995ea4e545a3$var$isDecimalDigit(ch);\n}\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\n$d184995ea4e545a3$var$pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state);\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n$d184995ea4e545a3$var$pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */ )) {\n        var negate = state.eat(0x5E /* ^ */ );\n        var result = this.regexp_classContents(state);\n        if (!state.eat(0x5D /* ] */ )) state.raise(\"Unterminated character class\");\n        if (negate && result === $d184995ea4e545a3$var$CharSetString) state.raise(\"Negated character class may contain strings\");\n        return true;\n    }\n    return false;\n};\n// https://tc39.es/ecma262/#prod-ClassContents\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n$d184995ea4e545a3$var$pp$1.regexp_classContents = function(state) {\n    if (state.current() === 0x5D /* ] */ ) return $d184995ea4e545a3$var$CharSetOk;\n    if (state.switchV) return this.regexp_classSetExpression(state);\n    this.regexp_nonEmptyClassRanges(state);\n    return $d184995ea4e545a3$var$CharSetOk;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n$d184995ea4e545a3$var$pp$1.regexp_nonEmptyClassRanges = function(state) {\n    while(this.regexp_eatClassAtom(state)){\n        var left = state.lastIntValue;\n        if (state.eat(0x2D /* - */ ) && this.regexp_eatClassAtom(state)) {\n            var right = state.lastIntValue;\n            if (state.switchU && (left === -1 || right === -1)) state.raise(\"Invalid character class\");\n            if (left !== -1 && right !== -1 && left > right) state.raise(\"Range out of order in character class\");\n        }\n    }\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n$d184995ea4e545a3$var$pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */ )) {\n        if (this.regexp_eatClassEscape(state)) return true;\n        if (state.switchU) {\n            // Make the same message as V8.\n            var ch$1 = state.current();\n            if (ch$1 === 0x63 /* c */  || $d184995ea4e545a3$var$isOctalDigit(ch$1)) state.raise(\"Invalid class escape\");\n            state.raise(\"Invalid escape\");\n        }\n        state.pos = start;\n    }\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */ ) {\n        state.lastIntValue = ch;\n        state.advance();\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n$d184995ea4e545a3$var$pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x62 /* b */ )) {\n        state.lastIntValue = 0x08; /* <BS> */ \n        return true;\n    }\n    if (state.switchU && state.eat(0x2D /* - */ )) {\n        state.lastIntValue = 0x2D; /* - */ \n        return true;\n    }\n    if (!state.switchU && state.eat(0x63 /* c */ )) {\n        if (this.regexp_eatClassControlLetter(state)) return true;\n        state.pos = start;\n    }\n    return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n};\n// https://tc39.es/ecma262/#prod-ClassSetExpression\n// https://tc39.es/ecma262/#prod-ClassUnion\n// https://tc39.es/ecma262/#prod-ClassIntersection\n// https://tc39.es/ecma262/#prod-ClassSubtraction\n$d184995ea4e545a3$var$pp$1.regexp_classSetExpression = function(state) {\n    var result = $d184995ea4e545a3$var$CharSetOk, subResult;\n    if (this.regexp_eatClassSetRange(state)) ;\n    else if (subResult = this.regexp_eatClassSetOperand(state)) {\n        if (subResult === $d184995ea4e545a3$var$CharSetString) result = $d184995ea4e545a3$var$CharSetString;\n        // https://tc39.es/ecma262/#prod-ClassIntersection\n        var start = state.pos;\n        while(state.eatChars([\n            0x26,\n            0x26\n        ])){\n            if (state.current() !== 0x26 /* & */  && (subResult = this.regexp_eatClassSetOperand(state))) {\n                if (subResult !== $d184995ea4e545a3$var$CharSetString) result = $d184995ea4e545a3$var$CharSetOk;\n                continue;\n            }\n            state.raise(\"Invalid character in character class\");\n        }\n        if (start !== state.pos) return result;\n        // https://tc39.es/ecma262/#prod-ClassSubtraction\n        while(state.eatChars([\n            0x2D,\n            0x2D\n        ])){\n            if (this.regexp_eatClassSetOperand(state)) continue;\n            state.raise(\"Invalid character in character class\");\n        }\n        if (start !== state.pos) return result;\n    } else state.raise(\"Invalid character in character class\");\n    // https://tc39.es/ecma262/#prod-ClassUnion\n    for(;;){\n        if (this.regexp_eatClassSetRange(state)) continue;\n        subResult = this.regexp_eatClassSetOperand(state);\n        if (!subResult) return result;\n        if (subResult === $d184995ea4e545a3$var$CharSetString) result = $d184995ea4e545a3$var$CharSetString;\n    }\n};\n// https://tc39.es/ecma262/#prod-ClassSetRange\n$d184995ea4e545a3$var$pp$1.regexp_eatClassSetRange = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatClassSetCharacter(state)) {\n        var left = state.lastIntValue;\n        if (state.eat(0x2D /* - */ ) && this.regexp_eatClassSetCharacter(state)) {\n            var right = state.lastIntValue;\n            if (left !== -1 && right !== -1 && left > right) state.raise(\"Range out of order in character class\");\n            return true;\n        }\n        state.pos = start;\n    }\n    return false;\n};\n// https://tc39.es/ecma262/#prod-ClassSetOperand\n$d184995ea4e545a3$var$pp$1.regexp_eatClassSetOperand = function(state) {\n    if (this.regexp_eatClassSetCharacter(state)) return $d184995ea4e545a3$var$CharSetOk;\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state);\n};\n// https://tc39.es/ecma262/#prod-NestedClass\n$d184995ea4e545a3$var$pp$1.regexp_eatNestedClass = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5B /* [ */ )) {\n        var negate = state.eat(0x5E /* ^ */ );\n        var result = this.regexp_classContents(state);\n        if (state.eat(0x5D /* ] */ )) {\n            if (negate && result === $d184995ea4e545a3$var$CharSetString) state.raise(\"Negated character class may contain strings\");\n            return result;\n        }\n        state.pos = start;\n    }\n    if (state.eat(0x5C /* \\ */ )) {\n        var result$1 = this.regexp_eatCharacterClassEscape(state);\n        if (result$1) return result$1;\n        state.pos = start;\n    }\n    return null;\n};\n// https://tc39.es/ecma262/#prod-ClassStringDisjunction\n$d184995ea4e545a3$var$pp$1.regexp_eatClassStringDisjunction = function(state) {\n    var start = state.pos;\n    if (state.eatChars([\n        0x5C,\n        0x71\n    ])) {\n        if (state.eat(0x7B /* { */ )) {\n            var result = this.regexp_classStringDisjunctionContents(state);\n            if (state.eat(0x7D /* } */ )) return result;\n        } else // Make the same message as V8.\n        state.raise(\"Invalid escape\");\n        state.pos = start;\n    }\n    return null;\n};\n// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\n$d184995ea4e545a3$var$pp$1.regexp_classStringDisjunctionContents = function(state) {\n    var result = this.regexp_classString(state);\n    while(state.eat(0x7C /* | */ ))if (this.regexp_classString(state) === $d184995ea4e545a3$var$CharSetString) result = $d184995ea4e545a3$var$CharSetString;\n    return result;\n};\n// https://tc39.es/ecma262/#prod-ClassString\n// https://tc39.es/ecma262/#prod-NonEmptyClassString\n$d184995ea4e545a3$var$pp$1.regexp_classString = function(state) {\n    var count = 0;\n    while(this.regexp_eatClassSetCharacter(state))count++;\n    return count === 1 ? $d184995ea4e545a3$var$CharSetOk : $d184995ea4e545a3$var$CharSetString;\n};\n// https://tc39.es/ecma262/#prod-ClassSetCharacter\n$d184995ea4e545a3$var$pp$1.regexp_eatClassSetCharacter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */ )) {\n        if (this.regexp_eatCharacterEscape(state) || this.regexp_eatClassSetReservedPunctuator(state)) return true;\n        if (state.eat(0x62 /* b */ )) {\n            state.lastIntValue = 0x08; /* <BS> */ \n            return true;\n        }\n        state.pos = start;\n        return false;\n    }\n    var ch = state.current();\n    if (ch < 0 || ch === state.lookahead() && $d184995ea4e545a3$var$isClassSetReservedDoublePunctuatorCharacter(ch)) return false;\n    if ($d184995ea4e545a3$var$isClassSetSyntaxCharacter(ch)) return false;\n    state.advance();\n    state.lastIntValue = ch;\n    return true;\n};\n// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\nfunction $d184995ea4e545a3$var$isClassSetReservedDoublePunctuatorCharacter(ch) {\n    return ch === 0x21 /* ! */  || ch >= 0x23 /* # */  && ch <= 0x26 /* & */  || ch >= 0x2A /* * */  && ch <= 0x2C /* , */  || ch === 0x2E /* . */  || ch >= 0x3A /* : */  && ch <= 0x40 /* @ */  || ch === 0x5E /* ^ */  || ch === 0x60 /* ` */  || ch === 0x7E /* ~ */ ;\n}\n// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\nfunction $d184995ea4e545a3$var$isClassSetSyntaxCharacter(ch) {\n    return ch === 0x28 /* ( */  || ch === 0x29 /* ) */  || ch === 0x2D /* - */  || ch === 0x2F /* / */  || ch >= 0x5B /* [ */  && ch <= 0x5D /* ] */  || ch >= 0x7B /* { */  && ch <= 0x7D /* } */ ;\n}\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n$d184995ea4e545a3$var$pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n    var ch = state.current();\n    if ($d184995ea4e545a3$var$isClassSetReservedPunctuator(ch)) {\n        state.lastIntValue = ch;\n        state.advance();\n        return true;\n    }\n    return false;\n};\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\nfunction $d184995ea4e545a3$var$isClassSetReservedPunctuator(ch) {\n    return ch === 0x21 /* ! */  || ch === 0x23 /* # */  || ch === 0x25 /* % */  || ch === 0x26 /* & */  || ch === 0x2C /* , */  || ch === 0x2D /* - */  || ch >= 0x3A /* : */  && ch <= 0x3E /* > */  || ch === 0x40 /* @ */  || ch === 0x60 /* ` */  || ch === 0x7E /* ~ */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n$d184995ea4e545a3$var$pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if ($d184995ea4e545a3$var$isDecimalDigit(ch) || ch === 0x5F /* _ */ ) {\n        state.lastIntValue = ch % 0x20;\n        state.advance();\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n$d184995ea4e545a3$var$pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */ )) {\n        if (this.regexp_eatFixedHexDigits(state, 2)) return true;\n        if (state.switchU) state.raise(\"Invalid escape\");\n        state.pos = start;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n$d184995ea4e545a3$var$pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while($d184995ea4e545a3$var$isDecimalDigit(ch = state.current())){\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */ );\n        state.advance();\n    }\n    return state.pos !== start;\n};\nfunction $d184995ea4e545a3$var$isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */  && ch <= 0x39 /* 9 */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n$d184995ea4e545a3$var$pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while($d184995ea4e545a3$var$isHexDigit(ch = state.current())){\n        state.lastIntValue = 16 * state.lastIntValue + $d184995ea4e545a3$var$hexToInt(ch);\n        state.advance();\n    }\n    return state.pos !== start;\n};\nfunction $d184995ea4e545a3$var$isHexDigit(ch) {\n    return ch >= 0x30 /* 0 */  && ch <= 0x39 /* 9 */  || ch >= 0x41 /* A */  && ch <= 0x46 /* F */  || ch >= 0x61 /* a */  && ch <= 0x66 /* f */ ;\n}\nfunction $d184995ea4e545a3$var$hexToInt(ch) {\n    if (ch >= 0x41 /* A */  && ch <= 0x46 /* F */ ) return 10 + (ch - 0x41 /* A */ );\n    if (ch >= 0x61 /* a */  && ch <= 0x66 /* f */ ) return 10 + (ch - 0x61 /* a */ );\n    return ch - 0x30 /* 0 */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\n$d184995ea4e545a3$var$pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n        var n1 = state.lastIntValue;\n        if (this.regexp_eatOctalDigit(state)) {\n            var n2 = state.lastIntValue;\n            if (n1 <= 3 && this.regexp_eatOctalDigit(state)) state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n            else state.lastIntValue = n1 * 8 + n2;\n        } else state.lastIntValue = n1;\n        return true;\n    }\n    return false;\n};\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n$d184995ea4e545a3$var$pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if ($d184995ea4e545a3$var$isOctalDigit(ch)) {\n        state.lastIntValue = ch - 0x30; /* 0 */ \n        state.advance();\n        return true;\n    }\n    state.lastIntValue = 0;\n    return false;\n};\nfunction $d184995ea4e545a3$var$isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */  && ch <= 0x37 /* 7 */ ;\n}\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n$d184995ea4e545a3$var$pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for(var i = 0; i < length; ++i){\n        var ch = state.current();\n        if (!$d184995ea4e545a3$var$isHexDigit(ch)) {\n            state.pos = start;\n            return false;\n        }\n        state.lastIntValue = 16 * state.lastIntValue + $d184995ea4e545a3$var$hexToInt(ch);\n        state.advance();\n    }\n    return true;\n};\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\nvar $d184995ea4e545a3$export$50792b0e93539fde = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations) this.loc = new $d184995ea4e545a3$export$7387db7caf96fcdb(p, p.startLoc, p.endLoc);\n    if (p.options.ranges) this.range = [\n        p.start,\n        p.end\n    ];\n};\n// ## Tokenizer\nvar $d184995ea4e545a3$var$pp = $d184995ea4e545a3$export$7acfa6ed01010e37.prototype;\n// Move to the next token\n$d184995ea4e545a3$var$pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword);\n    if (this.options.onToken) this.options.onToken(new $d184995ea4e545a3$export$50792b0e93539fde(this));\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n};\n$d184995ea4e545a3$var$pp.getToken = function() {\n    this.next();\n    return new $d184995ea4e545a3$export$50792b0e93539fde(this);\n};\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\") $d184995ea4e545a3$var$pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n    return {\n        next: function() {\n            var token = this$1$1.getToken();\n            return {\n                done: token.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.eof,\n                value: token\n            };\n        }\n    };\n};\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n// Read a single token, updating the parser object's token-related\n// properties.\n$d184995ea4e545a3$var$pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) this.skipSpace();\n    this.start = this.pos;\n    if (this.options.locations) this.startLoc = this.curPosition();\n    if (this.pos >= this.input.length) return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.eof);\n    if (curContext.override) return curContext.override(this);\n    else this.readToken(this.fullCharCodeAtPos());\n};\n$d184995ea4e545a3$var$pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if ($d184995ea4e545a3$export$56b48cc5d7560ffb(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */ ) return this.readWord();\n    return this.getTokenFromCode(code);\n};\n$d184995ea4e545a3$var$pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) return code;\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00;\n};\n$d184995ea4e545a3$var$pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\");\n    this.pos = end + 2;\n    if (this.options.locations) for(var nextBreak = void 0, pos = start; (nextBreak = $d184995ea4e545a3$var$nextLineBreak(this.input, pos, this.pos)) > -1;){\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n    }\n    if (this.options.onComment) this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n};\n$d184995ea4e545a3$var$pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while(this.pos < this.input.length && !$d184995ea4e545a3$export$2c19a3e3b4008fff(ch))ch = this.input.charCodeAt(++this.pos);\n    if (this.options.onComment) this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n};\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n$d184995ea4e545a3$var$pp.skipSpace = function() {\n    loop: while(this.pos < this.input.length){\n        var ch = this.input.charCodeAt(this.pos);\n        switch(ch){\n            case 32:\n            case 160:\n                ++this.pos;\n                break;\n            case 13:\n                if (this.input.charCodeAt(this.pos + 1) === 10) ++this.pos;\n            case 10:\n            case 8232:\n            case 8233:\n                ++this.pos;\n                if (this.options.locations) {\n                    ++this.curLine;\n                    this.lineStart = this.pos;\n                }\n                break;\n            case 47:\n                switch(this.input.charCodeAt(this.pos + 1)){\n                    case 42:\n                        this.skipBlockComment();\n                        break;\n                    case 47:\n                        this.skipLineComment(2);\n                        break;\n                    default:\n                        break loop;\n                }\n                break;\n            default:\n                if (ch > 8 && ch < 14 || ch >= 5760 && $d184995ea4e545a3$export$268622f0f1cbc82b.test(String.fromCharCode(ch))) ++this.pos;\n                else break loop;\n        }\n    }\n};\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n$d184995ea4e545a3$var$pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) this.endLoc = this.curPosition();\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n    this.updateContext(prevType);\n};\n// ### Token reading\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\n$d184995ea4e545a3$var$pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) return this.readNumber(true);\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n        this.pos += 3;\n        return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.ellipsis);\n    } else {\n        ++this.pos;\n        return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.dot);\n    }\n};\n$d184995ea4e545a3$var$pp.readToken_slash = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) {\n        ++this.pos;\n        return this.readRegexp();\n    }\n    if (next === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, 2);\n    return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.slash, 1);\n};\n$d184995ea4e545a3$var$pp.readToken_mult_modulo_exp = function(code) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? $d184995ea4e545a3$export$b54c7ea7aabba5c8.star : $d184995ea4e545a3$export$b54c7ea7aabba5c8.modulo;\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n        ++size;\n        tokentype = $d184995ea4e545a3$export$b54c7ea7aabba5c8.starstar;\n        next = this.input.charCodeAt(this.pos + 2);\n    }\n    if (next === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, size + 1);\n    return this.finishOp(tokentype, size);\n};\n$d184995ea4e545a3$var$pp.readToken_pipe_amp = function(code) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n        if (this.options.ecmaVersion >= 12) {\n            var next2 = this.input.charCodeAt(this.pos + 2);\n            if (next2 === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, 3);\n        }\n        return this.finishOp(code === 124 ? $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalOR : $d184995ea4e545a3$export$b54c7ea7aabba5c8.logicalAND, 2);\n    }\n    if (next === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, 2);\n    return this.finishOp(code === 124 ? $d184995ea4e545a3$export$b54c7ea7aabba5c8.bitwiseOR : $d184995ea4e545a3$export$b54c7ea7aabba5c8.bitwiseAND, 1);\n};\n$d184995ea4e545a3$var$pp.readToken_caret = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, 2);\n    return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.bitwiseXOR, 1);\n};\n$d184995ea4e545a3$var$pp.readToken_plus_min = function(code) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n        if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || $d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n            // A `-->` line comment\n            this.skipLineComment(3);\n            this.skipSpace();\n            return this.nextToken();\n        }\n        return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.incDec, 2);\n    }\n    if (next === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, 2);\n    return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.plusMin, 1);\n};\n$d184995ea4e545a3$var$pp.readToken_lt_gt = function(code) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n        size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n        if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, size + 1);\n        return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.bitShift, size);\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n        // `<!--`, an XML-style comment that should be interpreted as a line comment\n        this.skipLineComment(4);\n        this.skipSpace();\n        return this.nextToken();\n    }\n    if (next === 61) size = 2;\n    return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.relational, size);\n};\n$d184995ea4e545a3$var$pp.readToken_eq_excl = function(code) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n        this.pos += 2;\n        return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.arrow);\n    }\n    return this.finishOp(code === 61 ? $d184995ea4e545a3$export$b54c7ea7aabba5c8.eq : $d184995ea4e545a3$export$b54c7ea7aabba5c8.prefix, 1);\n};\n$d184995ea4e545a3$var$pp.readToken_question = function() {\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n        var next = this.input.charCodeAt(this.pos + 1);\n        if (next === 46) {\n            var next2 = this.input.charCodeAt(this.pos + 2);\n            if (next2 < 48 || next2 > 57) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.questionDot, 2);\n        }\n        if (next === 63) {\n            if (ecmaVersion >= 12) {\n                var next2$1 = this.input.charCodeAt(this.pos + 2);\n                if (next2$1 === 61) return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.assign, 3);\n            }\n            return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.coalesce, 2);\n        }\n    }\n    return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.question, 1);\n};\n$d184995ea4e545a3$var$pp.readToken_numberSign = function() {\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n        ++this.pos;\n        code = this.fullCharCodeAtPos();\n        if ($d184995ea4e545a3$export$56b48cc5d7560ffb(code, true) || code === 92 /* '\\' */ ) return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.privateId, this.readWord1());\n    }\n    this.raise(this.pos, \"Unexpected character '\" + $d184995ea4e545a3$var$codePointToString(code) + \"'\");\n};\n$d184995ea4e545a3$var$pp.getTokenFromCode = function(code) {\n    switch(code){\n        // The interpretation of a dot depends on whether it is followed\n        // by a digit or another two dots.\n        case 46:\n            return this.readToken_dot();\n        // Punctuation tokens.\n        case 40:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenL);\n        case 41:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.parenR);\n        case 59:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.semi);\n        case 44:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.comma);\n        case 91:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketL);\n        case 93:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.bracketR);\n        case 123:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceL);\n        case 125:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.braceR);\n        case 58:\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.colon);\n        case 96:\n            if (this.options.ecmaVersion < 6) break;\n            ++this.pos;\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote);\n        case 48:\n            var next = this.input.charCodeAt(this.pos + 1);\n            if (next === 120 || next === 88) return this.readRadixNumber(16);\n             // '0x', '0X' - hex number\n            if (this.options.ecmaVersion >= 6) {\n                if (next === 111 || next === 79) return this.readRadixNumber(8);\n                 // '0o', '0O' - octal number\n                if (next === 98 || next === 66) return this.readRadixNumber(2);\n                 // '0b', '0B' - binary number\n            }\n        // Anything else beginning with a digit is an integer, octal\n        // number, or float.\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return this.readNumber(false);\n        // Quotes produce strings.\n        case 34:\n        case 39:\n            return this.readString(code);\n        // Operators are parsed inline in tiny state machines. '=' (61) is\n        // often referred to. `finishOp` simply skips the amount of\n        // characters it is given as second argument, and returns a token\n        // of the type given by its first argument.\n        case 47:\n            return this.readToken_slash();\n        case 37:\n        case 42:\n            return this.readToken_mult_modulo_exp(code);\n        case 124:\n        case 38:\n            return this.readToken_pipe_amp(code);\n        case 94:\n            return this.readToken_caret();\n        case 43:\n        case 45:\n            return this.readToken_plus_min(code);\n        case 60:\n        case 62:\n            return this.readToken_lt_gt(code);\n        case 61:\n        case 33:\n            return this.readToken_eq_excl(code);\n        case 63:\n            return this.readToken_question();\n        case 126:\n            return this.finishOp($d184995ea4e545a3$export$b54c7ea7aabba5c8.prefix, 1);\n        case 35:\n            return this.readToken_numberSign();\n    }\n    this.raise(this.pos, \"Unexpected character '\" + $d184995ea4e545a3$var$codePointToString(code) + \"'\");\n};\n$d184995ea4e545a3$var$pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str);\n};\n$d184995ea4e545a3$var$pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for(;;){\n        if (this.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\");\n        var ch = this.input.charAt(this.pos);\n        if ($d184995ea4e545a3$export$a1aa2dd4ad0d3f6.test(ch)) this.raise(start, \"Unterminated regular expression\");\n        if (!escaped) {\n            if (ch === \"[\") inClass = true;\n            else if (ch === \"]\" && inClass) inClass = false;\n            else if (ch === \"/\" && !inClass) break;\n            escaped = ch === \"\\\\\";\n        } else escaped = false;\n        ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) this.unexpected(flagsStart);\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new $d184995ea4e545a3$var$RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n    // Create Literal#value property value.\n    var value = null;\n    try {\n        value = new RegExp(pattern, flags);\n    } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n    return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.regexp, {\n        pattern: pattern,\n        flags: flags,\n        value: value\n    });\n};\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n$d184995ea4e545a3$var$pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n    var start = this.pos, total = 0, lastCode = 0;\n    for(var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos){\n        var code = this.input.charCodeAt(this.pos), val = void 0;\n        if (allowSeparators && code === 95) {\n            if (isLegacyOctalNumericLiteral) this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\");\n            if (lastCode === 95) this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\");\n            if (i === 0) this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\");\n            lastCode = code;\n            continue;\n        }\n        if (code >= 97) val = code - 97 + 10;\n        else if (code >= 65) val = code - 65 + 10;\n        else if (code >= 48 && code <= 57) val = code - 48;\n        else val = Infinity;\n        if (val >= radix) break;\n        lastCode = code;\n        total = total * radix + val;\n    }\n    if (allowSeparators && lastCode === 95) this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\");\n    if (this.pos === start || len != null && this.pos - start !== len) return null;\n    return total;\n};\nfunction $d184995ea4e545a3$var$stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) return parseInt(str, 8);\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"));\n}\nfunction $d184995ea4e545a3$var$stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") return null;\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"));\n}\n$d184995ea4e545a3$var$pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix);\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n        val = $d184995ea4e545a3$var$stringToBigInt(this.input.slice(start, this.pos));\n        ++this.pos;\n    } else if ($d184995ea4e545a3$export$56b48cc5d7560ffb(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n    return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.num, val);\n};\n// Read an integer, octal integer, or floating-point number.\n$d184995ea4e545a3$var$pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) this.raise(start, \"Invalid number\");\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) this.raise(start, \"Invalid number\");\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n        var val$1 = $d184995ea4e545a3$var$stringToBigInt(this.input.slice(start, this.pos));\n        ++this.pos;\n        if ($d184995ea4e545a3$export$56b48cc5d7560ffb(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n        return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.num, val$1);\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) octal = false;\n    if (next === 46 && !octal) {\n        ++this.pos;\n        this.readInt(10);\n        next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) {\n        next = this.input.charCodeAt(++this.pos);\n        if (next === 43 || next === 45) ++this.pos;\n         // '+-'\n        if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n    }\n    if ($d184995ea4e545a3$export$56b48cc5d7560ffb(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n    var val = $d184995ea4e545a3$var$stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.num, val);\n};\n// Read a string value, interpreting backslash-escapes.\n$d184995ea4e545a3$var$pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n    if (ch === 123) {\n        if (this.options.ecmaVersion < 6) this.unexpected();\n        var codePos = ++this.pos;\n        code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n        ++this.pos;\n        if (code > 0x10FFFF) this.invalidStringToken(codePos, \"Code point out of bounds\");\n    } else code = this.readHexChar(4);\n    return code;\n};\n$d184995ea4e545a3$var$pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for(;;){\n        if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated string constant\");\n        var ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 92) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.readEscapedChar(false);\n            chunkStart = this.pos;\n        } else if (ch === 0x2028 || ch === 0x2029) {\n            if (this.options.ecmaVersion < 10) this.raise(this.start, \"Unterminated string constant\");\n            ++this.pos;\n            if (this.options.locations) {\n                this.curLine++;\n                this.lineStart = this.pos;\n            }\n        } else {\n            if ($d184995ea4e545a3$export$2c19a3e3b4008fff(ch)) this.raise(this.start, \"Unterminated string constant\");\n            ++this.pos;\n        }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.string, out);\n};\n// Reads template string tokens.\nvar $d184995ea4e545a3$var$INVALID_TEMPLATE_ESCAPE_ERROR = {};\n$d184995ea4e545a3$var$pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n        this.readTmplToken();\n    } catch (err) {\n        if (err === $d184995ea4e545a3$var$INVALID_TEMPLATE_ESCAPE_ERROR) this.readInvalidTemplateToken();\n        else throw err;\n    }\n    this.inTemplateElement = false;\n};\n$d184995ea4e545a3$var$pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) throw $d184995ea4e545a3$var$INVALID_TEMPLATE_ESCAPE_ERROR;\n    else this.raise(position, message);\n};\n$d184995ea4e545a3$var$pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for(;;){\n        if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated template\");\n        var ch = this.input.charCodeAt(this.pos);\n        if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n            if (this.pos === this.start && (this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.template || this.type === $d184995ea4e545a3$export$b54c7ea7aabba5c8.invalidTemplate)) {\n                if (ch === 36) {\n                    this.pos += 2;\n                    return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.dollarBraceL);\n                } else {\n                    ++this.pos;\n                    return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.backQuote);\n                }\n            }\n            out += this.input.slice(chunkStart, this.pos);\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.template, out);\n        }\n        if (ch === 92) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.readEscapedChar(true);\n            chunkStart = this.pos;\n        } else if ($d184995ea4e545a3$export$2c19a3e3b4008fff(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            ++this.pos;\n            switch(ch){\n                case 13:\n                    if (this.input.charCodeAt(this.pos) === 10) ++this.pos;\n                case 10:\n                    out += \"\\n\";\n                    break;\n                default:\n                    out += String.fromCharCode(ch);\n                    break;\n            }\n            if (this.options.locations) {\n                ++this.curLine;\n                this.lineStart = this.pos;\n            }\n            chunkStart = this.pos;\n        } else ++this.pos;\n    }\n};\n// Reads a template token to search for the end, without validating any escape sequences\n$d184995ea4e545a3$var$pp.readInvalidTemplateToken = function() {\n    for(; this.pos < this.input.length; this.pos++)switch(this.input[this.pos]){\n        case \"\\\\\":\n            ++this.pos;\n            break;\n        case \"$\":\n            if (this.input[this.pos + 1] !== \"{\") break;\n        // falls through\n        case \"`\":\n            return this.finishToken($d184995ea4e545a3$export$b54c7ea7aabba5c8.invalidTemplate, this.input.slice(this.start, this.pos));\n    }\n    this.raise(this.start, \"Unterminated template\");\n};\n// Used to read escaped characters\n$d184995ea4e545a3$var$pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch(ch){\n        case 110:\n            return \"\\n\" // 'n' -> '\\n'\n            ;\n        case 114:\n            return \"\\r\" // 'r' -> '\\r'\n            ;\n        case 120:\n            return String.fromCharCode(this.readHexChar(2)) // 'x'\n            ;\n        case 117:\n            return $d184995ea4e545a3$var$codePointToString(this.readCodePoint()) // 'u'\n            ;\n        case 116:\n            return \"\t\" // 't' -> '\\t'\n            ;\n        case 98:\n            return \"\\b\" // 'b' -> '\\b'\n            ;\n        case 118:\n            return \"\\v\" // 'v' -> '\\u000b'\n            ;\n        case 102:\n            return \"\\f\" // 'f' -> '\\f'\n            ;\n        case 13:\n            if (this.input.charCodeAt(this.pos) === 10) ++this.pos;\n             // '\\r\\n'\n        case 10:\n            if (this.options.locations) {\n                this.lineStart = this.pos;\n                ++this.curLine;\n            }\n            return \"\";\n        case 56:\n        case 57:\n            if (this.strict) this.invalidStringToken(this.pos - 1, \"Invalid escape sequence\");\n            if (inTemplate) {\n                var codePos = this.pos - 1;\n                this.invalidStringToken(codePos, \"Invalid escape sequence in template string\");\n            }\n        default:\n            if (ch >= 48 && ch <= 55) {\n                var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n                var octal = parseInt(octalStr, 8);\n                if (octal > 255) {\n                    octalStr = octalStr.slice(0, -1);\n                    octal = parseInt(octalStr, 8);\n                }\n                this.pos += octalStr.length - 1;\n                ch = this.input.charCodeAt(this.pos);\n                if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? \"Octal literal in template string\" : \"Octal literal in strict mode\");\n                return String.fromCharCode(octal);\n            }\n            if ($d184995ea4e545a3$export$2c19a3e3b4008fff(ch)) // Unicode new line characters after \\ get removed from output in both\n            // template literals and strings\n            return \"\";\n            return String.fromCharCode(ch);\n    }\n};\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n$d184995ea4e545a3$var$pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) this.invalidStringToken(codePos, \"Bad character escape sequence\");\n    return n;\n};\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n$d184995ea4e545a3$var$pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while(this.pos < this.input.length){\n        var ch = this.fullCharCodeAtPos();\n        if ($d184995ea4e545a3$export$332f4d7bee38db93(ch, astral)) this.pos += ch <= 0xffff ? 1 : 2;\n        else if (ch === 92) {\n            this.containsEsc = true;\n            word += this.input.slice(chunkStart, this.pos);\n            var escStart = this.pos;\n            if (this.input.charCodeAt(++this.pos) !== 117) this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n            ++this.pos;\n            var esc = this.readCodePoint();\n            if (!(first ? $d184995ea4e545a3$export$56b48cc5d7560ffb : $d184995ea4e545a3$export$332f4d7bee38db93)(esc, astral)) this.invalidStringToken(escStart, \"Invalid Unicode escape\");\n            word += $d184995ea4e545a3$var$codePointToString(esc);\n            chunkStart = this.pos;\n        } else break;\n        first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos);\n};\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n$d184995ea4e545a3$var$pp.readWord = function() {\n    var word = this.readWord1();\n    var type = $d184995ea4e545a3$export$b54c7ea7aabba5c8.name;\n    if (this.keywords.test(word)) type = $d184995ea4e545a3$export$d53f8326294b31d8[word];\n    return this.finishToken(type, word);\n};\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\nvar $d184995ea4e545a3$export$83d89fbfd8236492 = \"8.10.0\";\n$d184995ea4e545a3$export$7acfa6ed01010e37.acorn = {\n    Parser: $d184995ea4e545a3$export$7acfa6ed01010e37,\n    version: $d184995ea4e545a3$export$83d89fbfd8236492,\n    defaultOptions: $d184995ea4e545a3$export$ba43bf67f3d48107,\n    Position: $d184995ea4e545a3$export$13807d9ee5a34a42,\n    SourceLocation: $d184995ea4e545a3$export$7387db7caf96fcdb,\n    getLineInfo: $d184995ea4e545a3$export$7af82191547c5ff7,\n    Node: $d184995ea4e545a3$export$85c928794f8d04d4,\n    TokenType: $d184995ea4e545a3$export$f435f793048e7a0f,\n    tokTypes: $d184995ea4e545a3$export$b54c7ea7aabba5c8,\n    keywordTypes: $d184995ea4e545a3$export$d53f8326294b31d8,\n    TokContext: $d184995ea4e545a3$export$68e7b4c4d99215d9,\n    tokContexts: $d184995ea4e545a3$export$2b5f701edfbd6f00,\n    isIdentifierChar: $d184995ea4e545a3$export$332f4d7bee38db93,\n    isIdentifierStart: $d184995ea4e545a3$export$56b48cc5d7560ffb,\n    Token: $d184995ea4e545a3$export$50792b0e93539fde,\n    isNewLine: $d184995ea4e545a3$export$2c19a3e3b4008fff,\n    lineBreak: $d184995ea4e545a3$export$a1aa2dd4ad0d3f6,\n    lineBreakG: $d184995ea4e545a3$export$866e20207bbc41f2,\n    nonASCIIwhitespace: $d184995ea4e545a3$export$268622f0f1cbc82b\n};\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\nfunction $d184995ea4e545a3$export$98e6a39c04603d36(input, options) {\n    return $d184995ea4e545a3$export$7acfa6ed01010e37.parse(input, options);\n}\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\nfunction $d184995ea4e545a3$export$61f24eb03dd7ce92(input, pos, options) {\n    return $d184995ea4e545a3$export$7acfa6ed01010e37.parseExpressionAt(input, pos, options);\n}\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\nfunction $d184995ea4e545a3$export$5f8c09e3ae6f64e1(input, options) {\n    return $d184995ea4e545a3$export$7acfa6ed01010e37.tokenizer(input, options);\n}\n\n\n// AST walker module for Mozilla Parser API compatible trees\n// A simple walk is one where you simply specify callbacks to be\n// called on specific nodes. The last two arguments are optional. A\n// simple use would be\n//\n//     walk.simple(myTree, {\n//         Expression: function(node) { ... }\n//     });\n//\n// to do something with all expressions. All Parser API node types\n// can be used to identify node types, as well as Expression and\n// Statement, which denote categories of nodes.\n//\n// The base argument can be used to pass a custom (recursive)\n// walker, and state can be used to give this walked an initial\n// state.\nfunction $e07c7226482a0f6f$export$52257e56c24a8923(node, visitors, baseVisitor, state, override) {\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    (function c(node, st, override) {\n        var type = override || node.type, found = visitors[type];\n        baseVisitor[type](node, st, c);\n        if (found) found(node, st);\n    })(node, state, override);\n}\n// An ancestor walk keeps an array of ancestor nodes (including the\n// current node) and passes them to the callback as third parameter\n// (and also as state parameter when no other state is present).\nfunction $e07c7226482a0f6f$export$c583dc6254350d98(node, visitors, baseVisitor, state, override) {\n    var ancestors = [];\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    (function c(node, st, override) {\n        var type = override || node.type, found = visitors[type];\n        var isNew = node !== ancestors[ancestors.length - 1];\n        if (isNew) ancestors.push(node);\n        baseVisitor[type](node, st, c);\n        if (found) found(node, st || ancestors, ancestors);\n        if (isNew) ancestors.pop();\n    })(node, state, override);\n}\n// A recursive walk is one where your functions override the default\n// walkers. They can modify and replace the state parameter that's\n// threaded through the walk, and can opt how and whether to walk\n// their child nodes (by calling their third argument on these\n// nodes).\nfunction $e07c7226482a0f6f$export$43a194da3ac23518(node, state, funcs, baseVisitor, override) {\n    var visitor = funcs ? $e07c7226482a0f6f$export$dd44f18ab656f3bb(funcs, baseVisitor || undefined) : baseVisitor;\n    (function c(node, st, override) {\n        visitor[override || node.type](node, st, c);\n    })(node, state, override);\n}\nfunction $e07c7226482a0f6f$var$makeTest(test) {\n    if (typeof test === \"string\") return function(type) {\n        return type === test;\n    };\n    else if (!test) return function() {\n        return true;\n    };\n    else return test;\n}\nvar $e07c7226482a0f6f$var$Found = function Found(node, state) {\n    this.node = node;\n    this.state = state;\n};\n// A full walk triggers the callback on each node\nfunction $e07c7226482a0f6f$export$2adb16ac204af30e(node, callback, baseVisitor, state, override) {\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    var last;\n    (function c(node, st, override) {\n        var type = override || node.type;\n        baseVisitor[type](node, st, c);\n        if (last !== node) {\n            callback(node, st, type);\n            last = node;\n        }\n    })(node, state, override);\n}\n// An fullAncestor walk is like an ancestor walk, but triggers\n// the callback on each node\nfunction $e07c7226482a0f6f$export$75968ca8727c9339(node, callback, baseVisitor, state) {\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    var ancestors = [], last;\n    (function c(node, st, override) {\n        var type = override || node.type;\n        var isNew = node !== ancestors[ancestors.length - 1];\n        if (isNew) ancestors.push(node);\n        baseVisitor[type](node, st, c);\n        if (last !== node) {\n            callback(node, st || ancestors, ancestors, type);\n            last = node;\n        }\n        if (isNew) ancestors.pop();\n    })(node, state);\n}\n// Find a node with a given start, end, and type (all are optional,\n// null can be used as wildcard). Returns a {node, state} object, or\n// undefined when it doesn't find a matching node.\nfunction $e07c7226482a0f6f$export$a4ea95adf60c92fc(node, start, end, test, baseVisitor, state) {\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    test = $e07c7226482a0f6f$var$makeTest(test);\n    try {\n        (function c(node, st, override) {\n            var type = override || node.type;\n            if ((start == null || node.start <= start) && (end == null || node.end >= end)) baseVisitor[type](node, st, c);\n            if ((start == null || node.start === start) && (end == null || node.end === end) && test(type, node)) throw new $e07c7226482a0f6f$var$Found(node, st);\n        })(node, state);\n    } catch (e) {\n        if (e instanceof $e07c7226482a0f6f$var$Found) return e;\n        throw e;\n    }\n}\n// Find the innermost node of a given type that contains the given\n// position. Interface similar to findNodeAt.\nfunction $e07c7226482a0f6f$export$9de3a49fb5a46b5c(node, pos, test, baseVisitor, state) {\n    test = $e07c7226482a0f6f$var$makeTest(test);\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    try {\n        (function c(node, st, override) {\n            var type = override || node.type;\n            if (node.start > pos || node.end < pos) return;\n            baseVisitor[type](node, st, c);\n            if (test(type, node)) throw new $e07c7226482a0f6f$var$Found(node, st);\n        })(node, state);\n    } catch (e) {\n        if (e instanceof $e07c7226482a0f6f$var$Found) return e;\n        throw e;\n    }\n}\n// Find the outermost matching node after a given position.\nfunction $e07c7226482a0f6f$export$992c4fd9030c736c(node, pos, test, baseVisitor, state) {\n    test = $e07c7226482a0f6f$var$makeTest(test);\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    try {\n        (function c(node, st, override) {\n            if (node.end < pos) return;\n            var type = override || node.type;\n            if (node.start >= pos && test(type, node)) throw new $e07c7226482a0f6f$var$Found(node, st);\n            baseVisitor[type](node, st, c);\n        })(node, state);\n    } catch (e) {\n        if (e instanceof $e07c7226482a0f6f$var$Found) return e;\n        throw e;\n    }\n}\n// Find the outermost matching node before a given position.\nfunction $e07c7226482a0f6f$export$9920910cf01da478(node, pos, test, baseVisitor, state) {\n    test = $e07c7226482a0f6f$var$makeTest(test);\n    if (!baseVisitor) baseVisitor = $e07c7226482a0f6f$export$e2253033e6e1df16;\n    var max;\n    (function c(node, st, override) {\n        if (node.start > pos) return;\n        var type = override || node.type;\n        if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node)) max = new $e07c7226482a0f6f$var$Found(node, st);\n        baseVisitor[type](node, st, c);\n    })(node, state);\n    return max;\n}\n// Used to create a custom walker. Will fill in all missing node\n// type properties with the defaults.\nfunction $e07c7226482a0f6f$export$dd44f18ab656f3bb(funcs, baseVisitor) {\n    var visitor = Object.create(baseVisitor || $e07c7226482a0f6f$export$e2253033e6e1df16);\n    for(var type in funcs)visitor[type] = funcs[type];\n    return visitor;\n}\nfunction $e07c7226482a0f6f$var$skipThrough(node, st, c) {\n    c(node, st);\n}\nfunction $e07c7226482a0f6f$var$ignore(_node, _st, _c) {}\n// Node walkers.\nvar $e07c7226482a0f6f$export$e2253033e6e1df16 = {};\n$e07c7226482a0f6f$export$e2253033e6e1df16.Program = $e07c7226482a0f6f$export$e2253033e6e1df16.BlockStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.StaticBlock = function(node, st, c) {\n    for(var i = 0, list = node.body; i < list.length; i += 1){\n        var stmt = list[i];\n        c(stmt, st, \"Statement\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.Statement = $e07c7226482a0f6f$var$skipThrough;\n$e07c7226482a0f6f$export$e2253033e6e1df16.EmptyStatement = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.ExpressionStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.ParenthesizedExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.ChainExpression = function(node, st, c) {\n    return c(node.expression, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.IfStatement = function(node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Statement\");\n    if (node.alternate) c(node.alternate, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.LabeledStatement = function(node, st, c) {\n    return c(node.body, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.BreakStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.ContinueStatement = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.WithStatement = function(node, st, c) {\n    c(node.object, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.SwitchStatement = function(node, st, c) {\n    c(node.discriminant, st, \"Expression\");\n    for(var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1){\n        var cs = list$1[i$1];\n        if (cs.test) c(cs.test, st, \"Expression\");\n        for(var i = 0, list = cs.consequent; i < list.length; i += 1){\n            var cons = list[i];\n            c(cons, st, \"Statement\");\n        }\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.SwitchCase = function(node, st, c) {\n    if (node.test) c(node.test, st, \"Expression\");\n    for(var i = 0, list = node.consequent; i < list.length; i += 1){\n        var cons = list[i];\n        c(cons, st, \"Statement\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ReturnStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.YieldExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.AwaitExpression = function(node, st, c) {\n    if (node.argument) c(node.argument, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ThrowStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.SpreadElement = function(node, st, c) {\n    return c(node.argument, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.TryStatement = function(node, st, c) {\n    c(node.block, st, \"Statement\");\n    if (node.handler) c(node.handler, st);\n    if (node.finalizer) c(node.finalizer, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.CatchClause = function(node, st, c) {\n    if (node.param) c(node.param, st, \"Pattern\");\n    c(node.body, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.WhileStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.DoWhileStatement = function(node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ForStatement = function(node, st, c) {\n    if (node.init) c(node.init, st, \"ForInit\");\n    if (node.test) c(node.test, st, \"Expression\");\n    if (node.update) c(node.update, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ForInStatement = $e07c7226482a0f6f$export$e2253033e6e1df16.ForOfStatement = function(node, st, c) {\n    c(node.left, st, \"ForInit\");\n    c(node.right, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ForInit = function(node, st, c) {\n    if (node.type === \"VariableDeclaration\") c(node, st);\n    else c(node, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.DebuggerStatement = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.FunctionDeclaration = function(node, st, c) {\n    return c(node, st, \"Function\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.VariableDeclaration = function(node, st, c) {\n    for(var i = 0, list = node.declarations; i < list.length; i += 1){\n        var decl = list[i];\n        c(decl, st);\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.VariableDeclarator = function(node, st, c) {\n    c(node.id, st, \"Pattern\");\n    if (node.init) c(node.init, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.Function = function(node, st, c) {\n    if (node.id) c(node.id, st, \"Pattern\");\n    for(var i = 0, list = node.params; i < list.length; i += 1){\n        var param = list[i];\n        c(param, st, \"Pattern\");\n    }\n    c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.Pattern = function(node, st, c) {\n    if (node.type === \"Identifier\") c(node, st, \"VariablePattern\");\n    else if (node.type === \"MemberExpression\") c(node, st, \"MemberPattern\");\n    else c(node, st);\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.VariablePattern = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.MemberPattern = $e07c7226482a0f6f$var$skipThrough;\n$e07c7226482a0f6f$export$e2253033e6e1df16.RestElement = function(node, st, c) {\n    return c(node.argument, st, \"Pattern\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ArrayPattern = function(node, st, c) {\n    for(var i = 0, list = node.elements; i < list.length; i += 1){\n        var elt = list[i];\n        if (elt) c(elt, st, \"Pattern\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ObjectPattern = function(node, st, c) {\n    for(var i = 0, list = node.properties; i < list.length; i += 1){\n        var prop = list[i];\n        if (prop.type === \"Property\") {\n            if (prop.computed) c(prop.key, st, \"Expression\");\n            c(prop.value, st, \"Pattern\");\n        } else if (prop.type === \"RestElement\") c(prop.argument, st, \"Pattern\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.Expression = $e07c7226482a0f6f$var$skipThrough;\n$e07c7226482a0f6f$export$e2253033e6e1df16.ThisExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.Super = $e07c7226482a0f6f$export$e2253033e6e1df16.MetaProperty = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.ArrayExpression = function(node, st, c) {\n    for(var i = 0, list = node.elements; i < list.length; i += 1){\n        var elt = list[i];\n        if (elt) c(elt, st, \"Expression\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ObjectExpression = function(node, st, c) {\n    for(var i = 0, list = node.properties; i < list.length; i += 1){\n        var prop = list[i];\n        c(prop, st);\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.FunctionExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.ArrowFunctionExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.FunctionDeclaration;\n$e07c7226482a0f6f$export$e2253033e6e1df16.SequenceExpression = function(node, st, c) {\n    for(var i = 0, list = node.expressions; i < list.length; i += 1){\n        var expr = list[i];\n        c(expr, st, \"Expression\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.TemplateLiteral = function(node, st, c) {\n    for(var i = 0, list = node.quasis; i < list.length; i += 1){\n        var quasi = list[i];\n        c(quasi, st);\n    }\n    for(var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1){\n        var expr = list$1[i$1];\n        c(expr, st, \"Expression\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.TemplateElement = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.UnaryExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.UpdateExpression = function(node, st, c) {\n    c(node.argument, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.BinaryExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.LogicalExpression = function(node, st, c) {\n    c(node.left, st, \"Expression\");\n    c(node.right, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.AssignmentExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.AssignmentPattern = function(node, st, c) {\n    c(node.left, st, \"Pattern\");\n    c(node.right, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ConditionalExpression = function(node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Expression\");\n    c(node.alternate, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.NewExpression = $e07c7226482a0f6f$export$e2253033e6e1df16.CallExpression = function(node, st, c) {\n    c(node.callee, st, \"Expression\");\n    if (node.arguments) for(var i = 0, list = node.arguments; i < list.length; i += 1){\n        var arg = list[i];\n        c(arg, st, \"Expression\");\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.MemberExpression = function(node, st, c) {\n    c(node.object, st, \"Expression\");\n    if (node.computed) c(node.property, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ExportNamedDeclaration = $e07c7226482a0f6f$export$e2253033e6e1df16.ExportDefaultDeclaration = function(node, st, c) {\n    if (node.declaration) c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\");\n    if (node.source) c(node.source, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ExportAllDeclaration = function(node, st, c) {\n    if (node.exported) c(node.exported, st);\n    c(node.source, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ImportDeclaration = function(node, st, c) {\n    for(var i = 0, list = node.specifiers; i < list.length; i += 1){\n        var spec = list[i];\n        c(spec, st);\n    }\n    c(node.source, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ImportExpression = function(node, st, c) {\n    c(node.source, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ImportSpecifier = $e07c7226482a0f6f$export$e2253033e6e1df16.ImportDefaultSpecifier = $e07c7226482a0f6f$export$e2253033e6e1df16.ImportNamespaceSpecifier = $e07c7226482a0f6f$export$e2253033e6e1df16.Identifier = $e07c7226482a0f6f$export$e2253033e6e1df16.PrivateIdentifier = $e07c7226482a0f6f$export$e2253033e6e1df16.Literal = $e07c7226482a0f6f$var$ignore;\n$e07c7226482a0f6f$export$e2253033e6e1df16.TaggedTemplateExpression = function(node, st, c) {\n    c(node.tag, st, \"Expression\");\n    c(node.quasi, st, \"Expression\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ClassDeclaration = $e07c7226482a0f6f$export$e2253033e6e1df16.ClassExpression = function(node, st, c) {\n    return c(node, st, \"Class\");\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.Class = function(node, st, c) {\n    if (node.id) c(node.id, st, \"Pattern\");\n    if (node.superClass) c(node.superClass, st, \"Expression\");\n    c(node.body, st);\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.ClassBody = function(node, st, c) {\n    for(var i = 0, list = node.body; i < list.length; i += 1){\n        var elt = list[i];\n        c(elt, st);\n    }\n};\n$e07c7226482a0f6f$export$e2253033e6e1df16.MethodDefinition = $e07c7226482a0f6f$export$e2253033e6e1df16.PropertyDefinition = $e07c7226482a0f6f$export$e2253033e6e1df16.Property = function(node, st, c) {\n    if (node.computed) c(node.key, st, \"Expression\");\n    if (node.value) c(node.value, st, \"Expression\");\n};\n\n\nvar $0122e47586e40ba6$exports = {};\n\n$0122e47586e40ba6$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"gHDI2\"), import.meta.url).toString();\n\n\nclass $e5c6d2bd2e095e46$export$2e2bcd8739ae039 {\n    pageCode = {\n        pageHTML: [],\n        displayHTML: [],\n        pageJS: [],\n        displayJS: []\n    };\n    constructor(generator){\n        this.generator = generator;\n    }\n    getBuildList = ()=>{\n        const listElement = document.querySelector(\"#build-list\");\n        const entryElements = listElement.querySelectorAll(\"[data-component]\");\n        return Array.from(entryElements).map((element, index)=>({\n                id: index,\n                name: element.getAttribute(\"data-component\")\n            }));\n    };\n    setPreviewWindowHTML = async ()=>{\n        if (this.previewWindowHTML) return;\n        this.previewWindowHTML = await this.generator.fetchCode(new URL($0122e47586e40ba6$exports));\n    };\n    registerClosePreview = ()=>document.querySelector(\"#close-preview-button\").addEventListener(\"click\", ()=>{\n            (0, $6a5576a59b27a0c5$export$299555b746278f2e)(false);\n            document.querySelector(\"#preview-panel-window\")?.remove();\n            this.pageCode = {\n                pageHTML: [],\n                displayHTML: [],\n                pageJS: [],\n                displayJS: []\n            };\n        });\n    registerDownload = ()=>{\n        document.querySelector(\"#download-page-button\").addEventListener(\"click\", ()=>{\n            const file = new File([\n                this.frame.contentDocument.documentElement.innerHTML\n            ], \"page.html\", {\n                type: \"text/plain\"\n            });\n            const url = URL.createObjectURL(file);\n            const link = new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"a\").setAttributes({\n                href: url,\n                download: file.name\n            }).appendToSelector(\"body\").get();\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(url);\n        });\n    };\n    registerListeners = async ()=>{\n        this.registerPreview();\n    };\n    registerPreview = ()=>document.querySelector(\"#preview-build\").addEventListener(\"click\", ()=>{\n            (async ()=>this.previewBuild())();\n        });\n    registerResize = ()=>document.querySelectorAll(\"#preview-panel .responsive-button\").forEach((button)=>{\n            button.addEventListener(\"click\", (event)=>(0, $6ae7ca1574e23880$export$60494ee081c59977)(event, button));\n        });\n    registerLoadedListeners = ()=>{\n        this.registerResize();\n        this.registerClosePreview();\n        this.registerDownload();\n    };\n    getHTMLForComponent = (name, id = \"\")=>{\n        const html = {\n            pageHTML: \"\",\n            displayHTML: \"\"\n        };\n        const component = this.generator.componentCode[name];\n        if (!component.html.hasHTML) return html;\n        const replacedCode = this.generator.replaceProps(component.html.original, component.html.props, id);\n        html.pageHTML = replacedCode;\n        html.displayHTML = this.generator.getHTMLDisplayCode(replacedCode);\n        return html;\n    };\n    getJSForComponent = (name, id = \"\")=>{\n        const js = {\n            pageJS: \"\",\n            displayJS: \"\"\n        };\n        const component = this.generator.componentCode[name];\n        if (!component.js.hasJS) return js;\n        let replacedCode = this.generator.replaceProps(component.js.original, component.js.props, id);\n        const declarations = [];\n        const identifiers = [];\n        $e07c7226482a0f6f$export$2adb16ac204af30e($d184995ea4e545a3$export$98e6a39c04603d36(replacedCode, {\n            ecmaVersion: \"latest\"\n        }), (node)=>{\n            if (node.type === \"Identifier\") identifiers.push(node);\n            if (node.type === \"VariableDeclaration\") declarations.push(node.declarations[0].id.name);\n        });\n        replacedCode = identifiers.reduce((accumulator, currentValue, index)=>{\n            const startPosition = index === 0 ? 0 : identifiers[index - 1].end;\n            const toEnd = index === identifiers.length - 1;\n            const wasDeclared = declarations.indexOf(currentValue.name) > -1;\n            accumulator += replacedCode.substring(startPosition, currentValue.end);\n            if (wasDeclared) accumulator += id;\n            if (toEnd) accumulator += replacedCode.substring(currentValue.end);\n            return accumulator;\n        }, \"\");\n        js.pageJS = replacedCode;\n        js.displayJS = replacedCode;\n        return js;\n    };\n    constructDocument = ()=>{\n        (0, $6a5576a59b27a0c5$export$c8a8987d4410bf2d)(this.previewWindowHTML, true);\n        this.frame = document.querySelector(\"#preview-panel-frame\");\n        let doc = document.implementation.createHTMLDocument(\"Preview Page\");\n        new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"div\", doc).setContent(this.pageCode.pageHTML.join(\"\")).append(\"body\");\n        const links = document.querySelectorAll(\"link\");\n        Array.from(links).forEach((link)=>new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"link\", doc).setAttributes({\n                href: link.href,\n                rel: link.rel\n            }).append(\"head\"));\n        const styles = document.querySelectorAll(\"style\");\n        Array.from(styles).forEach((style)=>new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"style\", doc).setContent(style.innerHTML).append(\"head\"));\n        const styleString = `\n        .font-sans {\n          font-family: Inter, Nunito, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n        }\n\n        .font-serif {\n          font-family: Montserrat, Georgia, Cambria, \"Times New Roman\", Times, serif;\n        }\n      `;\n        new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"style\", doc).setContent(styleString).append(\"head\");\n        new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"meta\", doc).setAttributes({\n            name: \"viewport\",\n            content: \"width=device-width, initial-scale=1.0\"\n        }).appendToSelector(\"head\");\n        let dest = this.frame.contentDocument;\n        let newNode = dest.importNode(doc.documentElement, true);\n        dest.replaceChild(newNode, dest.documentElement);\n        this.frame.contentDocument.querySelectorAll(\"script\").forEach((el)=>el.remove());\n        this.pageCode.pageJS.forEach((jsString)=>{\n            new (0, $6a5576a59b27a0c5$export$fa842e381e70fc1a)(\"script\", doc).setContent(jsString).appendToElement(this.frame.contentDocument.body);\n        });\n    };\n    previewBuild = async ()=>{\n        document.querySelector(\"#preview-panel\")?.remove();\n        await this.setPreviewWindowHTML();\n        const list = this.getBuildList();\n        const componentNames = list.map((listItem)=>listItem.name);\n        (0, $6a5576a59b27a0c5$export$299555b746278f2e)();\n        componentNames.forEach((componentName)=>{\n            const id = (0, $6a5576a59b27a0c5$export$e641f6957555d732)(5);\n            const html = this.getHTMLForComponent(componentName, id);\n            this.pageCode.pageHTML.push(html.pageHTML);\n            this.pageCode.displayHTML.push(html.displayHTML);\n            const js = this.getJSForComponent(componentName, id);\n            this.pageCode.pageJS.push(js.pageJS);\n            this.pageCode.displayJS.push(js.displayJS);\n        });\n        this.constructDocument();\n        this.registerLoadedListeners();\n    };\n}\n\n\nconst $54b47fc030b7b21e$var$generator = new (0, $4687e4ef5a4066d1$export$2e2bcd8739ae039)();\nconst $54b47fc030b7b21e$var$pageBuilder = new (0, $e5c6d2bd2e095e46$export$2e2bcd8739ae039)($54b47fc030b7b21e$var$generator);\nPromise.all([\n    $54b47fc030b7b21e$var$generator.createSections(),\n    $54b47fc030b7b21e$var$generator.createComponents()\n]).then(async ()=>await $54b47fc030b7b21e$var$generator.addElementsToDom()).then(async ()=>(0, $6ae7ca1574e23880$export$40a4ed63e5cb7043)($54b47fc030b7b21e$var$generator)).then(async ()=>(0, $d775a96c091f473d$export$472c574c6324eb38)()).then(async ()=>await (0, $9232f11285a88cf6$export$a60ec1be5561a385)()).then(async ()=>await (0, $56f957b869ed1078$export$df183c22db917802)($54b47fc030b7b21e$var$generator)).then(async ()=>await $54b47fc030b7b21e$var$pageBuilder.registerListeners()).then(async ()=>await (0, $795b7bc1569fb947$export$2e2bcd8739ae039)());\n\n\n//# sourceMappingURL=index.5464ba48.js.map\n","// import { addElementsToDom, createComponents, createSections } from \"./createElements\";\nimport { addEventListeners } from './addEventListeners';\nimport { updateResponsiveClasses } from './updateResponsiveClasses';\nimport { addContainerQueries } from './addContainerQueries';\nimport { loadSiteJS } from './loadSiteJS';\nimport loadFonts from './loadFonts';\nimport ComponentGenerator from './componentGenerator';\nimport PageBuilder from './pageBuilder';\n\nconst generator = new ComponentGenerator();\nconst pageBuilder = new PageBuilder(generator);\n\nPromise.all([generator.createSections(), generator.createComponents()])\n  .then(async () => await generator.addElementsToDom())\n  .then(async () => addEventListeners(generator))\n  .then(async () => updateResponsiveClasses())\n  .then(async () => await addContainerQueries())\n  .then(async () => await loadSiteJS(generator))\n  .then(async () => await pageBuilder.registerListeners())\n  .then(async () => await loadFonts());\n","import hljs from './vendor/highlight.min.js';\n\nlet generator;\n\nconst toggleCodeSection = () => {\n  document.querySelectorAll('[id$=\"-show-code\"]').forEach((element) => {\n    element.addEventListener('click', async () => {\n      const componentNameWithType = element\n        .getAttribute('id')\n        .replace('-show-code', '');\n      const exploded = componentNameWithType.split('-');\n      const componentType = exploded.pop();\n      const componentName = exploded.join('');\n      const codeElement = document.querySelector(\n        '#' + componentNameWithType + '-code',\n      );\n\n      codeElement.innerHTML =\n        generator.componentCode[componentName][componentType].display;\n\n      hljs.highlightElement(codeElement);\n\n      const pre = codeElement.parentElement;\n      const visible = pre.classList.contains('block');\n\n      pre.classList.remove(visible ? 'block' : 'hidden');\n      pre.classList.add(visible ? 'hidden' : 'block');\n    });\n  });\n};\n\nconst toggleSection = () => {\n  document.querySelectorAll('[id$=\"-section-header\"]').forEach((element) => {\n    element.addEventListener('click', async () => {\n      toggleSectionByElement(element);\n    });\n  });\n};\n\nconst sizes = {\n  mobile: {\n    width: 375,\n    height: 667,\n  },\n  tablet: {\n    width: 768,\n    height: 1024,\n  },\n  desktop: {\n    width: 1366,\n    height: 768,\n  },\n};\n\nconst resetScreenSize = (element) => {\n  element.style.width = '';\n  element.style.height = '';\n  element.style.transform = '';\n  element.style.marginTop = '';\n  element.style.marginBottom = '';\n  element.style.resize = '';\n  element.style.marginLeft = '';\n  element.style.marginRight = '';\n};\n\nexport const resizeScreenSize = (screen, element, ratio = 0.8) => {\n  const wrapper = element.closest('.wrapper');\n\n  if (Object.keys(sizes).indexOf(screen) === -1) {\n    resetScreenSize(element);\n\n    element.removeAttribute('data-exact-size');\n\n    if (wrapper) {\n      resetScreenSize(wrapper);\n    }\n\n    return;\n  }\n\n  let rotate;\n\n  if (!element.hasAttribute('data-exact-size')) {\n    element.setAttribute('data-exact-size', screen + '-reset');\n  }\n\n  const attribute = element.getAttribute('data-exact-size');\n\n  if (attribute.indexOf('-reset') > -1 || attribute.indexOf('-rotated') > -1) {\n    element.setAttribute('data-exact-size', screen);\n    rotate = false;\n  } else {\n    element.setAttribute('data-exact-size', screen + '-rotated');\n    rotate = true;\n  }\n\n  resetScreenSize(element);\n\n  const component = element.closest('.component-container');\n  const componentWidth = component.getBoundingClientRect().width;\n  const targetScreenSize = sizes[screen];\n\n  element.style.width =\n    (rotate ? targetScreenSize.height : targetScreenSize.width) + 'px';\n  element.style.height =\n    (rotate ? targetScreenSize.width : targetScreenSize.height) + 'px';\n\n  let frameDimensions = element.getBoundingClientRect();\n  let frameHeight = frameDimensions.height;\n  const frameWidth = frameDimensions.width;\n  const windowHeight = window.innerHeight;\n  const currentScale = frameHeight / windowHeight;\n  let scale = ratio / currentScale;\n  const scaledWidth = frameWidth * scale;\n\n  if (scaledWidth > componentWidth) {\n    scale = componentWidth / frameWidth;\n  }\n\n  element.style.transform = 'scale(' + Math.min(scale, 1).toFixed(2) + ')';\n  element.style.resize = 'none';\n\n  if (wrapper) {\n    element.closest('.wrapper').style.height =\n      element.getBoundingClientRect().height.toString() + 'px';\n    element.closest('.wrapper').style.width =\n      element.getBoundingClientRect().width.toString() + 'px';\n\n    return;\n  }\n\n  frameHeight = element.getBoundingClientRect().height;\n  const componentHeight = component.getBoundingClientRect().height;\n\n  const desiredYMargin = 20;\n  const heightDifference = componentHeight - frameHeight;\n  if (heightDifference > desiredYMargin) {\n    const marginShift = heightDifference / 2;\n    element.style.marginTop = '-' + marginShift + 'px';\n    element.style.marginBottom = '-' + marginShift + 'px';\n  }\n\n  element.style.marginLeft = 'auto';\n  element.style.marginRight = 'auto';\n};\n\nexport const handleResizeEvent = (event, button) => {\n  let buttonElement = event.target;\n\n  if (!event.target.hasAttribute('data-button-id')) {\n    buttonElement = event.target.closest('[data-button-id]');\n  }\n\n  const dataButtonId = buttonElement.getAttribute('data-button-id');\n  const componentElement = button.closest('.component');\n  const componentName = componentElement.getAttribute('id');\n  const frameElement = componentElement.querySelector(\n    '#' + componentName + '-frame',\n  );\n  const targetScreenSizeName = dataButtonId.replace(componentName + '-', '');\n\n  resizeScreenSize(targetScreenSizeName, frameElement);\n};\n\nconst addResizeListener = () => {\n  document.querySelectorAll('.responsive-button').forEach((button) => {\n    button.addEventListener('click', (event) =>\n      handleResizeEvent(event, button),\n    );\n  });\n};\n\nconst toggleAllSections = () => {\n  document\n    .querySelector('#toggle-sections-button')\n    .addEventListener('click', () => {\n      const headers = Array.from(\n        document.querySelectorAll('[id$=\"-section-header\"]'),\n      );\n      const closedSections = headers.filter((header) => {\n        const section = document.querySelector(\n          '#' + header.getAttribute('id').replace('-section-header', ''),\n        );\n        return section.classList.contains('hidden');\n      }).length;\n\n      headers.forEach((element) => {\n        toggleSectionByElement(element, closedSections > 0);\n      });\n    });\n};\n\nconst toggleSectionByElement = (element, value = null) => {\n  const section = document.querySelector(\n    '#' + element.getAttribute('id').replace('-section-header', ''),\n  );\n  const hidden = section.classList.contains('hidden');\n\n  if (value === null || value === undefined) {\n    section.classList.remove(hidden ? 'hidden' : 'block');\n    section.classList.add(hidden ? 'block' : 'hidden');\n\n    return;\n  }\n\n  if (value && hidden) {\n    section.classList.remove('hidden');\n  }\n\n  if (value) {\n    return;\n  }\n\n  section.classList.add('hidden');\n};\n\nexport const addEventListeners = (currentGenerator) => {\n  generator = currentGenerator;\n  toggleSection();\n  toggleAllSections();\n  toggleCodeSection();\n  addResizeListener();\n};\n","/*!\n  Highlight.js v11.8.0 (git: 65687a907b)\n  (c) 2006-2023 undefined and other contributors\n  License: BSD-3-Clause\n */\nvar hljs=function(){\"use strict\";function e(n){\nreturn n instanceof Map?n.clear=n.delete=n.set=()=>{\nthrow Error(\"map is read-only\")}:n instanceof Set&&(n.add=n.clear=n.delete=()=>{\nthrow Error(\"set is read-only\")\n}),Object.freeze(n),Object.getOwnPropertyNames(n).forEach((t=>{\nconst a=n[t],i=typeof a;\"object\"!==i&&\"function\"!==i||Object.isFrozen(a)||e(a)\n})),n}class n{constructor(e){\nvoid 0===e.data&&(e.data={}),this.data=e.data,this.isMatchIgnored=!1}\nignoreMatch(){this.isMatchIgnored=!0}}function t(e){\nreturn e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\")\n}function a(e,...n){const t=Object.create(null);for(const n in e)t[n]=e[n]\n;return n.forEach((e=>{for(const n in e)t[n]=e[n]})),t}const i=e=>!!e.scope\n;class r{constructor(e,n){\nthis.buffer=\"\",this.classPrefix=n.classPrefix,e.walk(this)}addText(e){\nthis.buffer+=t(e)}openNode(e){if(!i(e))return;const n=((e,{prefix:n})=>{\nif(e.startsWith(\"language:\"))return e.replace(\"language:\",\"language-\")\n;if(e.includes(\".\")){const t=e.split(\".\")\n;return[`${n}${t.shift()}`,...t.map(((e,n)=>`${e}${\"_\".repeat(n+1)}`))].join(\" \")\n}return`${n}${e}`})(e.scope,{prefix:this.classPrefix});this.span(n)}\ncloseNode(e){i(e)&&(this.buffer+=\"</span>\")}value(){return this.buffer}span(e){\nthis.buffer+=`<span class=\"${e}\">`}}const s=(e={})=>{const n={children:[]}\n;return Object.assign(n,e),n};class o{constructor(){\nthis.rootNode=s(),this.stack=[this.rootNode]}get top(){\nreturn this.stack[this.stack.length-1]}get root(){return this.rootNode}add(e){\nthis.top.children.push(e)}openNode(e){const n=s({scope:e})\n;this.add(n),this.stack.push(n)}closeNode(){\nif(this.stack.length>1)return this.stack.pop()}closeAllNodes(){\nfor(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}\nwalk(e){return this.constructor._walk(e,this.rootNode)}static _walk(e,n){\nreturn\"string\"==typeof n?e.addText(n):n.children&&(e.openNode(n),\nn.children.forEach((n=>this._walk(e,n))),e.closeNode(n)),e}static _collapse(e){\n\"string\"!=typeof e&&e.children&&(e.children.every((e=>\"string\"==typeof e))?e.children=[e.children.join(\"\")]:e.children.forEach((e=>{\no._collapse(e)})))}}class l extends o{constructor(e){super(),this.options=e}\naddText(e){\"\"!==e&&this.add(e)}startScope(e){this.openNode(e)}endScope(){\nthis.closeNode()}__addSublanguage(e,n){const t=e.root\n;n&&(t.scope=\"language:\"+n),this.add(t)}toHTML(){\nreturn new r(this,this.options).value()}finalize(){\nreturn this.closeAllNodes(),!0}}function c(e){\nreturn e?\"string\"==typeof e?e:e.source:null}function d(e){return b(\"(?=\",e,\")\")}\nfunction g(e){return b(\"(?:\",e,\")*\")}function u(e){return b(\"(?:\",e,\")?\")}\nfunction b(...e){return e.map((e=>c(e))).join(\"\")}function m(...e){const n=(e=>{\nconst n=e[e.length-1]\n;return\"object\"==typeof n&&n.constructor===Object?(e.splice(e.length-1,1),n):{}\n})(e);return\"(\"+(n.capture?\"\":\"?:\")+e.map((e=>c(e))).join(\"|\")+\")\"}\nfunction p(e){return RegExp(e.toString()+\"|\").exec(\"\").length-1}\nconst _=/\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./\n;function h(e,{joinWith:n}){let t=0;return e.map((e=>{t+=1;const n=t\n;let a=c(e),i=\"\";for(;a.length>0;){const e=_.exec(a);if(!e){i+=a;break}\ni+=a.substring(0,e.index),\na=a.substring(e.index+e[0].length),\"\\\\\"===e[0][0]&&e[1]?i+=\"\\\\\"+(Number(e[1])+n):(i+=e[0],\n\"(\"===e[0]&&t++)}return i})).map((e=>`(${e})`)).join(n)}\nconst f=\"[a-zA-Z]\\\\w*\",E=\"[a-zA-Z_]\\\\w*\",y=\"\\\\b\\\\d+(\\\\.\\\\d+)?\",N=\"(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\",w=\"\\\\b(0b[01]+)\",v={\nbegin:\"\\\\\\\\[\\\\s\\\\S]\",relevance:0},O={scope:\"string\",begin:\"'\",end:\"'\",\nillegal:\"\\\\n\",contains:[v]},k={scope:\"string\",begin:'\"',end:'\"',illegal:\"\\\\n\",\ncontains:[v]},x=(e,n,t={})=>{const i=a({scope:\"comment\",begin:e,end:n,\ncontains:[]},t);i.contains.push({scope:\"doctag\",\nbegin:\"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)\",\nend:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0})\n;const r=m(\"I\",\"a\",\"is\",\"so\",\"us\",\"to\",\"at\",\"if\",\"in\",\"it\",\"on\",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/)\n;return i.contains.push({begin:b(/[ ]+/,\"(\",r,/[.]?[:]?([.][ ]|[ ])/,\"){3}\")}),i\n},M=x(\"//\",\"$\"),S=x(\"/\\\\*\",\"\\\\*/\"),A=x(\"#\",\"$\");var C=Object.freeze({\n__proto__:null,MATCH_NOTHING_RE:/\\b\\B/,IDENT_RE:f,UNDERSCORE_IDENT_RE:E,\nNUMBER_RE:y,C_NUMBER_RE:N,BINARY_NUMBER_RE:w,\nRE_STARTERS_RE:\"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\",\nSHEBANG:(e={})=>{const n=/^#![ ]*\\//\n;return e.binary&&(e.begin=b(n,/.*\\b/,e.binary,/\\b.*/)),a({scope:\"meta\",begin:n,\nend:/$/,relevance:0,\"on:begin\":(e,n)=>{0!==e.index&&n.ignoreMatch()}},e)},\nBACKSLASH_ESCAPE:v,APOS_STRING_MODE:O,QUOTE_STRING_MODE:k,PHRASAL_WORDS_MODE:{\nbegin:/\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n},COMMENT:x,C_LINE_COMMENT_MODE:M,C_BLOCK_COMMENT_MODE:S,HASH_COMMENT_MODE:A,\nNUMBER_MODE:{scope:\"number\",begin:y,relevance:0},C_NUMBER_MODE:{scope:\"number\",\nbegin:N,relevance:0},BINARY_NUMBER_MODE:{scope:\"number\",begin:w,relevance:0},\nREGEXP_MODE:{begin:/(?=\\/[^/\\n]*\\/)/,contains:[{scope:\"regexp\",begin:/\\//,\nend:/\\/[gimuy]*/,illegal:/\\n/,contains:[v,{begin:/\\[/,end:/\\]/,relevance:0,\ncontains:[v]}]}]},TITLE_MODE:{scope:\"title\",begin:f,relevance:0},\nUNDERSCORE_TITLE_MODE:{scope:\"title\",begin:E,relevance:0},METHOD_GUARD:{\nbegin:\"\\\\.\\\\s*\"+E,relevance:0},END_SAME_AS_BEGIN:e=>Object.assign(e,{\n\"on:begin\":(e,n)=>{n.data._beginMatch=e[1]},\"on:end\":(e,n)=>{\nn.data._beginMatch!==e[1]&&n.ignoreMatch()}})});function T(e,n){\n\".\"===e.input[e.index-1]&&n.ignoreMatch()}function R(e,n){\nvoid 0!==e.className&&(e.scope=e.className,delete e.className)}function D(e,n){\nn&&e.beginKeywords&&(e.begin=\"\\\\b(\"+e.beginKeywords.split(\" \").join(\"|\")+\")(?!\\\\.)(?=\\\\b|\\\\s)\",\ne.__beforeBegin=T,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,\nvoid 0===e.relevance&&(e.relevance=0))}function I(e,n){\nArray.isArray(e.illegal)&&(e.illegal=m(...e.illegal))}function L(e,n){\nif(e.match){\nif(e.begin||e.end)throw Error(\"begin & end are not supported with match\")\n;e.begin=e.match,delete e.match}}function B(e,n){\nvoid 0===e.relevance&&(e.relevance=1)}const $=(e,n)=>{if(!e.beforeMatch)return\n;if(e.starts)throw Error(\"beforeMatch cannot be used with starts\")\n;const t=Object.assign({},e);Object.keys(e).forEach((n=>{delete e[n]\n})),e.keywords=t.keywords,e.begin=b(t.beforeMatch,d(t.begin)),e.starts={\nrelevance:0,contains:[Object.assign(t,{endsParent:!0})]\n},e.relevance=0,delete t.beforeMatch\n},z=[\"of\",\"and\",\"for\",\"in\",\"not\",\"or\",\"if\",\"then\",\"parent\",\"list\",\"value\"],F=\"keyword\"\n;function U(e,n,t=F){const a=Object.create(null)\n;return\"string\"==typeof e?i(t,e.split(\" \")):Array.isArray(e)?i(t,e):Object.keys(e).forEach((t=>{\nObject.assign(a,U(e[t],n,t))})),a;function i(e,t){\nn&&(t=t.map((e=>e.toLowerCase()))),t.forEach((n=>{const t=n.split(\"|\")\n;a[t[0]]=[e,j(t[0],t[1])]}))}}function j(e,n){\nreturn n?Number(n):(e=>z.includes(e.toLowerCase()))(e)?0:1}const P={},K=e=>{\nconsole.error(e)},q=(e,...n)=>{console.log(\"WARN: \"+e,...n)},H=(e,n)=>{\nP[`${e}/${n}`]||(console.log(`Deprecated as of ${e}. ${n}`),P[`${e}/${n}`]=!0)\n},G=Error();function Z(e,n,{key:t}){let a=0;const i=e[t],r={},s={}\n;for(let e=1;e<=n.length;e++)s[e+a]=i[e],r[e+a]=!0,a+=p(n[e-1])\n;e[t]=s,e[t]._emit=r,e[t]._multi=!0}function W(e){(e=>{\ne.scope&&\"object\"==typeof e.scope&&null!==e.scope&&(e.beginScope=e.scope,\ndelete e.scope)})(e),\"string\"==typeof e.beginScope&&(e.beginScope={\n_wrap:e.beginScope}),\"string\"==typeof e.endScope&&(e.endScope={_wrap:e.endScope\n}),(e=>{if(Array.isArray(e.begin)){\nif(e.skip||e.excludeBegin||e.returnBegin)throw K(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\"),\nG\n;if(\"object\"!=typeof e.beginScope||null===e.beginScope)throw K(\"beginScope must be object\"),\nG;Z(e,e.begin,{key:\"beginScope\"}),e.begin=h(e.begin,{joinWith:\"\"})}})(e),(e=>{\nif(Array.isArray(e.end)){\nif(e.skip||e.excludeEnd||e.returnEnd)throw K(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\"),\nG\n;if(\"object\"!=typeof e.endScope||null===e.endScope)throw K(\"endScope must be object\"),\nG;Z(e,e.end,{key:\"endScope\"}),e.end=h(e.end,{joinWith:\"\"})}})(e)}function Q(e){\nfunction n(n,t){\nreturn RegExp(c(n),\"m\"+(e.case_insensitive?\"i\":\"\")+(e.unicodeRegex?\"u\":\"\")+(t?\"g\":\"\"))\n}class t{constructor(){\nthis.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}\naddRule(e,n){\nn.position=this.position++,this.matchIndexes[this.matchAt]=n,this.regexes.push([n,e]),\nthis.matchAt+=p(e)+1}compile(){0===this.regexes.length&&(this.exec=()=>null)\n;const e=this.regexes.map((e=>e[1]));this.matcherRe=n(h(e,{joinWith:\"|\"\n}),!0),this.lastIndex=0}exec(e){this.matcherRe.lastIndex=this.lastIndex\n;const n=this.matcherRe.exec(e);if(!n)return null\n;const t=n.findIndex(((e,n)=>n>0&&void 0!==e)),a=this.matchIndexes[t]\n;return n.splice(0,t),Object.assign(n,a)}}class i{constructor(){\nthis.rules=[],this.multiRegexes=[],\nthis.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(e){\nif(this.multiRegexes[e])return this.multiRegexes[e];const n=new t\n;return this.rules.slice(e).forEach((([e,t])=>n.addRule(e,t))),\nn.compile(),this.multiRegexes[e]=n,n}resumingScanAtSamePosition(){\nreturn 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(e,n){\nthis.rules.push([e,n]),\"begin\"===n.type&&this.count++}exec(e){\nconst n=this.getMatcher(this.regexIndex);n.lastIndex=this.lastIndex\n;let t=n.exec(e)\n;if(this.resumingScanAtSamePosition())if(t&&t.index===this.lastIndex);else{\nconst n=this.getMatcher(0);n.lastIndex=this.lastIndex+1,t=n.exec(e)}\nreturn t&&(this.regexIndex+=t.position+1,\nthis.regexIndex===this.count&&this.considerAll()),t}}\nif(e.compilerExtensions||(e.compilerExtensions=[]),\ne.contains&&e.contains.includes(\"self\"))throw Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\")\n;return e.classNameAliases=a(e.classNameAliases||{}),function t(r,s){const o=r\n;if(r.isCompiled)return o\n;[R,L,W,$].forEach((e=>e(r,s))),e.compilerExtensions.forEach((e=>e(r,s))),\nr.__beforeBegin=null,[D,I,B].forEach((e=>e(r,s))),r.isCompiled=!0;let l=null\n;return\"object\"==typeof r.keywords&&r.keywords.$pattern&&(r.keywords=Object.assign({},r.keywords),\nl=r.keywords.$pattern,\ndelete r.keywords.$pattern),l=l||/\\w+/,r.keywords&&(r.keywords=U(r.keywords,e.case_insensitive)),\no.keywordPatternRe=n(l,!0),\ns&&(r.begin||(r.begin=/\\B|\\b/),o.beginRe=n(o.begin),r.end||r.endsWithParent||(r.end=/\\B|\\b/),\nr.end&&(o.endRe=n(o.end)),\no.terminatorEnd=c(o.end)||\"\",r.endsWithParent&&s.terminatorEnd&&(o.terminatorEnd+=(r.end?\"|\":\"\")+s.terminatorEnd)),\nr.illegal&&(o.illegalRe=n(r.illegal)),\nr.contains||(r.contains=[]),r.contains=[].concat(...r.contains.map((e=>(e=>(e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map((n=>a(e,{\nvariants:null},n)))),e.cachedVariants?e.cachedVariants:X(e)?a(e,{\nstarts:e.starts?a(e.starts):null\n}):Object.isFrozen(e)?a(e):e))(\"self\"===e?r:e)))),r.contains.forEach((e=>{t(e,o)\n})),r.starts&&t(r.starts,s),o.matcher=(e=>{const n=new i\n;return e.contains.forEach((e=>n.addRule(e.begin,{rule:e,type:\"begin\"\n}))),e.terminatorEnd&&n.addRule(e.terminatorEnd,{type:\"end\"\n}),e.illegal&&n.addRule(e.illegal,{type:\"illegal\"}),n})(o),o}(e)}function X(e){\nreturn!!e&&(e.endsWithParent||X(e.starts))}class V extends Error{\nconstructor(e,n){super(e),this.name=\"HTMLInjectionError\",this.html=n}}\nconst J=t,Y=a,ee=Symbol(\"nomatch\"),ne=t=>{\nconst a=Object.create(null),i=Object.create(null),r=[];let s=!0\n;const o=\"Could not find the language '{}', did you forget to load/include a language module?\",c={\ndisableAutodetect:!0,name:\"Plain text\",contains:[]};let p={\nignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,\nlanguageDetectRe:/\\blang(?:uage)?-([\\w-]+)\\b/i,classPrefix:\"hljs-\",\ncssSelector:\"pre code\",languages:null,__emitter:l};function _(e){\nreturn p.noHighlightRe.test(e)}function h(e,n,t){let a=\"\",i=\"\"\n;\"object\"==typeof n?(a=e,\nt=n.ignoreIllegals,i=n.language):(H(\"10.7.0\",\"highlight(lang, code, ...args) has been deprecated.\"),\nH(\"10.7.0\",\"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\"),\ni=e,a=n),void 0===t&&(t=!0);const r={code:a,language:i};x(\"before:highlight\",r)\n;const s=r.result?r.result:f(r.language,r.code,t)\n;return s.code=r.code,x(\"after:highlight\",s),s}function f(e,t,i,r){\nconst l=Object.create(null);function c(){if(!x.keywords)return void S.addText(A)\n;let e=0;x.keywordPatternRe.lastIndex=0;let n=x.keywordPatternRe.exec(A),t=\"\"\n;for(;n;){t+=A.substring(e,n.index)\n;const i=w.case_insensitive?n[0].toLowerCase():n[0],r=(a=i,x.keywords[a]);if(r){\nconst[e,a]=r\n;if(S.addText(t),t=\"\",l[i]=(l[i]||0)+1,l[i]<=7&&(C+=a),e.startsWith(\"_\"))t+=n[0];else{\nconst t=w.classNameAliases[e]||e;g(n[0],t)}}else t+=n[0]\n;e=x.keywordPatternRe.lastIndex,n=x.keywordPatternRe.exec(A)}var a\n;t+=A.substring(e),S.addText(t)}function d(){null!=x.subLanguage?(()=>{\nif(\"\"===A)return;let e=null;if(\"string\"==typeof x.subLanguage){\nif(!a[x.subLanguage])return void S.addText(A)\n;e=f(x.subLanguage,A,!0,M[x.subLanguage]),M[x.subLanguage]=e._top\n}else e=E(A,x.subLanguage.length?x.subLanguage:null)\n;x.relevance>0&&(C+=e.relevance),S.__addSublanguage(e._emitter,e.language)\n})():c(),A=\"\"}function g(e,n){\n\"\"!==e&&(S.startScope(n),S.addText(e),S.endScope())}function u(e,n){let t=1\n;const a=n.length-1;for(;t<=a;){if(!e._emit[t]){t++;continue}\nconst a=w.classNameAliases[e[t]]||e[t],i=n[t];a?g(i,a):(A=i,c(),A=\"\"),t++}}\nfunction b(e,n){\nreturn e.scope&&\"string\"==typeof e.scope&&S.openNode(w.classNameAliases[e.scope]||e.scope),\ne.beginScope&&(e.beginScope._wrap?(g(A,w.classNameAliases[e.beginScope._wrap]||e.beginScope._wrap),\nA=\"\"):e.beginScope._multi&&(u(e.beginScope,n),A=\"\")),x=Object.create(e,{parent:{\nvalue:x}}),x}function m(e,t,a){let i=((e,n)=>{const t=e&&e.exec(n)\n;return t&&0===t.index})(e.endRe,a);if(i){if(e[\"on:end\"]){const a=new n(e)\n;e[\"on:end\"](t,a),a.isMatchIgnored&&(i=!1)}if(i){\nfor(;e.endsParent&&e.parent;)e=e.parent;return e}}\nif(e.endsWithParent)return m(e.parent,t,a)}function _(e){\nreturn 0===x.matcher.regexIndex?(A+=e[0],1):(D=!0,0)}function h(e){\nconst n=e[0],a=t.substring(e.index),i=m(x,e,a);if(!i)return ee;const r=x\n;x.endScope&&x.endScope._wrap?(d(),\ng(n,x.endScope._wrap)):x.endScope&&x.endScope._multi?(d(),\nu(x.endScope,e)):r.skip?A+=n:(r.returnEnd||r.excludeEnd||(A+=n),\nd(),r.excludeEnd&&(A=n));do{\nx.scope&&S.closeNode(),x.skip||x.subLanguage||(C+=x.relevance),x=x.parent\n}while(x!==i.parent);return i.starts&&b(i.starts,e),r.returnEnd?0:n.length}\nlet y={};function N(a,r){const o=r&&r[0];if(A+=a,null==o)return d(),0\n;if(\"begin\"===y.type&&\"end\"===r.type&&y.index===r.index&&\"\"===o){\nif(A+=t.slice(r.index,r.index+1),!s){const n=Error(`0 width match regex (${e})`)\n;throw n.languageName=e,n.badRule=y.rule,n}return 1}\nif(y=r,\"begin\"===r.type)return(e=>{\nconst t=e[0],a=e.rule,i=new n(a),r=[a.__beforeBegin,a[\"on:begin\"]]\n;for(const n of r)if(n&&(n(e,i),i.isMatchIgnored))return _(t)\n;return a.skip?A+=t:(a.excludeBegin&&(A+=t),\nd(),a.returnBegin||a.excludeBegin||(A=t)),b(a,e),a.returnBegin?0:t.length})(r)\n;if(\"illegal\"===r.type&&!i){\nconst e=Error('Illegal lexeme \"'+o+'\" for mode \"'+(x.scope||\"<unnamed>\")+'\"')\n;throw e.mode=x,e}if(\"end\"===r.type){const e=h(r);if(e!==ee)return e}\nif(\"illegal\"===r.type&&\"\"===o)return 1\n;if(R>1e5&&R>3*r.index)throw Error(\"potential infinite loop, way more iterations than matches\")\n;return A+=o,o.length}const w=v(e)\n;if(!w)throw K(o.replace(\"{}\",e)),Error('Unknown language: \"'+e+'\"')\n;const O=Q(w);let k=\"\",x=r||O;const M={},S=new p.__emitter(p);(()=>{const e=[]\n;for(let n=x;n!==w;n=n.parent)n.scope&&e.unshift(n.scope)\n;e.forEach((e=>S.openNode(e)))})();let A=\"\",C=0,T=0,R=0,D=!1;try{\nif(w.__emitTokens)w.__emitTokens(t,S);else{for(x.matcher.considerAll();;){\nR++,D?D=!1:x.matcher.considerAll(),x.matcher.lastIndex=T\n;const e=x.matcher.exec(t);if(!e)break;const n=N(t.substring(T,e.index),e)\n;T=e.index+n}N(t.substring(T))}return S.finalize(),k=S.toHTML(),{language:e,\nvalue:k,relevance:C,illegal:!1,_emitter:S,_top:x}}catch(n){\nif(n.message&&n.message.includes(\"Illegal\"))return{language:e,value:J(t),\nillegal:!0,relevance:0,_illegalBy:{message:n.message,index:T,\ncontext:t.slice(T-100,T+100),mode:n.mode,resultSoFar:k},_emitter:S};if(s)return{\nlanguage:e,value:J(t),illegal:!1,relevance:0,errorRaised:n,_emitter:S,_top:x}\n;throw n}}function E(e,n){n=n||p.languages||Object.keys(a);const t=(e=>{\nconst n={value:J(e),illegal:!1,relevance:0,_top:c,_emitter:new p.__emitter(p)}\n;return n._emitter.addText(e),n})(e),i=n.filter(v).filter(k).map((n=>f(n,e,!1)))\n;i.unshift(t);const r=i.sort(((e,n)=>{\nif(e.relevance!==n.relevance)return n.relevance-e.relevance\n;if(e.language&&n.language){if(v(e.language).supersetOf===n.language)return 1\n;if(v(n.language).supersetOf===e.language)return-1}return 0})),[s,o]=r,l=s\n;return l.secondBest=o,l}function y(e){let n=null;const t=(e=>{\nlet n=e.className+\" \";n+=e.parentNode?e.parentNode.className:\"\"\n;const t=p.languageDetectRe.exec(n);if(t){const n=v(t[1])\n;return n||(q(o.replace(\"{}\",t[1])),\nq(\"Falling back to no-highlight mode for this block.\",e)),n?t[1]:\"no-highlight\"}\nreturn n.split(/\\s+/).find((e=>_(e)||v(e)))})(e);if(_(t))return\n;if(x(\"before:highlightElement\",{el:e,language:t\n}),e.children.length>0&&(p.ignoreUnescapedHTML||(console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\"),\nconsole.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\"),\nconsole.warn(\"The element with unescaped HTML:\"),\nconsole.warn(e)),p.throwUnescapedHTML))throw new V(\"One of your code blocks includes unescaped HTML.\",e.innerHTML)\n;n=e;const a=n.textContent,r=t?h(a,{language:t,ignoreIllegals:!0}):E(a)\n;e.innerHTML=r.value,((e,n,t)=>{const a=n&&i[n]||t\n;e.classList.add(\"hljs\"),e.classList.add(\"language-\"+a)\n})(e,t,r.language),e.result={language:r.language,re:r.relevance,\nrelevance:r.relevance},r.secondBest&&(e.secondBest={\nlanguage:r.secondBest.language,relevance:r.secondBest.relevance\n}),x(\"after:highlightElement\",{el:e,result:r,text:a})}let N=!1;function w(){\n\"loading\"!==document.readyState?document.querySelectorAll(p.cssSelector).forEach(y):N=!0\n}function v(e){return e=(e||\"\").toLowerCase(),a[e]||a[i[e]]}\nfunction O(e,{languageName:n}){\"string\"==typeof e&&(e=[e]),e.forEach((e=>{\ni[e.toLowerCase()]=n}))}function k(e){const n=v(e)\n;return n&&!n.disableAutodetect}function x(e,n){const t=e;r.forEach((e=>{\ne[t]&&e[t](n)}))}\n\"undefined\"!=typeof window&&window.addEventListener&&window.addEventListener(\"DOMContentLoaded\",(()=>{\nN&&w()}),!1),Object.assign(t,{highlight:h,highlightAuto:E,highlightAll:w,\nhighlightElement:y,\nhighlightBlock:e=>(H(\"10.7.0\",\"highlightBlock will be removed entirely in v12.0\"),\nH(\"10.7.0\",\"Please use highlightElement now.\"),y(e)),configure:e=>{p=Y(p,e)},\ninitHighlighting:()=>{\nw(),H(\"10.6.0\",\"initHighlighting() deprecated.  Use highlightAll() now.\")},\ninitHighlightingOnLoad:()=>{\nw(),H(\"10.6.0\",\"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\")\n},registerLanguage:(e,n)=>{let i=null;try{i=n(t)}catch(n){\nif(K(\"Language definition for '{}' could not be registered.\".replace(\"{}\",e)),\n!s)throw n;K(n),i=c}\ni.name||(i.name=e),a[e]=i,i.rawDefinition=n.bind(null,t),i.aliases&&O(i.aliases,{\nlanguageName:e})},unregisterLanguage:e=>{delete a[e]\n;for(const n of Object.keys(i))i[n]===e&&delete i[n]},\nlistLanguages:()=>Object.keys(a),getLanguage:v,registerAliases:O,\nautoDetection:k,inherit:Y,addPlugin:e=>{(e=>{\ne[\"before:highlightBlock\"]&&!e[\"before:highlightElement\"]&&(e[\"before:highlightElement\"]=n=>{\ne[\"before:highlightBlock\"](Object.assign({block:n.el},n))\n}),e[\"after:highlightBlock\"]&&!e[\"after:highlightElement\"]&&(e[\"after:highlightElement\"]=n=>{\ne[\"after:highlightBlock\"](Object.assign({block:n.el},n))})})(e),r.push(e)},\nremovePlugin:e=>{const n=r.indexOf(e);-1!==n&&r.splice(n,1)}}),t.debugMode=()=>{\ns=!1},t.safeMode=()=>{s=!0},t.versionString=\"11.8.0\",t.regex={concat:b,\nlookahead:d,either:m,optional:u,anyNumberOfTimes:g}\n;for(const n in C)\"object\"==typeof C[n]&&e(C[n]);return Object.assign(t,C),t\n},te=ne({});te.newInstance=()=>ne({});var ae=te;const ie=e=>({IMPORTANT:{\nscope:\"meta\",begin:\"!important\"},BLOCK_COMMENT:e.C_BLOCK_COMMENT_MODE,HEXCOLOR:{\nscope:\"number\",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/},\nFUNCTION_DISPATCH:{className:\"built_in\",begin:/[\\w-]+(?=\\()/},\nATTRIBUTE_SELECTOR_MODE:{scope:\"selector-attr\",begin:/\\[/,end:/\\]/,illegal:\"$\",\ncontains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{\nscope:\"number\",\nbegin:e.NUMBER_RE+\"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\",\nrelevance:0},CSS_VARIABLE:{className:\"attr\",begin:/--[A-Za-z][A-Za-z0-9_-]*/}\n}),re=[\"a\",\"abbr\",\"address\",\"article\",\"aside\",\"audio\",\"b\",\"blockquote\",\"body\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"dd\",\"del\",\"details\",\"dfn\",\"div\",\"dl\",\"dt\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"mark\",\"menu\",\"nav\",\"object\",\"ol\",\"p\",\"q\",\"quote\",\"samp\",\"section\",\"span\",\"strong\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"ul\",\"var\",\"video\"],se=[\"any-hover\",\"any-pointer\",\"aspect-ratio\",\"color\",\"color-gamut\",\"color-index\",\"device-aspect-ratio\",\"device-height\",\"device-width\",\"display-mode\",\"forced-colors\",\"grid\",\"height\",\"hover\",\"inverted-colors\",\"monochrome\",\"orientation\",\"overflow-block\",\"overflow-inline\",\"pointer\",\"prefers-color-scheme\",\"prefers-contrast\",\"prefers-reduced-motion\",\"prefers-reduced-transparency\",\"resolution\",\"scan\",\"scripting\",\"update\",\"width\",\"min-width\",\"max-width\",\"min-height\",\"max-height\"],oe=[\"active\",\"any-link\",\"blank\",\"checked\",\"current\",\"default\",\"defined\",\"dir\",\"disabled\",\"drop\",\"empty\",\"enabled\",\"first\",\"first-child\",\"first-of-type\",\"fullscreen\",\"future\",\"focus\",\"focus-visible\",\"focus-within\",\"has\",\"host\",\"host-context\",\"hover\",\"indeterminate\",\"in-range\",\"invalid\",\"is\",\"lang\",\"last-child\",\"last-of-type\",\"left\",\"link\",\"local-link\",\"not\",\"nth-child\",\"nth-col\",\"nth-last-child\",\"nth-last-col\",\"nth-last-of-type\",\"nth-of-type\",\"only-child\",\"only-of-type\",\"optional\",\"out-of-range\",\"past\",\"placeholder-shown\",\"read-only\",\"read-write\",\"required\",\"right\",\"root\",\"scope\",\"target\",\"target-within\",\"user-invalid\",\"valid\",\"visited\",\"where\"],le=[\"after\",\"backdrop\",\"before\",\"cue\",\"cue-region\",\"first-letter\",\"first-line\",\"grammar-error\",\"marker\",\"part\",\"placeholder\",\"selection\",\"slotted\",\"spelling-error\"],ce=[\"align-content\",\"align-items\",\"align-self\",\"all\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-blend-mode\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"block-size\",\"border\",\"border-block\",\"border-block-color\",\"border-block-end\",\"border-block-end-color\",\"border-block-end-style\",\"border-block-end-width\",\"border-block-start\",\"border-block-start-color\",\"border-block-start-style\",\"border-block-start-width\",\"border-block-style\",\"border-block-width\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-inline\",\"border-inline-color\",\"border-inline-end\",\"border-inline-end-color\",\"border-inline-end-style\",\"border-inline-end-width\",\"border-inline-start\",\"border-inline-start-color\",\"border-inline-start-style\",\"border-inline-start-width\",\"border-inline-style\",\"border-inline-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"caret-color\",\"clear\",\"clip\",\"clip-path\",\"clip-rule\",\"color\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"contain\",\"content\",\"content-visibility\",\"counter-increment\",\"counter-reset\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"empty-cells\",\"filter\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"flow\",\"font\",\"font-display\",\"font-family\",\"font-feature-settings\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-smoothing\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-variation-settings\",\"font-weight\",\"gap\",\"glyph-orientation-vertical\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-gap\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"ime-mode\",\"inline-size\",\"isolation\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-block\",\"margin-block-end\",\"margin-block-start\",\"margin-bottom\",\"margin-inline\",\"margin-inline-end\",\"margin-inline-start\",\"margin-left\",\"margin-right\",\"margin-top\",\"marks\",\"mask\",\"mask-border\",\"mask-border-mode\",\"mask-border-outset\",\"mask-border-repeat\",\"mask-border-slice\",\"mask-border-source\",\"mask-border-width\",\"mask-clip\",\"mask-composite\",\"mask-image\",\"mask-mode\",\"mask-origin\",\"mask-position\",\"mask-repeat\",\"mask-size\",\"mask-type\",\"max-block-size\",\"max-height\",\"max-inline-size\",\"max-width\",\"min-block-size\",\"min-height\",\"min-inline-size\",\"min-width\",\"mix-blend-mode\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"none\",\"normal\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-block\",\"padding-block-end\",\"padding-block-start\",\"padding-bottom\",\"padding-inline\",\"padding-inline-end\",\"padding-inline-start\",\"padding-left\",\"padding-right\",\"padding-top\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pointer-events\",\"position\",\"quotes\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"right\",\"row-gap\",\"scroll-margin\",\"scroll-margin-block\",\"scroll-margin-block-end\",\"scroll-margin-block-start\",\"scroll-margin-bottom\",\"scroll-margin-inline\",\"scroll-margin-inline-end\",\"scroll-margin-inline-start\",\"scroll-margin-left\",\"scroll-margin-right\",\"scroll-margin-top\",\"scroll-padding\",\"scroll-padding-block\",\"scroll-padding-block-end\",\"scroll-padding-block-start\",\"scroll-padding-bottom\",\"scroll-padding-inline\",\"scroll-padding-inline-end\",\"scroll-padding-inline-start\",\"scroll-padding-left\",\"scroll-padding-right\",\"scroll-padding-top\",\"scroll-snap-align\",\"scroll-snap-stop\",\"scroll-snap-type\",\"scrollbar-color\",\"scrollbar-gutter\",\"scrollbar-width\",\"shape-image-threshold\",\"shape-margin\",\"shape-outside\",\"speak\",\"speak-as\",\"src\",\"tab-size\",\"table-layout\",\"text-align\",\"text-align-all\",\"text-align-last\",\"text-combine-upright\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-indent\",\"text-justify\",\"text-orientation\",\"text-overflow\",\"text-rendering\",\"text-shadow\",\"text-transform\",\"text-underline-position\",\"top\",\"transform\",\"transform-box\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"writing-mode\",\"z-index\"].reverse(),de=oe.concat(le)\n;var ge=\"[0-9](_*[0-9])*\",ue=`\\\\.(${ge})`,be=\"[0-9a-fA-F](_*[0-9a-fA-F])*\",me={\nclassName:\"number\",variants:[{\nbegin:`(\\\\b(${ge})((${ue})|\\\\.)?|(${ue}))[eE][+-]?(${ge})[fFdD]?\\\\b`},{\nbegin:`\\\\b(${ge})((${ue})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`},{\nbegin:`(${ue})[fFdD]?\\\\b`},{begin:`\\\\b(${ge})[fFdD]\\\\b`},{\nbegin:`\\\\b0[xX]((${be})\\\\.?|(${be})?\\\\.(${be}))[pP][+-]?(${ge})[fFdD]?\\\\b`},{\nbegin:\"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"},{begin:`\\\\b0[xX](${be})[lL]?\\\\b`},{\nbegin:\"\\\\b0(_*[0-7])*[lL]?\\\\b\"},{begin:\"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"}],\nrelevance:0};function pe(e,n,t){return-1===t?\"\":e.replace(n,(a=>pe(e,n,t-1)))}\nconst _e=\"[A-Za-z$_][0-9A-Za-z$_]*\",he=[\"as\",\"in\",\"of\",\"if\",\"for\",\"while\",\"finally\",\"var\",\"new\",\"function\",\"do\",\"return\",\"void\",\"else\",\"break\",\"catch\",\"instanceof\",\"with\",\"throw\",\"case\",\"default\",\"try\",\"switch\",\"continue\",\"typeof\",\"delete\",\"let\",\"yield\",\"const\",\"class\",\"debugger\",\"async\",\"await\",\"static\",\"import\",\"from\",\"export\",\"extends\"],fe=[\"true\",\"false\",\"null\",\"undefined\",\"NaN\",\"Infinity\"],Ee=[\"Object\",\"Function\",\"Boolean\",\"Symbol\",\"Math\",\"Date\",\"Number\",\"BigInt\",\"String\",\"RegExp\",\"Array\",\"Float32Array\",\"Float64Array\",\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Int32Array\",\"Uint16Array\",\"Uint32Array\",\"BigInt64Array\",\"BigUint64Array\",\"Set\",\"Map\",\"WeakSet\",\"WeakMap\",\"ArrayBuffer\",\"SharedArrayBuffer\",\"Atomics\",\"DataView\",\"JSON\",\"Promise\",\"Generator\",\"GeneratorFunction\",\"AsyncFunction\",\"Reflect\",\"Proxy\",\"Intl\",\"WebAssembly\"],ye=[\"Error\",\"EvalError\",\"InternalError\",\"RangeError\",\"ReferenceError\",\"SyntaxError\",\"TypeError\",\"URIError\"],Ne=[\"setInterval\",\"setTimeout\",\"clearInterval\",\"clearTimeout\",\"require\",\"exports\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"unescape\"],we=[\"arguments\",\"this\",\"super\",\"console\",\"window\",\"document\",\"localStorage\",\"sessionStorage\",\"module\",\"global\"],ve=[].concat(Ne,Ee,ye)\n;function Oe(e){const n=e.regex,t=_e,a={begin:/<[A-Za-z0-9\\\\._:-]+/,\nend:/\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,isTrulyOpeningTag:(e,n)=>{\nconst t=e[0].length+e.index,a=e.input[t]\n;if(\"<\"===a||\",\"===a)return void n.ignoreMatch();let i\n;\">\"===a&&(((e,{after:n})=>{const t=\"</\"+e[0].slice(1)\n;return-1!==e.input.indexOf(t,n)})(e,{after:t})||n.ignoreMatch())\n;const r=e.input.substring(t)\n;((i=r.match(/^\\s*=/))||(i=r.match(/^\\s+extends\\s+/))&&0===i.index)&&n.ignoreMatch()\n}},i={$pattern:_e,keyword:he,literal:fe,built_in:ve,\"variable.language\":we\n},r=\"[0-9](_?[0-9])*\",s=`\\\\.(${r})`,o=\"0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*\",l={\nclassName:\"number\",variants:[{\nbegin:`(\\\\b(${o})((${s})|\\\\.)?|(${s}))[eE][+-]?(${r})\\\\b`},{\nbegin:`\\\\b(${o})\\\\b((${s})\\\\b|\\\\.)?|(${s})\\\\b`},{\nbegin:\"\\\\b(0|[1-9](_?[0-9])*)n\\\\b\"},{\nbegin:\"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\"},{\nbegin:\"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\"},{begin:\"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\"},{\nbegin:\"\\\\b0[0-7]+n?\\\\b\"}],relevance:0},c={className:\"subst\",begin:\"\\\\$\\\\{\",\nend:\"\\\\}\",keywords:i,contains:[]},d={begin:\"html`\",end:\"\",starts:{end:\"`\",\nreturnEnd:!1,contains:[e.BACKSLASH_ESCAPE,c],subLanguage:\"xml\"}},g={\nbegin:\"css`\",end:\"\",starts:{end:\"`\",returnEnd:!1,\ncontains:[e.BACKSLASH_ESCAPE,c],subLanguage:\"css\"}},u={begin:\"gql`\",end:\"\",\nstarts:{end:\"`\",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,c],\nsubLanguage:\"graphql\"}},b={className:\"string\",begin:\"`\",end:\"`\",\ncontains:[e.BACKSLASH_ESCAPE,c]},m={className:\"comment\",\nvariants:[e.COMMENT(/\\/\\*\\*(?!\\/)/,\"\\\\*/\",{relevance:0,contains:[{\nbegin:\"(?=@[A-Za-z]+)\",relevance:0,contains:[{className:\"doctag\",\nbegin:\"@[A-Za-z]+\"},{className:\"type\",begin:\"\\\\{\",end:\"\\\\}\",excludeEnd:!0,\nexcludeBegin:!0,relevance:0},{className:\"variable\",begin:t+\"(?=\\\\s*(-)|$)\",\nendsParent:!0,relevance:0},{begin:/(?=[^\\n])\\s/,relevance:0}]}]\n}),e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]\n},p=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,d,g,u,b,{match:/\\$\\d+/},l]\n;c.contains=p.concat({begin:/\\{/,end:/\\}/,keywords:i,contains:[\"self\"].concat(p)\n});const _=[].concat(m,c.contains),h=_.concat([{begin:/\\(/,end:/\\)/,keywords:i,\ncontains:[\"self\"].concat(_)}]),f={className:\"params\",begin:/\\(/,end:/\\)/,\nexcludeBegin:!0,excludeEnd:!0,keywords:i,contains:h},E={variants:[{\nmatch:[/class/,/\\s+/,t,/\\s+/,/extends/,/\\s+/,n.concat(t,\"(\",n.concat(/\\./,t),\")*\")],\nscope:{1:\"keyword\",3:\"title.class\",5:\"keyword\",7:\"title.class.inherited\"}},{\nmatch:[/class/,/\\s+/,t],scope:{1:\"keyword\",3:\"title.class\"}}]},y={relevance:0,\nmatch:n.either(/\\bJSON/,/\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,/\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,/\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/),\nclassName:\"title.class\",keywords:{_:[...Ee,...ye]}},N={variants:[{\nmatch:[/function/,/\\s+/,t,/(?=\\s*\\()/]},{match:[/function/,/\\s*(?=\\()/]}],\nclassName:{1:\"keyword\",3:\"title.function\"},label:\"func.def\",contains:[f],\nillegal:/%/},w={\nmatch:n.concat(/\\b/,(v=[...Ne,\"super\",\"import\"],n.concat(\"(?!\",v.join(\"|\"),\")\")),t,n.lookahead(/\\(/)),\nclassName:\"title.function\",relevance:0};var v;const O={\nbegin:n.concat(/\\./,n.lookahead(n.concat(t,/(?![0-9A-Za-z$_(])/))),end:t,\nexcludeBegin:!0,keywords:\"prototype\",className:\"property\",relevance:0},k={\nmatch:[/get|set/,/\\s+/,t,/(?=\\()/],className:{1:\"keyword\",3:\"title.function\"},\ncontains:[{begin:/\\(\\)/},f]\n},x=\"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\"+e.UNDERSCORE_IDENT_RE+\")\\\\s*=>\",M={\nmatch:[/const|var|let/,/\\s+/,t,/\\s*/,/=\\s*/,/(async\\s*)?/,n.lookahead(x)],\nkeywords:\"async\",className:{1:\"keyword\",3:\"title.function\"},contains:[f]}\n;return{name:\"JavaScript\",aliases:[\"js\",\"jsx\",\"mjs\",\"cjs\"],keywords:i,exports:{\nPARAMS_CONTAINS:h,CLASS_REFERENCE:y},illegal:/#(?![$_A-z])/,\ncontains:[e.SHEBANG({label:\"shebang\",binary:\"node\",relevance:5}),{\nlabel:\"use_strict\",className:\"meta\",relevance:10,\nbegin:/^\\s*['\"]use (strict|asm)['\"]/\n},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,d,g,u,b,m,{match:/\\$\\d+/},l,y,{\nclassName:\"attr\",begin:t+n.lookahead(\":\"),relevance:0},M,{\nbegin:\"(\"+e.RE_STARTERS_RE+\"|\\\\b(case|return|throw)\\\\b)\\\\s*\",\nkeywords:\"return throw case\",relevance:0,contains:[m,e.REGEXP_MODE,{\nclassName:\"function\",begin:x,returnBegin:!0,end:\"\\\\s*=>\",contains:[{\nclassName:\"params\",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{\nclassName:null,begin:/\\(\\s*\\)/,skip:!0},{begin:/\\(/,end:/\\)/,excludeBegin:!0,\nexcludeEnd:!0,keywords:i,contains:h}]}]},{begin:/,/,relevance:0},{match:/\\s+/,\nrelevance:0},{variants:[{begin:\"<>\",end:\"</>\"},{\nmatch:/<[A-Za-z0-9\\\\._:-]+\\s*\\/>/},{begin:a.begin,\n\"on:begin\":a.isTrulyOpeningTag,end:a.end}],subLanguage:\"xml\",contains:[{\nbegin:a.begin,end:a.end,skip:!0,contains:[\"self\"]}]}]},N,{\nbeginKeywords:\"while if switch catch for\"},{\nbegin:\"\\\\b(?!function)\"+e.UNDERSCORE_IDENT_RE+\"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",\nreturnBegin:!0,label:\"func.def\",contains:[f,e.inherit(e.TITLE_MODE,{begin:t,\nclassName:\"title.function\"})]},{match:/\\.\\.\\./,relevance:0},O,{match:\"\\\\$\"+t,\nrelevance:0},{match:[/\\bconstructor(?=\\s*\\()/],className:{1:\"title.function\"},\ncontains:[f]},w,{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/,\nclassName:\"variable.constant\"},E,k,{match:/\\$[(.]/}]}}\nconst ke=e=>b(/\\b/,e,/\\w$/.test(e)?/\\b/:/\\B/),xe=[\"Protocol\",\"Type\"].map(ke),Me=[\"init\",\"self\"].map(ke),Se=[\"Any\",\"Self\"],Ae=[\"actor\",\"any\",\"associatedtype\",\"async\",\"await\",/as\\?/,/as!/,\"as\",\"break\",\"case\",\"catch\",\"class\",\"continue\",\"convenience\",\"default\",\"defer\",\"deinit\",\"didSet\",\"distributed\",\"do\",\"dynamic\",\"else\",\"enum\",\"extension\",\"fallthrough\",/fileprivate\\(set\\)/,\"fileprivate\",\"final\",\"for\",\"func\",\"get\",\"guard\",\"if\",\"import\",\"indirect\",\"infix\",/init\\?/,/init!/,\"inout\",/internal\\(set\\)/,\"internal\",\"in\",\"is\",\"isolated\",\"nonisolated\",\"lazy\",\"let\",\"mutating\",\"nonmutating\",/open\\(set\\)/,\"open\",\"operator\",\"optional\",\"override\",\"postfix\",\"precedencegroup\",\"prefix\",/private\\(set\\)/,\"private\",\"protocol\",/public\\(set\\)/,\"public\",\"repeat\",\"required\",\"rethrows\",\"return\",\"set\",\"some\",\"static\",\"struct\",\"subscript\",\"super\",\"switch\",\"throws\",\"throw\",/try\\?/,/try!/,\"try\",\"typealias\",/unowned\\(safe\\)/,/unowned\\(unsafe\\)/,\"unowned\",\"var\",\"weak\",\"where\",\"while\",\"willSet\"],Ce=[\"false\",\"nil\",\"true\"],Te=[\"assignment\",\"associativity\",\"higherThan\",\"left\",\"lowerThan\",\"none\",\"right\"],Re=[\"#colorLiteral\",\"#column\",\"#dsohandle\",\"#else\",\"#elseif\",\"#endif\",\"#error\",\"#file\",\"#fileID\",\"#fileLiteral\",\"#filePath\",\"#function\",\"#if\",\"#imageLiteral\",\"#keyPath\",\"#line\",\"#selector\",\"#sourceLocation\",\"#warn_unqualified_access\",\"#warning\"],De=[\"abs\",\"all\",\"any\",\"assert\",\"assertionFailure\",\"debugPrint\",\"dump\",\"fatalError\",\"getVaList\",\"isKnownUniquelyReferenced\",\"max\",\"min\",\"numericCast\",\"pointwiseMax\",\"pointwiseMin\",\"precondition\",\"preconditionFailure\",\"print\",\"readLine\",\"repeatElement\",\"sequence\",\"stride\",\"swap\",\"swift_unboxFromSwiftValueWithType\",\"transcode\",\"type\",\"unsafeBitCast\",\"unsafeDowncast\",\"withExtendedLifetime\",\"withUnsafeMutablePointer\",\"withUnsafePointer\",\"withVaList\",\"withoutActuallyEscaping\",\"zip\"],Ie=m(/[/=\\-+!*%<>&|^~?]/,/[\\u00A1-\\u00A7]/,/[\\u00A9\\u00AB]/,/[\\u00AC\\u00AE]/,/[\\u00B0\\u00B1]/,/[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,/[\\u2016-\\u2017]/,/[\\u2020-\\u2027]/,/[\\u2030-\\u203E]/,/[\\u2041-\\u2053]/,/[\\u2055-\\u205E]/,/[\\u2190-\\u23FF]/,/[\\u2500-\\u2775]/,/[\\u2794-\\u2BFF]/,/[\\u2E00-\\u2E7F]/,/[\\u3001-\\u3003]/,/[\\u3008-\\u3020]/,/[\\u3030]/),Le=m(Ie,/[\\u0300-\\u036F]/,/[\\u1DC0-\\u1DFF]/,/[\\u20D0-\\u20FF]/,/[\\uFE00-\\uFE0F]/,/[\\uFE20-\\uFE2F]/),Be=b(Ie,Le,\"*\"),$e=m(/[a-zA-Z_]/,/[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,/[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,/[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,/[\\u1E00-\\u1FFF]/,/[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,/[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,/[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,/[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,/[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,/[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/),ze=m($e,/\\d/,/[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/),Fe=b($e,ze,\"*\"),Ue=b(/[A-Z]/,ze,\"*\"),je=[\"autoclosure\",b(/convention\\(/,m(\"swift\",\"block\",\"c\"),/\\)/),\"discardableResult\",\"dynamicCallable\",\"dynamicMemberLookup\",\"escaping\",\"frozen\",\"GKInspectable\",\"IBAction\",\"IBDesignable\",\"IBInspectable\",\"IBOutlet\",\"IBSegueAction\",\"inlinable\",\"main\",\"nonobjc\",\"NSApplicationMain\",\"NSCopying\",\"NSManaged\",b(/objc\\(/,Fe,/\\)/),\"objc\",\"objcMembers\",\"propertyWrapper\",\"requires_stored_property_inits\",\"resultBuilder\",\"testable\",\"UIApplicationMain\",\"unknown\",\"usableFromInline\"],Pe=[\"iOS\",\"iOSApplicationExtension\",\"macOS\",\"macOSApplicationExtension\",\"macCatalyst\",\"macCatalystApplicationExtension\",\"watchOS\",\"watchOSApplicationExtension\",\"tvOS\",\"tvOSApplicationExtension\",\"swift\"]\n;var Ke=Object.freeze({__proto__:null,grmr_bash:e=>{const n=e.regex,t={},a={\nbegin:/\\$\\{/,end:/\\}/,contains:[\"self\",{begin:/:-/,contains:[t]}]}\n;Object.assign(t,{className:\"variable\",variants:[{\nbegin:n.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\"(?![\\\\w\\\\d])(?![$])\")},a]});const i={\nclassName:\"subst\",begin:/\\$\\(/,end:/\\)/,contains:[e.BACKSLASH_ESCAPE]},r={\nbegin:/<<-?\\s*(?=\\w+)/,starts:{contains:[e.END_SAME_AS_BEGIN({begin:/(\\w+)/,\nend:/(\\w+)/,className:\"string\"})]}},s={className:\"string\",begin:/\"/,end:/\"/,\ncontains:[e.BACKSLASH_ESCAPE,t,i]};i.contains.push(s);const o={begin:/\\$?\\(\\(/,\nend:/\\)\\)/,contains:[{begin:/\\d+#[0-9a-f]+/,className:\"number\"},e.NUMBER_MODE,t]\n},l=e.SHEBANG({binary:\"(fish|bash|zsh|sh|csh|ksh|tcsh|dash|scsh)\",relevance:10\n}),c={className:\"function\",begin:/\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,returnBegin:!0,\ncontains:[e.inherit(e.TITLE_MODE,{begin:/\\w[\\w\\d_]*/})],relevance:0};return{\nname:\"Bash\",aliases:[\"sh\"],keywords:{$pattern:/\\b[a-z][a-z0-9._-]+\\b/,\nkeyword:[\"if\",\"then\",\"else\",\"elif\",\"fi\",\"for\",\"while\",\"until\",\"in\",\"do\",\"done\",\"case\",\"esac\",\"function\",\"select\"],\nliteral:[\"true\",\"false\"],\nbuilt_in:[\"break\",\"cd\",\"continue\",\"eval\",\"exec\",\"exit\",\"export\",\"getopts\",\"hash\",\"pwd\",\"readonly\",\"return\",\"shift\",\"test\",\"times\",\"trap\",\"umask\",\"unset\",\"alias\",\"bind\",\"builtin\",\"caller\",\"command\",\"declare\",\"echo\",\"enable\",\"help\",\"let\",\"local\",\"logout\",\"mapfile\",\"printf\",\"read\",\"readarray\",\"source\",\"type\",\"typeset\",\"ulimit\",\"unalias\",\"set\",\"shopt\",\"autoload\",\"bg\",\"bindkey\",\"bye\",\"cap\",\"chdir\",\"clone\",\"comparguments\",\"compcall\",\"compctl\",\"compdescribe\",\"compfiles\",\"compgroups\",\"compquote\",\"comptags\",\"comptry\",\"compvalues\",\"dirs\",\"disable\",\"disown\",\"echotc\",\"echoti\",\"emulate\",\"fc\",\"fg\",\"float\",\"functions\",\"getcap\",\"getln\",\"history\",\"integer\",\"jobs\",\"kill\",\"limit\",\"log\",\"noglob\",\"popd\",\"print\",\"pushd\",\"pushln\",\"rehash\",\"sched\",\"setcap\",\"setopt\",\"stat\",\"suspend\",\"ttyctl\",\"unfunction\",\"unhash\",\"unlimit\",\"unsetopt\",\"vared\",\"wait\",\"whence\",\"where\",\"which\",\"zcompile\",\"zformat\",\"zftp\",\"zle\",\"zmodload\",\"zparseopts\",\"zprof\",\"zpty\",\"zregexparse\",\"zsocket\",\"zstyle\",\"ztcp\",\"chcon\",\"chgrp\",\"chown\",\"chmod\",\"cp\",\"dd\",\"df\",\"dir\",\"dircolors\",\"ln\",\"ls\",\"mkdir\",\"mkfifo\",\"mknod\",\"mktemp\",\"mv\",\"realpath\",\"rm\",\"rmdir\",\"shred\",\"sync\",\"touch\",\"truncate\",\"vdir\",\"b2sum\",\"base32\",\"base64\",\"cat\",\"cksum\",\"comm\",\"csplit\",\"cut\",\"expand\",\"fmt\",\"fold\",\"head\",\"join\",\"md5sum\",\"nl\",\"numfmt\",\"od\",\"paste\",\"ptx\",\"pr\",\"sha1sum\",\"sha224sum\",\"sha256sum\",\"sha384sum\",\"sha512sum\",\"shuf\",\"sort\",\"split\",\"sum\",\"tac\",\"tail\",\"tr\",\"tsort\",\"unexpand\",\"uniq\",\"wc\",\"arch\",\"basename\",\"chroot\",\"date\",\"dirname\",\"du\",\"echo\",\"env\",\"expr\",\"factor\",\"groups\",\"hostid\",\"id\",\"link\",\"logname\",\"nice\",\"nohup\",\"nproc\",\"pathchk\",\"pinky\",\"printenv\",\"printf\",\"pwd\",\"readlink\",\"runcon\",\"seq\",\"sleep\",\"stat\",\"stdbuf\",\"stty\",\"tee\",\"test\",\"timeout\",\"tty\",\"uname\",\"unlink\",\"uptime\",\"users\",\"who\",\"whoami\",\"yes\"]\n},contains:[l,e.SHEBANG(),c,o,e.HASH_COMMENT_MODE,r,{match:/(\\/[a-z._-]+)+/},s,{\nclassName:\"\",begin:/\\\\\"/},{className:\"string\",begin:/'/,end:/'/},t]}},\ngrmr_c:e=>{const n=e.regex,t=e.COMMENT(\"//\",\"$\",{contains:[{begin:/\\\\\\n/}]\n}),a=\"decltype\\\\(auto\\\\)\",i=\"[a-zA-Z_]\\\\w*::\",r=\"(\"+a+\"|\"+n.optional(i)+\"[a-zA-Z_]\\\\w*\"+n.optional(\"<[^<>]+>\")+\")\",s={\nclassName:\"type\",variants:[{begin:\"\\\\b[a-z\\\\d_]*_t\\\\b\"},{\nmatch:/\\batomic_[a-z]{3,6}\\b/}]},o={className:\"string\",variants:[{\nbegin:'(u8?|U|L)?\"',end:'\"',illegal:\"\\\\n\",contains:[e.BACKSLASH_ESCAPE]},{\nbegin:\"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\nend:\"'\",illegal:\".\"},e.END_SAME_AS_BEGIN({\nbegin:/(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,end:/\\)([^()\\\\ ]{0,16})\"/})]},l={\nclassName:\"number\",variants:[{begin:\"\\\\b(0b[01']+)\"},{\nbegin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n},{\nbegin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n}],relevance:0},c={className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,keywords:{\nkeyword:\"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n},contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(o,{className:\"string\"}),{\nclassName:\"string\",begin:/<.*?>/},t,e.C_BLOCK_COMMENT_MODE]},d={\nclassName:\"title\",begin:n.optional(i)+e.IDENT_RE,relevance:0\n},g=n.optional(i)+e.IDENT_RE+\"\\\\s*\\\\(\",u={\nkeyword:[\"asm\",\"auto\",\"break\",\"case\",\"continue\",\"default\",\"do\",\"else\",\"enum\",\"extern\",\"for\",\"fortran\",\"goto\",\"if\",\"inline\",\"register\",\"restrict\",\"return\",\"sizeof\",\"struct\",\"switch\",\"typedef\",\"union\",\"volatile\",\"while\",\"_Alignas\",\"_Alignof\",\"_Atomic\",\"_Generic\",\"_Noreturn\",\"_Static_assert\",\"_Thread_local\",\"alignas\",\"alignof\",\"noreturn\",\"static_assert\",\"thread_local\",\"_Pragma\"],\ntype:[\"float\",\"double\",\"signed\",\"unsigned\",\"int\",\"short\",\"long\",\"char\",\"void\",\"_Bool\",\"_Complex\",\"_Imaginary\",\"_Decimal32\",\"_Decimal64\",\"_Decimal128\",\"const\",\"static\",\"complex\",\"bool\",\"imaginary\"],\nliteral:\"true false NULL\",\nbuilt_in:\"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr\"\n},b=[c,s,t,e.C_BLOCK_COMMENT_MODE,l,o],m={variants:[{begin:/=/,end:/;/},{\nbegin:/\\(/,end:/\\)/},{beginKeywords:\"new throw return else\",end:/;/}],\nkeywords:u,contains:b.concat([{begin:/\\(/,end:/\\)/,keywords:u,\ncontains:b.concat([\"self\"]),relevance:0}]),relevance:0},p={\nbegin:\"(\"+r+\"[\\\\*&\\\\s]+)+\"+g,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,\nkeywords:u,illegal:/[^\\w\\s\\*&:<>.]/,contains:[{begin:a,keywords:u,relevance:0},{\nbegin:g,returnBegin:!0,contains:[e.inherit(d,{className:\"title.function\"})],\nrelevance:0},{relevance:0,match:/,/},{className:\"params\",begin:/\\(/,end:/\\)/,\nkeywords:u,relevance:0,contains:[t,e.C_BLOCK_COMMENT_MODE,o,l,s,{begin:/\\(/,\nend:/\\)/,keywords:u,relevance:0,contains:[\"self\",t,e.C_BLOCK_COMMENT_MODE,o,l,s]\n}]},s,t,e.C_BLOCK_COMMENT_MODE,c]};return{name:\"C\",aliases:[\"h\"],keywords:u,\ndisableAutodetect:!0,illegal:\"</\",contains:[].concat(m,p,b,[c,{\nbegin:e.IDENT_RE+\"::\",keywords:u},{className:\"class\",\nbeginKeywords:\"enum class struct union\",end:/[{;:<>=]/,contains:[{\nbeginKeywords:\"final class struct\"},e.TITLE_MODE]}]),exports:{preprocessor:c,\nstrings:o,keywords:u}}},grmr_cpp:e=>{const n=e.regex,t=e.COMMENT(\"//\",\"$\",{\ncontains:[{begin:/\\\\\\n/}]\n}),a=\"decltype\\\\(auto\\\\)\",i=\"[a-zA-Z_]\\\\w*::\",r=\"(?!struct)(\"+a+\"|\"+n.optional(i)+\"[a-zA-Z_]\\\\w*\"+n.optional(\"<[^<>]+>\")+\")\",s={\nclassName:\"type\",begin:\"\\\\b[a-z\\\\d_]*_t\\\\b\"},o={className:\"string\",variants:[{\nbegin:'(u8?|U|L)?\"',end:'\"',illegal:\"\\\\n\",contains:[e.BACKSLASH_ESCAPE]},{\nbegin:\"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",\nend:\"'\",illegal:\".\"},e.END_SAME_AS_BEGIN({\nbegin:/(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,end:/\\)([^()\\\\ ]{0,16})\"/})]},l={\nclassName:\"number\",variants:[{begin:\"\\\\b(0b[01']+)\"},{\nbegin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)\"\n},{\nbegin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n}],relevance:0},c={className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,keywords:{\nkeyword:\"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"\n},contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(o,{className:\"string\"}),{\nclassName:\"string\",begin:/<.*?>/},t,e.C_BLOCK_COMMENT_MODE]},d={\nclassName:\"title\",begin:n.optional(i)+e.IDENT_RE,relevance:0\n},g=n.optional(i)+e.IDENT_RE+\"\\\\s*\\\\(\",u={\ntype:[\"bool\",\"char\",\"char16_t\",\"char32_t\",\"char8_t\",\"double\",\"float\",\"int\",\"long\",\"short\",\"void\",\"wchar_t\",\"unsigned\",\"signed\",\"const\",\"static\"],\nkeyword:[\"alignas\",\"alignof\",\"and\",\"and_eq\",\"asm\",\"atomic_cancel\",\"atomic_commit\",\"atomic_noexcept\",\"auto\",\"bitand\",\"bitor\",\"break\",\"case\",\"catch\",\"class\",\"co_await\",\"co_return\",\"co_yield\",\"compl\",\"concept\",\"const_cast|10\",\"consteval\",\"constexpr\",\"constinit\",\"continue\",\"decltype\",\"default\",\"delete\",\"do\",\"dynamic_cast|10\",\"else\",\"enum\",\"explicit\",\"export\",\"extern\",\"false\",\"final\",\"for\",\"friend\",\"goto\",\"if\",\"import\",\"inline\",\"module\",\"mutable\",\"namespace\",\"new\",\"noexcept\",\"not\",\"not_eq\",\"nullptr\",\"operator\",\"or\",\"or_eq\",\"override\",\"private\",\"protected\",\"public\",\"reflexpr\",\"register\",\"reinterpret_cast|10\",\"requires\",\"return\",\"sizeof\",\"static_assert\",\"static_cast|10\",\"struct\",\"switch\",\"synchronized\",\"template\",\"this\",\"thread_local\",\"throw\",\"transaction_safe\",\"transaction_safe_dynamic\",\"true\",\"try\",\"typedef\",\"typeid\",\"typename\",\"union\",\"using\",\"virtual\",\"volatile\",\"while\",\"xor\",\"xor_eq\"],\nliteral:[\"NULL\",\"false\",\"nullopt\",\"nullptr\",\"true\"],built_in:[\"_Pragma\"],\n_type_hints:[\"any\",\"auto_ptr\",\"barrier\",\"binary_semaphore\",\"bitset\",\"complex\",\"condition_variable\",\"condition_variable_any\",\"counting_semaphore\",\"deque\",\"false_type\",\"future\",\"imaginary\",\"initializer_list\",\"istringstream\",\"jthread\",\"latch\",\"lock_guard\",\"multimap\",\"multiset\",\"mutex\",\"optional\",\"ostringstream\",\"packaged_task\",\"pair\",\"promise\",\"priority_queue\",\"queue\",\"recursive_mutex\",\"recursive_timed_mutex\",\"scoped_lock\",\"set\",\"shared_future\",\"shared_lock\",\"shared_mutex\",\"shared_timed_mutex\",\"shared_ptr\",\"stack\",\"string_view\",\"stringstream\",\"timed_mutex\",\"thread\",\"true_type\",\"tuple\",\"unique_lock\",\"unique_ptr\",\"unordered_map\",\"unordered_multimap\",\"unordered_multiset\",\"unordered_set\",\"variant\",\"vector\",\"weak_ptr\",\"wstring\",\"wstring_view\"]\n},b={className:\"function.dispatch\",relevance:0,keywords:{\n_hint:[\"abort\",\"abs\",\"acos\",\"apply\",\"as_const\",\"asin\",\"atan\",\"atan2\",\"calloc\",\"ceil\",\"cerr\",\"cin\",\"clog\",\"cos\",\"cosh\",\"cout\",\"declval\",\"endl\",\"exchange\",\"exit\",\"exp\",\"fabs\",\"floor\",\"fmod\",\"forward\",\"fprintf\",\"fputs\",\"free\",\"frexp\",\"fscanf\",\"future\",\"invoke\",\"isalnum\",\"isalpha\",\"iscntrl\",\"isdigit\",\"isgraph\",\"islower\",\"isprint\",\"ispunct\",\"isspace\",\"isupper\",\"isxdigit\",\"labs\",\"launder\",\"ldexp\",\"log\",\"log10\",\"make_pair\",\"make_shared\",\"make_shared_for_overwrite\",\"make_tuple\",\"make_unique\",\"malloc\",\"memchr\",\"memcmp\",\"memcpy\",\"memset\",\"modf\",\"move\",\"pow\",\"printf\",\"putchar\",\"puts\",\"realloc\",\"scanf\",\"sin\",\"sinh\",\"snprintf\",\"sprintf\",\"sqrt\",\"sscanf\",\"std\",\"stderr\",\"stdin\",\"stdout\",\"strcat\",\"strchr\",\"strcmp\",\"strcpy\",\"strcspn\",\"strlen\",\"strncat\",\"strncmp\",\"strncpy\",\"strpbrk\",\"strrchr\",\"strspn\",\"strstr\",\"swap\",\"tan\",\"tanh\",\"terminate\",\"to_underlying\",\"tolower\",\"toupper\",\"vfprintf\",\"visit\",\"vprintf\",\"vsprintf\"]\n},\nbegin:n.concat(/\\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,e.IDENT_RE,n.lookahead(/(<[^<>]+>|)\\s*\\(/))\n},m=[b,c,s,t,e.C_BLOCK_COMMENT_MODE,l,o],p={variants:[{begin:/=/,end:/;/},{\nbegin:/\\(/,end:/\\)/},{beginKeywords:\"new throw return else\",end:/;/}],\nkeywords:u,contains:m.concat([{begin:/\\(/,end:/\\)/,keywords:u,\ncontains:m.concat([\"self\"]),relevance:0}]),relevance:0},_={className:\"function\",\nbegin:\"(\"+r+\"[\\\\*&\\\\s]+)+\"+g,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,\nkeywords:u,illegal:/[^\\w\\s\\*&:<>.]/,contains:[{begin:a,keywords:u,relevance:0},{\nbegin:g,returnBegin:!0,contains:[d],relevance:0},{begin:/::/,relevance:0},{\nbegin:/:/,endsWithParent:!0,contains:[o,l]},{relevance:0,match:/,/},{\nclassName:\"params\",begin:/\\(/,end:/\\)/,keywords:u,relevance:0,\ncontains:[t,e.C_BLOCK_COMMENT_MODE,o,l,s,{begin:/\\(/,end:/\\)/,keywords:u,\nrelevance:0,contains:[\"self\",t,e.C_BLOCK_COMMENT_MODE,o,l,s]}]\n},s,t,e.C_BLOCK_COMMENT_MODE,c]};return{name:\"C++\",\naliases:[\"cc\",\"c++\",\"h++\",\"hpp\",\"hh\",\"hxx\",\"cxx\"],keywords:u,illegal:\"</\",\nclassNameAliases:{\"function.dispatch\":\"built_in\"},\ncontains:[].concat(p,_,b,m,[c,{\nbegin:\"\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)\",\nend:\">\",keywords:u,contains:[\"self\",s]},{begin:e.IDENT_RE+\"::\",keywords:u},{\nmatch:[/\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,/\\s+/,/\\w+/],\nclassName:{1:\"keyword\",3:\"title.class\"}}])}},grmr_csharp:e=>{const n={\nkeyword:[\"abstract\",\"as\",\"base\",\"break\",\"case\",\"catch\",\"class\",\"const\",\"continue\",\"do\",\"else\",\"event\",\"explicit\",\"extern\",\"finally\",\"fixed\",\"for\",\"foreach\",\"goto\",\"if\",\"implicit\",\"in\",\"interface\",\"internal\",\"is\",\"lock\",\"namespace\",\"new\",\"operator\",\"out\",\"override\",\"params\",\"private\",\"protected\",\"public\",\"readonly\",\"record\",\"ref\",\"return\",\"scoped\",\"sealed\",\"sizeof\",\"stackalloc\",\"static\",\"struct\",\"switch\",\"this\",\"throw\",\"try\",\"typeof\",\"unchecked\",\"unsafe\",\"using\",\"virtual\",\"void\",\"volatile\",\"while\"].concat([\"add\",\"alias\",\"and\",\"ascending\",\"async\",\"await\",\"by\",\"descending\",\"equals\",\"from\",\"get\",\"global\",\"group\",\"init\",\"into\",\"join\",\"let\",\"nameof\",\"not\",\"notnull\",\"on\",\"or\",\"orderby\",\"partial\",\"remove\",\"select\",\"set\",\"unmanaged\",\"value|0\",\"var\",\"when\",\"where\",\"with\",\"yield\"]),\nbuilt_in:[\"bool\",\"byte\",\"char\",\"decimal\",\"delegate\",\"double\",\"dynamic\",\"enum\",\"float\",\"int\",\"long\",\"nint\",\"nuint\",\"object\",\"sbyte\",\"short\",\"string\",\"ulong\",\"uint\",\"ushort\"],\nliteral:[\"default\",\"false\",\"null\",\"true\"]},t=e.inherit(e.TITLE_MODE,{\nbegin:\"[a-zA-Z](\\\\.?\\\\w)*\"}),a={className:\"number\",variants:[{\nbegin:\"\\\\b(0b[01']+)\"},{\nbegin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)(u|U|l|L|ul|UL|f|F|b|B)\"},{\nbegin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"\n}],relevance:0},i={className:\"string\",begin:'@\"',end:'\"',contains:[{begin:'\"\"'}]\n},r=e.inherit(i,{illegal:/\\n/}),s={className:\"subst\",begin:/\\{/,end:/\\}/,\nkeywords:n},o=e.inherit(s,{illegal:/\\n/}),l={className:\"string\",begin:/\\$\"/,\nend:'\"',illegal:/\\n/,contains:[{begin:/\\{\\{/},{begin:/\\}\\}/\n},e.BACKSLASH_ESCAPE,o]},c={className:\"string\",begin:/\\$@\"/,end:'\"',contains:[{\nbegin:/\\{\\{/},{begin:/\\}\\}/},{begin:'\"\"'},s]},d=e.inherit(c,{illegal:/\\n/,\ncontains:[{begin:/\\{\\{/},{begin:/\\}\\}/},{begin:'\"\"'},o]})\n;s.contains=[c,l,i,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.C_BLOCK_COMMENT_MODE],\no.contains=[d,l,r,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.inherit(e.C_BLOCK_COMMENT_MODE,{\nillegal:/\\n/})];const g={variants:[c,l,i,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]\n},u={begin:\"<\",end:\">\",contains:[{beginKeywords:\"in out\"},t]\n},b=e.IDENT_RE+\"(<\"+e.IDENT_RE+\"(\\\\s*,\\\\s*\"+e.IDENT_RE+\")*>)?(\\\\[\\\\])?\",m={\nbegin:\"@\"+e.IDENT_RE,relevance:0};return{name:\"C#\",aliases:[\"cs\",\"c#\"],\nkeywords:n,illegal:/::/,contains:[e.COMMENT(\"///\",\"$\",{returnBegin:!0,\ncontains:[{className:\"doctag\",variants:[{begin:\"///\",relevance:0},{\nbegin:\"\\x3c!--|--\\x3e\"},{begin:\"</?\",end:\">\"}]}]\n}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"meta\",begin:\"#\",\nend:\"$\",keywords:{\nkeyword:\"if else elif endif define undef warning error line region endregion pragma checksum\"\n}},g,a,{beginKeywords:\"class interface\",relevance:0,end:/[{;=]/,\nillegal:/[^\\s:,]/,contains:[{beginKeywords:\"where class\"\n},t,u,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:\"namespace\",\nrelevance:0,end:/[{;=]/,illegal:/[^\\s:]/,\ncontains:[t,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{\nbeginKeywords:\"record\",relevance:0,end:/[{;=]/,illegal:/[^\\s:]/,\ncontains:[t,u,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:\"meta\",\nbegin:\"^\\\\s*\\\\[(?=[\\\\w])\",excludeBegin:!0,end:\"\\\\]\",excludeEnd:!0,contains:[{\nclassName:\"string\",begin:/\"/,end:/\"/}]},{\nbeginKeywords:\"new return throw await else\",relevance:0},{className:\"function\",\nbegin:\"(\"+b+\"\\\\s+)+\"+e.IDENT_RE+\"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",returnBegin:!0,\nend:/\\s*[{;=]/,excludeEnd:!0,keywords:n,contains:[{\nbeginKeywords:\"public private protected static internal protected abstract async extern override unsafe virtual new sealed partial\",\nrelevance:0},{begin:e.IDENT_RE+\"\\\\s*(<[^=]+>\\\\s*)?\\\\(\",returnBegin:!0,\ncontains:[e.TITLE_MODE,u],relevance:0},{match:/\\(\\)/},{className:\"params\",\nbegin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,relevance:0,\ncontains:[g,a,e.C_BLOCK_COMMENT_MODE]\n},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},m]}},grmr_css:e=>{\nconst n=e.regex,t=ie(e),a=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE];return{\nname:\"CSS\",case_insensitive:!0,illegal:/[=|'\\$]/,keywords:{\nkeyframePosition:\"from to\"},classNameAliases:{keyframePosition:\"selector-tag\"},\ncontains:[t.BLOCK_COMMENT,{begin:/-(webkit|moz|ms|o)-(?=[a-z])/\n},t.CSS_NUMBER_MODE,{className:\"selector-id\",begin:/#[A-Za-z0-9_-]+/,relevance:0\n},{className:\"selector-class\",begin:\"\\\\.[a-zA-Z-][a-zA-Z0-9_-]*\",relevance:0\n},t.ATTRIBUTE_SELECTOR_MODE,{className:\"selector-pseudo\",variants:[{\nbegin:\":(\"+oe.join(\"|\")+\")\"},{begin:\":(:)?(\"+le.join(\"|\")+\")\"}]\n},t.CSS_VARIABLE,{className:\"attribute\",begin:\"\\\\b(\"+ce.join(\"|\")+\")\\\\b\"},{\nbegin:/:/,end:/[;}{]/,\ncontains:[t.BLOCK_COMMENT,t.HEXCOLOR,t.IMPORTANT,t.CSS_NUMBER_MODE,...a,{\nbegin:/(url|data-uri)\\(/,end:/\\)/,relevance:0,keywords:{built_in:\"url data-uri\"\n},contains:[...a,{className:\"string\",begin:/[^)]/,endsWithParent:!0,\nexcludeEnd:!0}]},t.FUNCTION_DISPATCH]},{begin:n.lookahead(/@/),end:\"[{;]\",\nrelevance:0,illegal:/:/,contains:[{className:\"keyword\",begin:/@-?\\w[\\w]*(-\\w+)*/\n},{begin:/\\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{\n$pattern:/[a-z-]+/,keyword:\"and or not only\",attribute:se.join(\" \")},contains:[{\nbegin:/[a-z-]+(?=:)/,className:\"attribute\"},...a,t.CSS_NUMBER_MODE]}]},{\nclassName:\"selector-tag\",begin:\"\\\\b(\"+re.join(\"|\")+\")\\\\b\"}]}},grmr_diff:e=>{\nconst n=e.regex;return{name:\"Diff\",aliases:[\"patch\"],contains:[{\nclassName:\"meta\",relevance:10,\nmatch:n.either(/^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,/^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,/^--- +\\d+,\\d+ +----$/)\n},{className:\"comment\",variants:[{\nbegin:n.either(/Index: /,/^index/,/={3,}/,/^-{3}/,/^\\*{3} /,/^\\+{3}/,/^diff --git/),\nend:/$/},{match:/^\\*{15}$/}]},{className:\"addition\",begin:/^\\+/,end:/$/},{\nclassName:\"deletion\",begin:/^-/,end:/$/},{className:\"addition\",begin:/^!/,\nend:/$/}]}},grmr_go:e=>{const n={\nkeyword:[\"break\",\"case\",\"chan\",\"const\",\"continue\",\"default\",\"defer\",\"else\",\"fallthrough\",\"for\",\"func\",\"go\",\"goto\",\"if\",\"import\",\"interface\",\"map\",\"package\",\"range\",\"return\",\"select\",\"struct\",\"switch\",\"type\",\"var\"],\ntype:[\"bool\",\"byte\",\"complex64\",\"complex128\",\"error\",\"float32\",\"float64\",\"int8\",\"int16\",\"int32\",\"int64\",\"string\",\"uint8\",\"uint16\",\"uint32\",\"uint64\",\"int\",\"uint\",\"uintptr\",\"rune\"],\nliteral:[\"true\",\"false\",\"iota\",\"nil\"],\nbuilt_in:[\"append\",\"cap\",\"close\",\"complex\",\"copy\",\"imag\",\"len\",\"make\",\"new\",\"panic\",\"print\",\"println\",\"real\",\"recover\",\"delete\"]\n};return{name:\"Go\",aliases:[\"golang\"],keywords:n,illegal:\"</\",\ncontains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"string\",\nvariants:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:\"`\",end:\"`\"}]},{\nclassName:\"number\",variants:[{begin:e.C_NUMBER_RE+\"[i]\",relevance:1\n},e.C_NUMBER_MODE]},{begin:/:=/},{className:\"function\",beginKeywords:\"func\",\nend:\"\\\\s*(\\\\{|$)\",excludeEnd:!0,contains:[e.TITLE_MODE,{className:\"params\",\nbegin:/\\(/,end:/\\)/,endsParent:!0,keywords:n,illegal:/[\"']/}]}]}},\ngrmr_graphql:e=>{const n=e.regex;return{name:\"GraphQL\",aliases:[\"gql\"],\ncase_insensitive:!0,disableAutodetect:!1,keywords:{\nkeyword:[\"query\",\"mutation\",\"subscription\",\"type\",\"input\",\"schema\",\"directive\",\"interface\",\"union\",\"scalar\",\"fragment\",\"enum\",\"on\"],\nliteral:[\"true\",\"false\",\"null\"]},\ncontains:[e.HASH_COMMENT_MODE,e.QUOTE_STRING_MODE,e.NUMBER_MODE,{\nscope:\"punctuation\",match:/[.]{3}/,relevance:0},{scope:\"punctuation\",\nbegin:/[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,relevance:0},{scope:\"variable\",begin:/\\$/,\nend:/\\W/,excludeEnd:!0,relevance:0},{scope:\"meta\",match:/@\\w+/,excludeEnd:!0},{\nscope:\"symbol\",begin:n.concat(/[_A-Za-z][_0-9A-Za-z]*/,n.lookahead(/\\s*:/)),\nrelevance:0}],illegal:[/[;<']/,/BEGIN/]}},grmr_ini:e=>{const n=e.regex,t={\nclassName:\"number\",relevance:0,variants:[{begin:/([+-]+)?[\\d]+_[\\d_]+/},{\nbegin:e.NUMBER_RE}]},a=e.COMMENT();a.variants=[{begin:/;/,end:/$/},{begin:/#/,\nend:/$/}];const i={className:\"variable\",variants:[{begin:/\\$[\\w\\d\"][\\w\\d_]*/},{\nbegin:/\\$\\{(.*?)\\}/}]},r={className:\"literal\",\nbegin:/\\bon|off|true|false|yes|no\\b/},s={className:\"string\",\ncontains:[e.BACKSLASH_ESCAPE],variants:[{begin:\"'''\",end:\"'''\",relevance:10},{\nbegin:'\"\"\"',end:'\"\"\"',relevance:10},{begin:'\"',end:'\"'},{begin:\"'\",end:\"'\"}]\n},o={begin:/\\[/,end:/\\]/,contains:[a,r,i,s,t,\"self\"],relevance:0\n},l=n.either(/[A-Za-z0-9_-]+/,/\"(\\\\\"|[^\"])*\"/,/'[^']*'/);return{\nname:\"TOML, also INI\",aliases:[\"toml\"],case_insensitive:!0,illegal:/\\S/,\ncontains:[a,{className:\"section\",begin:/\\[+/,end:/\\]+/},{\nbegin:n.concat(l,\"(\\\\s*\\\\.\\\\s*\",l,\")*\",n.lookahead(/\\s*=\\s*[^#\\s]/)),\nclassName:\"attr\",starts:{end:/$/,contains:[a,o,r,i,s,t]}}]}},grmr_java:e=>{\nconst n=e.regex,t=\"[\\xc0-\\u02b8a-zA-Z_$][\\xc0-\\u02b8a-zA-Z_$0-9]*\",a=t+pe(\"(?:<\"+t+\"~~~(?:\\\\s*,\\\\s*\"+t+\"~~~)*>)?\",/~~~/g,2),i={\nkeyword:[\"synchronized\",\"abstract\",\"private\",\"var\",\"static\",\"if\",\"const \",\"for\",\"while\",\"strictfp\",\"finally\",\"protected\",\"import\",\"native\",\"final\",\"void\",\"enum\",\"else\",\"break\",\"transient\",\"catch\",\"instanceof\",\"volatile\",\"case\",\"assert\",\"package\",\"default\",\"public\",\"try\",\"switch\",\"continue\",\"throws\",\"protected\",\"public\",\"private\",\"module\",\"requires\",\"exports\",\"do\",\"sealed\",\"yield\",\"permits\"],\nliteral:[\"false\",\"true\",\"null\"],\ntype:[\"char\",\"boolean\",\"long\",\"float\",\"int\",\"byte\",\"short\",\"double\"],\nbuilt_in:[\"super\",\"this\"]},r={className:\"meta\",begin:\"@\"+t,contains:[{\nbegin:/\\(/,end:/\\)/,contains:[\"self\"]}]},s={className:\"params\",begin:/\\(/,\nend:/\\)/,keywords:i,relevance:0,contains:[e.C_BLOCK_COMMENT_MODE],endsParent:!0}\n;return{name:\"Java\",aliases:[\"jsp\"],keywords:i,illegal:/<\\/|#/,\ncontains:[e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{begin:/\\w+@/,\nrelevance:0},{className:\"doctag\",begin:\"@[A-Za-z]+\"}]}),{\nbegin:/import java\\.[a-z]+\\./,keywords:\"import\",relevance:2\n},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{begin:/\"\"\"/,end:/\"\"\"/,\nclassName:\"string\",contains:[e.BACKSLASH_ESCAPE]\n},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{\nmatch:[/\\b(?:class|interface|enum|extends|implements|new)/,/\\s+/,t],className:{\n1:\"keyword\",3:\"title.class\"}},{match:/non-sealed/,scope:\"keyword\"},{\nbegin:[n.concat(/(?!else)/,t),/\\s+/,t,/\\s+/,/=(?!=)/],className:{1:\"type\",\n3:\"variable\",5:\"operator\"}},{begin:[/record/,/\\s+/,t],className:{1:\"keyword\",\n3:\"title.class\"},contains:[s,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{\nbeginKeywords:\"new throw return else\",relevance:0},{\nbegin:[\"(?:\"+a+\"\\\\s+)\",e.UNDERSCORE_IDENT_RE,/\\s*(?=\\()/],className:{\n2:\"title.function\"},keywords:i,contains:[{className:\"params\",begin:/\\(/,\nend:/\\)/,keywords:i,relevance:0,\ncontains:[r,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,me,e.C_BLOCK_COMMENT_MODE]\n},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},me,r]}},grmr_javascript:Oe,\ngrmr_json:e=>{const n=[\"true\",\"false\",\"null\"],t={scope:\"literal\",\nbeginKeywords:n.join(\" \")};return{name:\"JSON\",keywords:{literal:n},contains:[{\nclassName:\"attr\",begin:/\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,relevance:1.01},{\nmatch:/[{}[\\],:]/,className:\"punctuation\",relevance:0\n},e.QUOTE_STRING_MODE,t,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],\nillegal:\"\\\\S\"}},grmr_kotlin:e=>{const n={\nkeyword:\"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual\",\nbuilt_in:\"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",\nliteral:\"true false null\"},t={className:\"symbol\",begin:e.UNDERSCORE_IDENT_RE+\"@\"\n},a={className:\"subst\",begin:/\\$\\{/,end:/\\}/,contains:[e.C_NUMBER_MODE]},i={\nclassName:\"variable\",begin:\"\\\\$\"+e.UNDERSCORE_IDENT_RE},r={className:\"string\",\nvariants:[{begin:'\"\"\"',end:'\"\"\"(?=[^\"])',contains:[i,a]},{begin:\"'\",end:\"'\",\nillegal:/\\n/,contains:[e.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"',illegal:/\\n/,\ncontains:[e.BACKSLASH_ESCAPE,i,a]}]};a.contains.push(r);const s={\nclassName:\"meta\",\nbegin:\"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\"+e.UNDERSCORE_IDENT_RE+\")?\"\n},o={className:\"meta\",begin:\"@\"+e.UNDERSCORE_IDENT_RE,contains:[{begin:/\\(/,\nend:/\\)/,contains:[e.inherit(r,{className:\"string\"}),\"self\"]}]\n},l=me,c=e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[e.C_BLOCK_COMMENT_MODE]}),d={\nvariants:[{className:\"type\",begin:e.UNDERSCORE_IDENT_RE},{begin:/\\(/,end:/\\)/,\ncontains:[]}]},g=d;return g.variants[1].contains=[d],d.variants[1].contains=[g],\n{name:\"Kotlin\",aliases:[\"kt\",\"kts\"],keywords:n,\ncontains:[e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{className:\"doctag\",\nbegin:\"@[A-Za-z]+\"}]}),e.C_LINE_COMMENT_MODE,c,{className:\"keyword\",\nbegin:/\\b(break|continue|return|this)\\b/,starts:{contains:[{className:\"symbol\",\nbegin:/@\\w+/}]}},t,s,o,{className:\"function\",beginKeywords:\"fun\",end:\"[(]|$\",\nreturnBegin:!0,excludeEnd:!0,keywords:n,relevance:5,contains:[{\nbegin:e.UNDERSCORE_IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,relevance:0,\ncontains:[e.UNDERSCORE_TITLE_MODE]},{className:\"type\",begin:/</,end:/>/,\nkeywords:\"reified\",relevance:0},{className:\"params\",begin:/\\(/,end:/\\)/,\nendsParent:!0,keywords:n,relevance:0,contains:[{begin:/:/,end:/[=,\\/]/,\nendsWithParent:!0,contains:[d,e.C_LINE_COMMENT_MODE,c],relevance:0\n},e.C_LINE_COMMENT_MODE,c,s,o,r,e.C_NUMBER_MODE]},c]},{\nbegin:[/class|interface|trait/,/\\s+/,e.UNDERSCORE_IDENT_RE],beginScope:{\n3:\"title.class\"},keywords:\"class interface trait\",end:/[:\\{(]|$/,excludeEnd:!0,\nillegal:\"extends implements\",contains:[{\nbeginKeywords:\"public protected internal private constructor\"\n},e.UNDERSCORE_TITLE_MODE,{className:\"type\",begin:/</,end:/>/,excludeBegin:!0,\nexcludeEnd:!0,relevance:0},{className:\"type\",begin:/[,:]\\s*/,end:/[<\\(,){\\s]|$/,\nexcludeBegin:!0,returnEnd:!0},s,o]},r,{className:\"meta\",begin:\"^#!/usr/bin/env\",\nend:\"$\",illegal:\"\\n\"},l]}},grmr_less:e=>{\nconst n=ie(e),t=de,a=\"[\\\\w-]+\",i=\"(\"+a+\"|@\\\\{\"+a+\"\\\\})\",r=[],s=[],o=e=>({\nclassName:\"string\",begin:\"~?\"+e+\".*?\"+e}),l=(e,n,t)=>({className:e,begin:n,\nrelevance:t}),c={$pattern:/[a-z-]+/,keyword:\"and or not only\",\nattribute:se.join(\" \")},d={begin:\"\\\\(\",end:\"\\\\)\",contains:s,keywords:c,\nrelevance:0}\n;s.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,o(\"'\"),o('\"'),n.CSS_NUMBER_MODE,{\nbegin:\"(url|data-uri)\\\\(\",starts:{className:\"string\",end:\"[\\\\)\\\\n]\",\nexcludeEnd:!0}\n},n.HEXCOLOR,d,l(\"variable\",\"@@?\"+a,10),l(\"variable\",\"@\\\\{\"+a+\"\\\\}\"),l(\"built_in\",\"~?`[^`]*?`\"),{\nclassName:\"attribute\",begin:a+\"\\\\s*:\",end:\":\",returnBegin:!0,excludeEnd:!0\n},n.IMPORTANT,{beginKeywords:\"and not\"},n.FUNCTION_DISPATCH);const g=s.concat({\nbegin:/\\{/,end:/\\}/,contains:r}),u={beginKeywords:\"when\",endsWithParent:!0,\ncontains:[{beginKeywords:\"and not\"}].concat(s)},b={begin:i+\"\\\\s*:\",\nreturnBegin:!0,end:/[;}]/,relevance:0,contains:[{begin:/-(webkit|moz|ms|o)-/\n},n.CSS_VARIABLE,{className:\"attribute\",begin:\"\\\\b(\"+ce.join(\"|\")+\")\\\\b\",\nend:/(?=:)/,starts:{endsWithParent:!0,illegal:\"[<=$]\",relevance:0,contains:s}}]\n},m={className:\"keyword\",\nbegin:\"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b\",\nstarts:{end:\"[;{}]\",keywords:c,returnEnd:!0,contains:s,relevance:0}},p={\nclassName:\"variable\",variants:[{begin:\"@\"+a+\"\\\\s*:\",relevance:15},{begin:\"@\"+a\n}],starts:{end:\"[;}]\",returnEnd:!0,contains:g}},_={variants:[{\nbegin:\"[\\\\.#:&\\\\[>]\",end:\"[;{}]\"},{begin:i,end:/\\{/}],returnBegin:!0,\nreturnEnd:!0,illegal:\"[<='$\\\"]\",relevance:0,\ncontains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,u,l(\"keyword\",\"all\\\\b\"),l(\"variable\",\"@\\\\{\"+a+\"\\\\}\"),{\nbegin:\"\\\\b(\"+re.join(\"|\")+\")\\\\b\",className:\"selector-tag\"\n},n.CSS_NUMBER_MODE,l(\"selector-tag\",i,0),l(\"selector-id\",\"#\"+i),l(\"selector-class\",\"\\\\.\"+i,0),l(\"selector-tag\",\"&\",0),n.ATTRIBUTE_SELECTOR_MODE,{\nclassName:\"selector-pseudo\",begin:\":(\"+oe.join(\"|\")+\")\"},{\nclassName:\"selector-pseudo\",begin:\":(:)?(\"+le.join(\"|\")+\")\"},{begin:/\\(/,\nend:/\\)/,relevance:0,contains:g},{begin:\"!important\"},n.FUNCTION_DISPATCH]},h={\nbegin:a+\":(:)?\"+`(${t.join(\"|\")})`,returnBegin:!0,contains:[_]}\n;return r.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,m,p,h,b,_,u,n.FUNCTION_DISPATCH),\n{name:\"Less\",case_insensitive:!0,illegal:\"[=>'/<($\\\"]\",contains:r}},\ngrmr_lua:e=>{const n=\"\\\\[=*\\\\[\",t=\"\\\\]=*\\\\]\",a={begin:n,end:t,contains:[\"self\"]\n},i=[e.COMMENT(\"--(?!\"+n+\")\",\"$\"),e.COMMENT(\"--\"+n,t,{contains:[a],relevance:10\n})];return{name:\"Lua\",keywords:{$pattern:e.UNDERSCORE_IDENT_RE,\nliteral:\"true false nil\",\nkeyword:\"and break do else elseif end for goto if in local not or repeat return then until while\",\nbuilt_in:\"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove\"\n},contains:i.concat([{className:\"function\",beginKeywords:\"function\",end:\"\\\\)\",\ncontains:[e.inherit(e.TITLE_MODE,{\nbegin:\"([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*\"}),{className:\"params\",\nbegin:\"\\\\(\",endsWithParent:!0,contains:i}].concat(i)\n},e.C_NUMBER_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:\"string\",\nbegin:n,end:t,contains:[a],relevance:5}])}},grmr_makefile:e=>{const n={\nclassName:\"variable\",variants:[{begin:\"\\\\$\\\\(\"+e.UNDERSCORE_IDENT_RE+\"\\\\)\",\ncontains:[e.BACKSLASH_ESCAPE]},{begin:/\\$[@%<?\\^\\+\\*]/}]},t={className:\"string\",\nbegin:/\"/,end:/\"/,contains:[e.BACKSLASH_ESCAPE,n]},a={className:\"variable\",\nbegin:/\\$\\([\\w-]+\\s/,end:/\\)/,keywords:{\nbuilt_in:\"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value\"\n},contains:[n]},i={begin:\"^\"+e.UNDERSCORE_IDENT_RE+\"\\\\s*(?=[:+?]?=)\"},r={\nclassName:\"section\",begin:/^[^\\s]+:/,end:/$/,contains:[n]};return{\nname:\"Makefile\",aliases:[\"mk\",\"mak\",\"make\"],keywords:{$pattern:/[\\w-]+/,\nkeyword:\"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath\"\n},contains:[e.HASH_COMMENT_MODE,n,t,a,i,{className:\"meta\",begin:/^\\.PHONY:/,\nend:/$/,keywords:{$pattern:/[\\.\\w]+/,keyword:\".PHONY\"}},r]}},grmr_xml:e=>{\nconst n=e.regex,t=n.concat(/[\\p{L}_]/u,n.optional(/[\\p{L}0-9_.-]*:/u),/[\\p{L}0-9_.-]*/u),a={\nclassName:\"symbol\",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},i={begin:/\\s/,\ncontains:[{className:\"keyword\",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\\n/}]\n},r=e.inherit(i,{begin:/\\(/,end:/\\)/}),s=e.inherit(e.APOS_STRING_MODE,{\nclassName:\"string\"}),o=e.inherit(e.QUOTE_STRING_MODE,{className:\"string\"}),l={\nendsWithParent:!0,illegal:/</,relevance:0,contains:[{className:\"attr\",\nbegin:/[\\p{L}0-9._:-]+/u,relevance:0},{begin:/=\\s*/,relevance:0,contains:[{\nclassName:\"string\",endsParent:!0,variants:[{begin:/\"/,end:/\"/,contains:[a]},{\nbegin:/'/,end:/'/,contains:[a]},{begin:/[^\\s\"'=<>`]+/}]}]}]};return{\nname:\"HTML, XML\",\naliases:[\"html\",\"xhtml\",\"rss\",\"atom\",\"xjb\",\"xsd\",\"xsl\",\"plist\",\"wsf\",\"svg\"],\ncase_insensitive:!0,unicodeRegex:!0,contains:[{className:\"meta\",begin:/<![a-z]/,\nend:/>/,relevance:10,contains:[i,o,s,r,{begin:/\\[/,end:/\\]/,contains:[{\nclassName:\"meta\",begin:/<![a-z]/,end:/>/,contains:[i,r,o,s]}]}]\n},e.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\\[CDATA\\[/,end:/\\]\\]>/,\nrelevance:10},a,{className:\"meta\",end:/\\?>/,variants:[{begin:/<\\?xml/,\nrelevance:10,contains:[o]},{begin:/<\\?[a-z][a-z0-9]+/}]},{className:\"tag\",\nbegin:/<style(?=\\s|>)/,end:/>/,keywords:{name:\"style\"},contains:[l],starts:{\nend:/<\\/style>/,returnEnd:!0,subLanguage:[\"css\",\"xml\"]}},{className:\"tag\",\nbegin:/<script(?=\\s|>)/,end:/>/,keywords:{name:\"script\"},contains:[l],starts:{\nend:/<\\/script>/,returnEnd:!0,subLanguage:[\"javascript\",\"handlebars\",\"xml\"]}},{\nclassName:\"tag\",begin:/<>|<\\/>/},{className:\"tag\",\nbegin:n.concat(/</,n.lookahead(n.concat(t,n.either(/\\/>/,/>/,/\\s/)))),\nend:/\\/?>/,contains:[{className:\"name\",begin:t,relevance:0,starts:l}]},{\nclassName:\"tag\",begin:n.concat(/<\\//,n.lookahead(n.concat(t,/>/))),contains:[{\nclassName:\"name\",begin:t,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}\n},grmr_markdown:e=>{const n={begin:/<\\/?[A-Za-z_]/,end:\">\",subLanguage:\"xml\",\nrelevance:0},t={variants:[{begin:/\\[.+?\\]\\[.*?\\]/,relevance:0},{\nbegin:/\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\nrelevance:2},{\nbegin:e.regex.concat(/\\[.+?\\]\\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\\/\\/.*?\\)/),\nrelevance:2},{begin:/\\[.+?\\]\\([./?&#].*?\\)/,relevance:1},{\nbegin:/\\[.*?\\]\\(.*?\\)/,relevance:0}],returnBegin:!0,contains:[{match:/\\[(?=\\])/\n},{className:\"string\",relevance:0,begin:\"\\\\[\",end:\"\\\\]\",excludeBegin:!0,\nreturnEnd:!0},{className:\"link\",relevance:0,begin:\"\\\\]\\\\(\",end:\"\\\\)\",\nexcludeBegin:!0,excludeEnd:!0},{className:\"symbol\",relevance:0,begin:\"\\\\]\\\\[\",\nend:\"\\\\]\",excludeBegin:!0,excludeEnd:!0}]},a={className:\"strong\",contains:[],\nvariants:[{begin:/_{2}(?!\\s)/,end:/_{2}/},{begin:/\\*{2}(?!\\s)/,end:/\\*{2}/}]\n},i={className:\"emphasis\",contains:[],variants:[{begin:/\\*(?![*\\s])/,end:/\\*/},{\nbegin:/_(?![_\\s])/,end:/_/,relevance:0}]},r=e.inherit(a,{contains:[]\n}),s=e.inherit(i,{contains:[]});a.contains.push(s),i.contains.push(r)\n;let o=[n,t];return[a,i,r,s].forEach((e=>{e.contains=e.contains.concat(o)\n})),o=o.concat(a,i),{name:\"Markdown\",aliases:[\"md\",\"mkdown\",\"mkd\"],contains:[{\nclassName:\"section\",variants:[{begin:\"^#{1,6}\",end:\"$\",contains:o},{\nbegin:\"(?=^.+?\\\\n[=-]{2,}$)\",contains:[{begin:\"^[=-]*$\"},{begin:\"^\",end:\"\\\\n\",\ncontains:o}]}]},n,{className:\"bullet\",begin:\"^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)\",\nend:\"\\\\s+\",excludeEnd:!0},a,i,{className:\"quote\",begin:\"^>\\\\s+\",contains:o,\nend:\"$\"},{className:\"code\",variants:[{begin:\"(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*\"},{\nbegin:\"(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*\"},{begin:\"```\",end:\"```+[ ]*$\"},{\nbegin:\"~~~\",end:\"~~~+[ ]*$\"},{begin:\"`.+?`\"},{begin:\"(?=^( {4}|\\\\t))\",\ncontains:[{begin:\"^( {4}|\\\\t)\",end:\"(\\\\n)$\"}],relevance:0}]},{\nbegin:\"^[-\\\\*]{3,}\",end:\"$\"},t,{begin:/^\\[[^\\n]+\\]:/,returnBegin:!0,contains:[{\nclassName:\"symbol\",begin:/\\[/,end:/\\]/,excludeBegin:!0,excludeEnd:!0},{\nclassName:\"link\",begin:/:\\s*/,end:/$/,excludeBegin:!0}]}]}},grmr_objectivec:e=>{\nconst n=/[a-zA-Z@][a-zA-Z0-9_]*/,t={$pattern:n,\nkeyword:[\"@interface\",\"@class\",\"@protocol\",\"@implementation\"]};return{\nname:\"Objective-C\",aliases:[\"mm\",\"objc\",\"obj-c\",\"obj-c++\",\"objective-c++\"],\nkeywords:{\"variable.language\":[\"this\",\"super\"],$pattern:n,\nkeyword:[\"while\",\"export\",\"sizeof\",\"typedef\",\"const\",\"struct\",\"for\",\"union\",\"volatile\",\"static\",\"mutable\",\"if\",\"do\",\"return\",\"goto\",\"enum\",\"else\",\"break\",\"extern\",\"asm\",\"case\",\"default\",\"register\",\"explicit\",\"typename\",\"switch\",\"continue\",\"inline\",\"readonly\",\"assign\",\"readwrite\",\"self\",\"@synchronized\",\"id\",\"typeof\",\"nonatomic\",\"IBOutlet\",\"IBAction\",\"strong\",\"weak\",\"copy\",\"in\",\"out\",\"inout\",\"bycopy\",\"byref\",\"oneway\",\"__strong\",\"__weak\",\"__block\",\"__autoreleasing\",\"@private\",\"@protected\",\"@public\",\"@try\",\"@property\",\"@end\",\"@throw\",\"@catch\",\"@finally\",\"@autoreleasepool\",\"@synthesize\",\"@dynamic\",\"@selector\",\"@optional\",\"@required\",\"@encode\",\"@package\",\"@import\",\"@defs\",\"@compatibility_alias\",\"__bridge\",\"__bridge_transfer\",\"__bridge_retained\",\"__bridge_retain\",\"__covariant\",\"__contravariant\",\"__kindof\",\"_Nonnull\",\"_Nullable\",\"_Null_unspecified\",\"__FUNCTION__\",\"__PRETTY_FUNCTION__\",\"__attribute__\",\"getter\",\"setter\",\"retain\",\"unsafe_unretained\",\"nonnull\",\"nullable\",\"null_unspecified\",\"null_resettable\",\"class\",\"instancetype\",\"NS_DESIGNATED_INITIALIZER\",\"NS_UNAVAILABLE\",\"NS_REQUIRES_SUPER\",\"NS_RETURNS_INNER_POINTER\",\"NS_INLINE\",\"NS_AVAILABLE\",\"NS_DEPRECATED\",\"NS_ENUM\",\"NS_OPTIONS\",\"NS_SWIFT_UNAVAILABLE\",\"NS_ASSUME_NONNULL_BEGIN\",\"NS_ASSUME_NONNULL_END\",\"NS_REFINED_FOR_SWIFT\",\"NS_SWIFT_NAME\",\"NS_SWIFT_NOTHROW\",\"NS_DURING\",\"NS_HANDLER\",\"NS_ENDHANDLER\",\"NS_VALUERETURN\",\"NS_VOIDRETURN\"],\nliteral:[\"false\",\"true\",\"FALSE\",\"TRUE\",\"nil\",\"YES\",\"NO\",\"NULL\"],\nbuilt_in:[\"dispatch_once_t\",\"dispatch_queue_t\",\"dispatch_sync\",\"dispatch_async\",\"dispatch_once\"],\ntype:[\"int\",\"float\",\"char\",\"unsigned\",\"signed\",\"short\",\"long\",\"double\",\"wchar_t\",\"unichar\",\"void\",\"bool\",\"BOOL\",\"id|0\",\"_Bool\"]\n},illegal:\"</\",contains:[{className:\"built_in\",\nbegin:\"\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+\"\n},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{\nclassName:\"string\",variants:[{begin:'@\"',end:'\"',illegal:\"\\\\n\",\ncontains:[e.BACKSLASH_ESCAPE]}]},{className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,\nkeywords:{\nkeyword:\"if else elif endif define undef warning error line pragma ifdef ifndef include\"\n},contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(e.QUOTE_STRING_MODE,{\nclassName:\"string\"}),{className:\"string\",begin:/<.*?>/,end:/$/,illegal:\"\\\\n\"\n},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:\"class\",\nbegin:\"(\"+t.keyword.join(\"|\")+\")\\\\b\",end:/(\\{|$)/,excludeEnd:!0,keywords:t,\ncontains:[e.UNDERSCORE_TITLE_MODE]},{begin:\"\\\\.\"+e.UNDERSCORE_IDENT_RE,\nrelevance:0}]}},grmr_perl:e=>{const n=e.regex,t=/[dualxmsipngr]{0,12}/,a={\n$pattern:/[\\w.]+/,\nkeyword:\"abs accept alarm and atan2 bind binmode bless break caller chdir chmod chomp chop chown chr chroot close closedir connect continue cos crypt dbmclose dbmopen defined delete die do dump each else elsif endgrent endhostent endnetent endprotoent endpwent endservent eof eval exec exists exit exp fcntl fileno flock for foreach fork format formline getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername getpgrp getpriority getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwuid getservbyname getservbyport getservent getsockname getsockopt given glob gmtime goto grep gt hex if index int ioctl join keys kill last lc lcfirst length link listen local localtime log lstat lt ma map mkdir msgctl msgget msgrcv msgsnd my ne next no not oct open opendir or ord our pack package pipe pop pos print printf prototype push q|0 qq quotemeta qw qx rand read readdir readline readlink readpipe recv redo ref rename require reset return reverse rewinddir rindex rmdir say scalar seek seekdir select semctl semget semop send setgrent sethostent setnetent setpgrp setpriority setprotoent setpwent setservent setsockopt shift shmctl shmget shmread shmwrite shutdown sin sleep socket socketpair sort splice split sprintf sqrt srand stat state study sub substr symlink syscall sysopen sysread sysseek system syswrite tell telldir tie tied time times tr truncate uc ucfirst umask undef unless unlink unpack unshift untie until use utime values vec wait waitpid wantarray warn when while write x|0 xor y|0\"\n},i={className:\"subst\",begin:\"[$@]\\\\{\",end:\"\\\\}\",keywords:a},r={begin:/->\\{/,\nend:/\\}/},s={variants:[{begin:/\\$\\d/},{\nbegin:n.concat(/[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\"(?![A-Za-z])(?![@$%])\")\n},{begin:/[$%@][^\\s\\w{]/,relevance:0}]\n},o=[e.BACKSLASH_ESCAPE,i,s],l=[/!/,/\\//,/\\|/,/\\?/,/'/,/\"/,/#/],c=(e,a,i=\"\\\\1\")=>{\nconst r=\"\\\\1\"===i?i:n.concat(i,a)\n;return n.concat(n.concat(\"(?:\",e,\")\"),a,/(?:\\\\.|[^\\\\\\/])*?/,r,/(?:\\\\.|[^\\\\\\/])*?/,i,t)\n},d=(e,a,i)=>n.concat(n.concat(\"(?:\",e,\")\"),a,/(?:\\\\.|[^\\\\\\/])*?/,i,t),g=[s,e.HASH_COMMENT_MODE,e.COMMENT(/^=\\w/,/=cut/,{\nendsWithParent:!0}),r,{className:\"string\",contains:o,variants:[{\nbegin:\"q[qwxr]?\\\\s*\\\\(\",end:\"\\\\)\",relevance:5},{begin:\"q[qwxr]?\\\\s*\\\\[\",\nend:\"\\\\]\",relevance:5},{begin:\"q[qwxr]?\\\\s*\\\\{\",end:\"\\\\}\",relevance:5},{\nbegin:\"q[qwxr]?\\\\s*\\\\|\",end:\"\\\\|\",relevance:5},{begin:\"q[qwxr]?\\\\s*<\",end:\">\",\nrelevance:5},{begin:\"qw\\\\s+q\",end:\"q\",relevance:5},{begin:\"'\",end:\"'\",\ncontains:[e.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"'},{begin:\"`\",end:\"`\",\ncontains:[e.BACKSLASH_ESCAPE]},{begin:/\\{\\w+\\}/,relevance:0},{\nbegin:\"-?\\\\w+\\\\s*=>\",relevance:0}]},{className:\"number\",\nbegin:\"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",\nrelevance:0},{\nbegin:\"(\\\\/\\\\/|\"+e.RE_STARTERS_RE+\"|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*\",\nkeywords:\"split return print reverse grep\",relevance:0,\ncontains:[e.HASH_COMMENT_MODE,{className:\"regexp\",variants:[{\nbegin:c(\"s|tr|y\",n.either(...l,{capture:!0}))},{begin:c(\"s|tr|y\",\"\\\\(\",\"\\\\)\")},{\nbegin:c(\"s|tr|y\",\"\\\\[\",\"\\\\]\")},{begin:c(\"s|tr|y\",\"\\\\{\",\"\\\\}\")}],relevance:2},{\nclassName:\"regexp\",variants:[{begin:/(m|qr)\\/\\//,relevance:0},{\nbegin:d(\"(?:m|qr)?\",/\\//,/\\//)},{begin:d(\"m|qr\",n.either(...l,{capture:!0\n}),/\\1/)},{begin:d(\"m|qr\",/\\(/,/\\)/)},{begin:d(\"m|qr\",/\\[/,/\\]/)},{\nbegin:d(\"m|qr\",/\\{/,/\\}/)}]}]},{className:\"function\",beginKeywords:\"sub\",\nend:\"(\\\\s*\\\\(.*?\\\\))?[;{]\",excludeEnd:!0,relevance:5,contains:[e.TITLE_MODE]},{\nbegin:\"-\\\\w\\\\b\",relevance:0},{begin:\"^__DATA__$\",end:\"^__END__$\",\nsubLanguage:\"mojolicious\",contains:[{begin:\"^@@.*\",end:\"$\",className:\"comment\"}]\n}];return i.contains=g,r.contains=g,{name:\"Perl\",aliases:[\"pl\",\"pm\"],keywords:a,\ncontains:g}},grmr_php:e=>{\nconst n=e.regex,t=/(?![A-Za-z0-9])(?![$])/,a=n.concat(/[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,t),i=n.concat(/(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,t),r={\nscope:\"variable\",match:\"\\\\$+\"+a},s={scope:\"subst\",variants:[{begin:/\\$\\w+/},{\nbegin:/\\{\\$/,end:/\\}/}]},o=e.inherit(e.APOS_STRING_MODE,{illegal:null\n}),l=\"[ \\t\\n]\",c={scope:\"string\",variants:[e.inherit(e.QUOTE_STRING_MODE,{\nillegal:null,contains:e.QUOTE_STRING_MODE.contains.concat(s)}),o,{\nbegin:/<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,end:/[ \\t]*(\\w+)\\b/,\ncontains:e.QUOTE_STRING_MODE.contains.concat(s),\"on:begin\":(e,n)=>{\nn.data._beginMatch=e[1]||e[2]},\"on:end\":(e,n)=>{\nn.data._beginMatch!==e[1]&&n.ignoreMatch()}},e.END_SAME_AS_BEGIN({\nbegin:/<<<[ \\t]*'(\\w+)'\\n/,end:/[ \\t]*(\\w+)\\b/})]},d={scope:\"number\",variants:[{\nbegin:\"\\\\b0[bB][01]+(?:_[01]+)*\\\\b\"},{begin:\"\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b\"},{\nbegin:\"\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b\"},{\nbegin:\"(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?\"\n}],relevance:0\n},g=[\"false\",\"null\",\"true\"],u=[\"__CLASS__\",\"__DIR__\",\"__FILE__\",\"__FUNCTION__\",\"__COMPILER_HALT_OFFSET__\",\"__LINE__\",\"__METHOD__\",\"__NAMESPACE__\",\"__TRAIT__\",\"die\",\"echo\",\"exit\",\"include\",\"include_once\",\"print\",\"require\",\"require_once\",\"array\",\"abstract\",\"and\",\"as\",\"binary\",\"bool\",\"boolean\",\"break\",\"callable\",\"case\",\"catch\",\"class\",\"clone\",\"const\",\"continue\",\"declare\",\"default\",\"do\",\"double\",\"else\",\"elseif\",\"empty\",\"enddeclare\",\"endfor\",\"endforeach\",\"endif\",\"endswitch\",\"endwhile\",\"enum\",\"eval\",\"extends\",\"final\",\"finally\",\"float\",\"for\",\"foreach\",\"from\",\"global\",\"goto\",\"if\",\"implements\",\"instanceof\",\"insteadof\",\"int\",\"integer\",\"interface\",\"isset\",\"iterable\",\"list\",\"match|0\",\"mixed\",\"new\",\"never\",\"object\",\"or\",\"private\",\"protected\",\"public\",\"readonly\",\"real\",\"return\",\"string\",\"switch\",\"throw\",\"trait\",\"try\",\"unset\",\"use\",\"var\",\"void\",\"while\",\"xor\",\"yield\"],b=[\"Error|0\",\"AppendIterator\",\"ArgumentCountError\",\"ArithmeticError\",\"ArrayIterator\",\"ArrayObject\",\"AssertionError\",\"BadFunctionCallException\",\"BadMethodCallException\",\"CachingIterator\",\"CallbackFilterIterator\",\"CompileError\",\"Countable\",\"DirectoryIterator\",\"DivisionByZeroError\",\"DomainException\",\"EmptyIterator\",\"ErrorException\",\"Exception\",\"FilesystemIterator\",\"FilterIterator\",\"GlobIterator\",\"InfiniteIterator\",\"InvalidArgumentException\",\"IteratorIterator\",\"LengthException\",\"LimitIterator\",\"LogicException\",\"MultipleIterator\",\"NoRewindIterator\",\"OutOfBoundsException\",\"OutOfRangeException\",\"OuterIterator\",\"OverflowException\",\"ParentIterator\",\"ParseError\",\"RangeException\",\"RecursiveArrayIterator\",\"RecursiveCachingIterator\",\"RecursiveCallbackFilterIterator\",\"RecursiveDirectoryIterator\",\"RecursiveFilterIterator\",\"RecursiveIterator\",\"RecursiveIteratorIterator\",\"RecursiveRegexIterator\",\"RecursiveTreeIterator\",\"RegexIterator\",\"RuntimeException\",\"SeekableIterator\",\"SplDoublyLinkedList\",\"SplFileInfo\",\"SplFileObject\",\"SplFixedArray\",\"SplHeap\",\"SplMaxHeap\",\"SplMinHeap\",\"SplObjectStorage\",\"SplObserver\",\"SplPriorityQueue\",\"SplQueue\",\"SplStack\",\"SplSubject\",\"SplTempFileObject\",\"TypeError\",\"UnderflowException\",\"UnexpectedValueException\",\"UnhandledMatchError\",\"ArrayAccess\",\"BackedEnum\",\"Closure\",\"Fiber\",\"Generator\",\"Iterator\",\"IteratorAggregate\",\"Serializable\",\"Stringable\",\"Throwable\",\"Traversable\",\"UnitEnum\",\"WeakReference\",\"WeakMap\",\"Directory\",\"__PHP_Incomplete_Class\",\"parent\",\"php_user_filter\",\"self\",\"static\",\"stdClass\"],m={\nkeyword:u,literal:(e=>{const n=[];return e.forEach((e=>{\nn.push(e),e.toLowerCase()===e?n.push(e.toUpperCase()):n.push(e.toLowerCase())\n})),n})(g),built_in:b},p=e=>e.map((e=>e.replace(/\\|\\d+$/,\"\"))),_={variants:[{\nmatch:[/new/,n.concat(l,\"+\"),n.concat(\"(?!\",p(b).join(\"\\\\b|\"),\"\\\\b)\"),i],scope:{\n1:\"keyword\",4:\"title.class\"}}]},h=n.concat(a,\"\\\\b(?!\\\\()\"),f={variants:[{\nmatch:[n.concat(/::/,n.lookahead(/(?!class\\b)/)),h],scope:{2:\"variable.constant\"\n}},{match:[/::/,/class/],scope:{2:\"variable.language\"}},{\nmatch:[i,n.concat(/::/,n.lookahead(/(?!class\\b)/)),h],scope:{1:\"title.class\",\n3:\"variable.constant\"}},{match:[i,n.concat(\"::\",n.lookahead(/(?!class\\b)/))],\nscope:{1:\"title.class\"}},{match:[i,/::/,/class/],scope:{1:\"title.class\",\n3:\"variable.language\"}}]},E={scope:\"attr\",\nmatch:n.concat(a,n.lookahead(\":\"),n.lookahead(/(?!::)/))},y={relevance:0,\nbegin:/\\(/,end:/\\)/,keywords:m,contains:[E,r,f,e.C_BLOCK_COMMENT_MODE,c,d,_]\n},N={relevance:0,\nmatch:[/\\b/,n.concat(\"(?!fn\\\\b|function\\\\b|\",p(u).join(\"\\\\b|\"),\"|\",p(b).join(\"\\\\b|\"),\"\\\\b)\"),a,n.concat(l,\"*\"),n.lookahead(/(?=\\()/)],\nscope:{3:\"title.function.invoke\"},contains:[y]};y.contains.push(N)\n;const w=[E,f,e.C_BLOCK_COMMENT_MODE,c,d,_];return{case_insensitive:!1,\nkeywords:m,contains:[{begin:n.concat(/#\\[\\s*/,i),beginScope:\"meta\",end:/]/,\nendScope:\"meta\",keywords:{literal:g,keyword:[\"new\",\"array\"]},contains:[{\nbegin:/\\[/,end:/]/,keywords:{literal:g,keyword:[\"new\",\"array\"]},\ncontains:[\"self\",...w]},...w,{scope:\"meta\",match:i}]\n},e.HASH_COMMENT_MODE,e.COMMENT(\"//\",\"$\"),e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[{\nscope:\"doctag\",match:\"@[A-Za-z]+\"}]}),{match:/__halt_compiler\\(\\);/,\nkeywords:\"__halt_compiler\",starts:{scope:\"comment\",end:e.MATCH_NOTHING_RE,\ncontains:[{match:/\\?>/,scope:\"meta\",endsParent:!0}]}},{scope:\"meta\",variants:[{\nbegin:/<\\?php/,relevance:10},{begin:/<\\?=/},{begin:/<\\?/,relevance:.1},{\nbegin:/\\?>/}]},{scope:\"variable.language\",match:/\\$this\\b/},r,N,f,{\nmatch:[/const/,/\\s/,a],scope:{1:\"keyword\",3:\"variable.constant\"}},_,{\nscope:\"function\",relevance:0,beginKeywords:\"fn function\",end:/[;{]/,\nexcludeEnd:!0,illegal:\"[$%\\\\[]\",contains:[{beginKeywords:\"use\"\n},e.UNDERSCORE_TITLE_MODE,{begin:\"=>\",endsParent:!0},{scope:\"params\",\nbegin:\"\\\\(\",end:\"\\\\)\",excludeBegin:!0,excludeEnd:!0,keywords:m,\ncontains:[\"self\",r,f,e.C_BLOCK_COMMENT_MODE,c,d]}]},{scope:\"class\",variants:[{\nbeginKeywords:\"enum\",illegal:/[($\"]/},{beginKeywords:\"class interface trait\",\nillegal:/[:($\"]/}],relevance:0,end:/\\{/,excludeEnd:!0,contains:[{\nbeginKeywords:\"extends implements\"},e.UNDERSCORE_TITLE_MODE]},{\nbeginKeywords:\"namespace\",relevance:0,end:\";\",illegal:/[.']/,\ncontains:[e.inherit(e.UNDERSCORE_TITLE_MODE,{scope:\"title.class\"})]},{\nbeginKeywords:\"use\",relevance:0,end:\";\",contains:[{\nmatch:/\\b(as|const|function)\\b/,scope:\"keyword\"},e.UNDERSCORE_TITLE_MODE]},c,d]}\n},grmr_php_template:e=>({name:\"PHP template\",subLanguage:\"xml\",contains:[{\nbegin:/<\\?(php|=)?/,end:/\\?>/,subLanguage:\"php\",contains:[{begin:\"/\\\\*\",\nend:\"\\\\*/\",skip:!0},{begin:'b\"',end:'\"',skip:!0},{begin:\"b'\",end:\"'\",skip:!0\n},e.inherit(e.APOS_STRING_MODE,{illegal:null,className:null,contains:null,\nskip:!0}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null,className:null,\ncontains:null,skip:!0})]}]}),grmr_plaintext:e=>({name:\"Plain text\",\naliases:[\"text\",\"txt\"],disableAutodetect:!0}),grmr_python:e=>{\nconst n=e.regex,t=/[\\p{XID_Start}_]\\p{XID_Continue}*/u,a=[\"and\",\"as\",\"assert\",\"async\",\"await\",\"break\",\"case\",\"class\",\"continue\",\"def\",\"del\",\"elif\",\"else\",\"except\",\"finally\",\"for\",\"from\",\"global\",\"if\",\"import\",\"in\",\"is\",\"lambda\",\"match\",\"nonlocal|10\",\"not\",\"or\",\"pass\",\"raise\",\"return\",\"try\",\"while\",\"with\",\"yield\"],i={\n$pattern:/[A-Za-z]\\w+|__\\w+__/,keyword:a,\nbuilt_in:[\"__import__\",\"abs\",\"all\",\"any\",\"ascii\",\"bin\",\"bool\",\"breakpoint\",\"bytearray\",\"bytes\",\"callable\",\"chr\",\"classmethod\",\"compile\",\"complex\",\"delattr\",\"dict\",\"dir\",\"divmod\",\"enumerate\",\"eval\",\"exec\",\"filter\",\"float\",\"format\",\"frozenset\",\"getattr\",\"globals\",\"hasattr\",\"hash\",\"help\",\"hex\",\"id\",\"input\",\"int\",\"isinstance\",\"issubclass\",\"iter\",\"len\",\"list\",\"locals\",\"map\",\"max\",\"memoryview\",\"min\",\"next\",\"object\",\"oct\",\"open\",\"ord\",\"pow\",\"print\",\"property\",\"range\",\"repr\",\"reversed\",\"round\",\"set\",\"setattr\",\"slice\",\"sorted\",\"staticmethod\",\"str\",\"sum\",\"super\",\"tuple\",\"type\",\"vars\",\"zip\"],\nliteral:[\"__debug__\",\"Ellipsis\",\"False\",\"None\",\"NotImplemented\",\"True\"],\ntype:[\"Any\",\"Callable\",\"Coroutine\",\"Dict\",\"List\",\"Literal\",\"Generic\",\"Optional\",\"Sequence\",\"Set\",\"Tuple\",\"Type\",\"Union\"]\n},r={className:\"meta\",begin:/^(>>>|\\.\\.\\.) /},s={className:\"subst\",begin:/\\{/,\nend:/\\}/,keywords:i,illegal:/#/},o={begin:/\\{\\{/,relevance:0},l={\nclassName:\"string\",contains:[e.BACKSLASH_ESCAPE],variants:[{\nbegin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,\ncontains:[e.BACKSLASH_ESCAPE,r],relevance:10},{\nbegin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,end:/\"\"\"/,\ncontains:[e.BACKSLASH_ESCAPE,r],relevance:10},{\nbegin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,\ncontains:[e.BACKSLASH_ESCAPE,r,o,s]},{begin:/([fF][rR]|[rR][fF]|[fF])\"\"\"/,\nend:/\"\"\"/,contains:[e.BACKSLASH_ESCAPE,r,o,s]},{begin:/([uU]|[rR])'/,end:/'/,\nrelevance:10},{begin:/([uU]|[rR])\"/,end:/\"/,relevance:10},{\nbegin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])\"/,\nend:/\"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,\ncontains:[e.BACKSLASH_ESCAPE,o,s]},{begin:/([fF][rR]|[rR][fF]|[fF])\"/,end:/\"/,\ncontains:[e.BACKSLASH_ESCAPE,o,s]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]\n},c=\"[0-9](_?[0-9])*\",d=`(\\\\b(${c}))?\\\\.(${c})|\\\\b(${c})\\\\.`,g=\"\\\\b|\"+a.join(\"|\"),u={\nclassName:\"number\",relevance:0,variants:[{\nbegin:`(\\\\b(${c})|(${d}))[eE][+-]?(${c})[jJ]?(?=${g})`},{begin:`(${d})[jJ]?`},{\nbegin:`\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${g})`},{\nbegin:`\\\\b0[bB](_?[01])+[lL]?(?=${g})`},{begin:`\\\\b0[oO](_?[0-7])+[lL]?(?=${g})`\n},{begin:`\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${g})`},{begin:`\\\\b(${c})[jJ](?=${g})`\n}]},b={className:\"comment\",begin:n.lookahead(/# type:/),end:/$/,keywords:i,\ncontains:[{begin:/# type:/},{begin:/#/,end:/\\b\\B/,endsWithParent:!0}]},m={\nclassName:\"params\",variants:[{className:\"\",begin:/\\(\\s*\\)/,skip:!0},{begin:/\\(/,\nend:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:i,\ncontains:[\"self\",r,u,l,e.HASH_COMMENT_MODE]}]};return s.contains=[l,u,r],{\nname:\"Python\",aliases:[\"py\",\"gyp\",\"ipython\"],unicodeRegex:!0,keywords:i,\nillegal:/(<\\/|\\?)|=>/,contains:[r,u,{begin:/\\bself\\b/},{beginKeywords:\"if\",\nrelevance:0},l,b,e.HASH_COMMENT_MODE,{match:[/\\bdef/,/\\s+/,t],scope:{\n1:\"keyword\",3:\"title.function\"},contains:[m]},{variants:[{\nmatch:[/\\bclass/,/\\s+/,t,/\\s*/,/\\(\\s*/,t,/\\s*\\)/]},{match:[/\\bclass/,/\\s+/,t]}],\nscope:{1:\"keyword\",3:\"title.class\",6:\"title.class.inherited\"}},{\nclassName:\"meta\",begin:/^[\\t ]*@/,end:/(?=#)|$/,contains:[u,m,l]}]}},\ngrmr_python_repl:e=>({aliases:[\"pycon\"],contains:[{className:\"meta.prompt\",\nstarts:{end:/ |$/,starts:{end:\"$\",subLanguage:\"python\"}},variants:[{\nbegin:/^>>>(?=[ ]|$)/},{begin:/^\\.\\.\\.(?=[ ]|$)/}]}]}),grmr_r:e=>{\nconst n=e.regex,t=/(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/,a=n.either(/0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,/0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,/(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/),i=/[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/,r=n.either(/[()]/,/[{}]/,/\\[\\[/,/[[\\]]/,/\\\\/,/,/)\n;return{name:\"R\",keywords:{$pattern:t,\nkeyword:\"function if in break next repeat else for while\",\nliteral:\"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10\",\nbuilt_in:\"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm\"\n},contains:[e.COMMENT(/#'/,/$/,{contains:[{scope:\"doctag\",match:/@examples/,\nstarts:{end:n.lookahead(n.either(/\\n^#'\\s*(?=@[a-zA-Z]+)/,/\\n^(?!#')/)),\nendsParent:!0}},{scope:\"doctag\",begin:\"@param\",end:/$/,contains:[{\nscope:\"variable\",variants:[{match:t},{match:/`(?:\\\\.|[^`\\\\])+`/}],endsParent:!0\n}]},{scope:\"doctag\",match:/@[a-zA-Z]+/},{scope:\"keyword\",match:/\\\\[a-zA-Z]+/}]\n}),e.HASH_COMMENT_MODE,{scope:\"string\",contains:[e.BACKSLASH_ESCAPE],\nvariants:[e.END_SAME_AS_BEGIN({begin:/[rR]\"(-*)\\(/,end:/\\)(-*)\"/\n}),e.END_SAME_AS_BEGIN({begin:/[rR]\"(-*)\\{/,end:/\\}(-*)\"/\n}),e.END_SAME_AS_BEGIN({begin:/[rR]\"(-*)\\[/,end:/\\](-*)\"/\n}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\\(/,end:/\\)(-*)'/\n}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\\{/,end:/\\}(-*)'/\n}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\\[/,end:/\\](-*)'/}),{begin:'\"',end:'\"',\nrelevance:0},{begin:\"'\",end:\"'\",relevance:0}]},{relevance:0,variants:[{scope:{\n1:\"operator\",2:\"number\"},match:[i,a]},{scope:{1:\"operator\",2:\"number\"},\nmatch:[/%[^%]*%/,a]},{scope:{1:\"punctuation\",2:\"number\"},match:[r,a]},{scope:{\n2:\"number\"},match:[/[^a-zA-Z0-9._]|^/,a]}]},{scope:{3:\"operator\"},\nmatch:[t,/\\s+/,/<-/,/\\s+/]},{scope:\"operator\",relevance:0,variants:[{match:i},{\nmatch:/%[^%]*%/}]},{scope:\"punctuation\",relevance:0,match:r},{begin:\"`\",end:\"`\",\ncontains:[{begin:/\\\\./}]}]}},grmr_ruby:e=>{\nconst n=e.regex,t=\"([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)\",a=n.either(/\\b([A-Z]+[a-z0-9]+)+/,/\\b([A-Z]+[a-z0-9]+)+[A-Z]+/),i=n.concat(a,/(::\\w+)*/),r={\n\"variable.constant\":[\"__FILE__\",\"__LINE__\",\"__ENCODING__\"],\n\"variable.language\":[\"self\",\"super\"],\nkeyword:[\"alias\",\"and\",\"begin\",\"BEGIN\",\"break\",\"case\",\"class\",\"defined\",\"do\",\"else\",\"elsif\",\"end\",\"END\",\"ensure\",\"for\",\"if\",\"in\",\"module\",\"next\",\"not\",\"or\",\"redo\",\"require\",\"rescue\",\"retry\",\"return\",\"then\",\"undef\",\"unless\",\"until\",\"when\",\"while\",\"yield\",\"include\",\"extend\",\"prepend\",\"public\",\"private\",\"protected\",\"raise\",\"throw\"],\nbuilt_in:[\"proc\",\"lambda\",\"attr_accessor\",\"attr_reader\",\"attr_writer\",\"define_method\",\"private_constant\",\"module_function\"],\nliteral:[\"true\",\"false\",\"nil\"]},s={className:\"doctag\",begin:\"@[A-Za-z]+\"},o={\nbegin:\"#<\",end:\">\"},l=[e.COMMENT(\"#\",\"$\",{contains:[s]\n}),e.COMMENT(\"^=begin\",\"^=end\",{contains:[s],relevance:10\n}),e.COMMENT(\"^__END__\",e.MATCH_NOTHING_RE)],c={className:\"subst\",begin:/#\\{/,\nend:/\\}/,keywords:r},d={className:\"string\",contains:[e.BACKSLASH_ESCAPE,c],\nvariants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/`/,end:/`/},{\nbegin:/%[qQwWx]?\\(/,end:/\\)/},{begin:/%[qQwWx]?\\[/,end:/\\]/},{\nbegin:/%[qQwWx]?\\{/,end:/\\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\\//,\nend:/\\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{\nbegin:/%[qQwWx]?\\|/,end:/\\|/},{begin:/\\B\\?(\\\\\\d{1,3})/},{\nbegin:/\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/},{begin:/\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/},{\nbegin:/\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/},{\nbegin:/\\B\\?\\\\(c|C-)[\\x20-\\x7e]/},{begin:/\\B\\?\\\\?\\S/},{\nbegin:n.concat(/<<[-~]?'?/,n.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),\ncontains:[e.END_SAME_AS_BEGIN({begin:/(\\w+)/,end:/(\\w+)/,\ncontains:[e.BACKSLASH_ESCAPE,c]})]}]},g=\"[0-9](_?[0-9])*\",u={className:\"number\",\nrelevance:0,variants:[{\nbegin:`\\\\b([1-9](_?[0-9])*|0)(\\\\.(${g}))?([eE][+-]?(${g})|r)?i?\\\\b`},{\nbegin:\"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"},{begin:\"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n},{begin:\"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"},{\nbegin:\"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"},{\nbegin:\"\\\\b0(_?[0-7])+r?i?\\\\b\"}]},b={variants:[{match:/\\(\\)/},{\nclassName:\"params\",begin:/\\(/,end:/(?=\\))/,excludeBegin:!0,endsParent:!0,\nkeywords:r}]},m=[d,{variants:[{match:[/class\\s+/,i,/\\s+<\\s+/,i]},{\nmatch:[/\\b(class|module)\\s+/,i]}],scope:{2:\"title.class\",\n4:\"title.class.inherited\"},keywords:r},{match:[/(include|extend)\\s+/,i],scope:{\n2:\"title.class\"},keywords:r},{relevance:0,match:[i,/\\.new[. (]/],scope:{\n1:\"title.class\"}},{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/,\nclassName:\"variable.constant\"},{relevance:0,match:a,scope:\"title.class\"},{\nmatch:[/def/,/\\s+/,t],scope:{1:\"keyword\",3:\"title.function\"},contains:[b]},{\nbegin:e.IDENT_RE+\"::\"},{className:\"symbol\",\nbegin:e.UNDERSCORE_IDENT_RE+\"(!|\\\\?)?:\",relevance:0},{className:\"symbol\",\nbegin:\":(?!\\\\s)\",contains:[d,{begin:t}],relevance:0},u,{className:\"variable\",\nbegin:\"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])\"},{\nclassName:\"params\",begin:/\\|/,end:/\\|/,excludeBegin:!0,excludeEnd:!0,\nrelevance:0,keywords:r},{begin:\"(\"+e.RE_STARTERS_RE+\"|unless)\\\\s*\",\nkeywords:\"unless\",contains:[{className:\"regexp\",contains:[e.BACKSLASH_ESCAPE,c],\nillegal:/\\n/,variants:[{begin:\"/\",end:\"/[a-z]*\"},{begin:/%r\\{/,end:/\\}[a-z]*/},{\nbegin:\"%r\\\\(\",end:\"\\\\)[a-z]*\"},{begin:\"%r!\",end:\"![a-z]*\"},{begin:\"%r\\\\[\",\nend:\"\\\\][a-z]*\"}]}].concat(o,l),relevance:0}].concat(o,l)\n;c.contains=m,b.contains=m;const p=[{begin:/^\\s*=>/,starts:{end:\"$\",contains:m}\n},{className:\"meta.prompt\",\nbegin:\"^([>?]>|[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>)(?=[ ])\",\nstarts:{end:\"$\",keywords:r,contains:m}}];return l.unshift(o),{name:\"Ruby\",\naliases:[\"rb\",\"gemspec\",\"podspec\",\"thor\",\"irb\"],keywords:r,illegal:/\\/\\*/,\ncontains:[e.SHEBANG({binary:\"ruby\"})].concat(p).concat(l).concat(m)}},\ngrmr_rust:e=>{const n=e.regex,t={className:\"title.function.invoke\",relevance:0,\nbegin:n.concat(/\\b/,/(?!let\\b)/,e.IDENT_RE,n.lookahead(/\\s*\\(/))\n},a=\"([ui](8|16|32|64|128|size)|f(32|64))?\",i=[\"drop \",\"Copy\",\"Send\",\"Sized\",\"Sync\",\"Drop\",\"Fn\",\"FnMut\",\"FnOnce\",\"ToOwned\",\"Clone\",\"Debug\",\"PartialEq\",\"PartialOrd\",\"Eq\",\"Ord\",\"AsRef\",\"AsMut\",\"Into\",\"From\",\"Default\",\"Iterator\",\"Extend\",\"IntoIterator\",\"DoubleEndedIterator\",\"ExactSizeIterator\",\"SliceConcatExt\",\"ToString\",\"assert!\",\"assert_eq!\",\"bitflags!\",\"bytes!\",\"cfg!\",\"col!\",\"concat!\",\"concat_idents!\",\"debug_assert!\",\"debug_assert_eq!\",\"env!\",\"panic!\",\"file!\",\"format!\",\"format_args!\",\"include_bytes!\",\"include_str!\",\"line!\",\"local_data_key!\",\"module_path!\",\"option_env!\",\"print!\",\"println!\",\"select!\",\"stringify!\",\"try!\",\"unimplemented!\",\"unreachable!\",\"vec!\",\"write!\",\"writeln!\",\"macro_rules!\",\"assert_ne!\",\"debug_assert_ne!\"],r=[\"i8\",\"i16\",\"i32\",\"i64\",\"i128\",\"isize\",\"u8\",\"u16\",\"u32\",\"u64\",\"u128\",\"usize\",\"f32\",\"f64\",\"str\",\"char\",\"bool\",\"Box\",\"Option\",\"Result\",\"String\",\"Vec\"]\n;return{name:\"Rust\",aliases:[\"rs\"],keywords:{$pattern:e.IDENT_RE+\"!?\",type:r,\nkeyword:[\"abstract\",\"as\",\"async\",\"await\",\"become\",\"box\",\"break\",\"const\",\"continue\",\"crate\",\"do\",\"dyn\",\"else\",\"enum\",\"extern\",\"false\",\"final\",\"fn\",\"for\",\"if\",\"impl\",\"in\",\"let\",\"loop\",\"macro\",\"match\",\"mod\",\"move\",\"mut\",\"override\",\"priv\",\"pub\",\"ref\",\"return\",\"self\",\"Self\",\"static\",\"struct\",\"super\",\"trait\",\"true\",\"try\",\"type\",\"typeof\",\"unsafe\",\"unsized\",\"use\",\"virtual\",\"where\",\"while\",\"yield\"],\nliteral:[\"true\",\"false\",\"Some\",\"None\",\"Ok\",\"Err\"],built_in:i},illegal:\"</\",\ncontains:[e.C_LINE_COMMENT_MODE,e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[\"self\"]\n}),e.inherit(e.QUOTE_STRING_MODE,{begin:/b?\"/,illegal:null}),{\nclassName:\"string\",variants:[{begin:/b?r(#*)\"(.|\\n)*?\"\\1(?!#)/},{\nbegin:/b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/}]},{className:\"symbol\",\nbegin:/'[a-zA-Z_][a-zA-Z0-9_]*/},{className:\"number\",variants:[{\nbegin:\"\\\\b0b([01_]+)\"+a},{begin:\"\\\\b0o([0-7_]+)\"+a},{\nbegin:\"\\\\b0x([A-Fa-f0-9_]+)\"+a},{\nbegin:\"\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\"+a}],relevance:0},{\nbegin:[/fn/,/\\s+/,e.UNDERSCORE_IDENT_RE],className:{1:\"keyword\",\n3:\"title.function\"}},{className:\"meta\",begin:\"#!?\\\\[\",end:\"\\\\]\",contains:[{\nclassName:\"string\",begin:/\"/,end:/\"/}]},{\nbegin:[/let/,/\\s+/,/(?:mut\\s+)?/,e.UNDERSCORE_IDENT_RE],className:{1:\"keyword\",\n3:\"keyword\",4:\"variable\"}},{\nbegin:[/for/,/\\s+/,e.UNDERSCORE_IDENT_RE,/\\s+/,/in/],className:{1:\"keyword\",\n3:\"variable\",5:\"keyword\"}},{begin:[/type/,/\\s+/,e.UNDERSCORE_IDENT_RE],\nclassName:{1:\"keyword\",3:\"title.class\"}},{\nbegin:[/(?:trait|enum|struct|union|impl|for)/,/\\s+/,e.UNDERSCORE_IDENT_RE],\nclassName:{1:\"keyword\",3:\"title.class\"}},{begin:e.IDENT_RE+\"::\",keywords:{\nkeyword:\"Self\",built_in:i,type:r}},{className:\"punctuation\",begin:\"->\"},t]}},\ngrmr_scss:e=>{const n=ie(e),t=le,a=oe,i=\"@[a-z-]+\",r={className:\"variable\",\nbegin:\"(\\\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\\\b\",relevance:0};return{name:\"SCSS\",\ncase_insensitive:!0,illegal:\"[=/|']\",\ncontains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n.CSS_NUMBER_MODE,{\nclassName:\"selector-id\",begin:\"#[A-Za-z0-9_-]+\",relevance:0},{\nclassName:\"selector-class\",begin:\"\\\\.[A-Za-z0-9_-]+\",relevance:0\n},n.ATTRIBUTE_SELECTOR_MODE,{className:\"selector-tag\",\nbegin:\"\\\\b(\"+re.join(\"|\")+\")\\\\b\",relevance:0},{className:\"selector-pseudo\",\nbegin:\":(\"+a.join(\"|\")+\")\"},{className:\"selector-pseudo\",\nbegin:\":(:)?(\"+t.join(\"|\")+\")\"},r,{begin:/\\(/,end:/\\)/,\ncontains:[n.CSS_NUMBER_MODE]},n.CSS_VARIABLE,{className:\"attribute\",\nbegin:\"\\\\b(\"+ce.join(\"|\")+\")\\\\b\"},{\nbegin:\"\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b\"\n},{begin:/:/,end:/[;}{]/,relevance:0,\ncontains:[n.BLOCK_COMMENT,r,n.HEXCOLOR,n.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,n.IMPORTANT,n.FUNCTION_DISPATCH]\n},{begin:\"@(page|font-face)\",keywords:{$pattern:i,keyword:\"@page @font-face\"}},{\nbegin:\"@\",end:\"[{;]\",returnBegin:!0,keywords:{$pattern:/[a-z-]+/,\nkeyword:\"and or not only\",attribute:se.join(\" \")},contains:[{begin:i,\nclassName:\"keyword\"},{begin:/[a-z-]+(?=:)/,className:\"attribute\"\n},r,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,n.HEXCOLOR,n.CSS_NUMBER_MODE]\n},n.FUNCTION_DISPATCH]}},grmr_shell:e=>({name:\"Shell Session\",\naliases:[\"console\",\"shellsession\"],contains:[{className:\"meta.prompt\",\nbegin:/^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,starts:{end:/[^\\\\](?=\\s*$)/,\nsubLanguage:\"bash\"}}]}),grmr_sql:e=>{\nconst n=e.regex,t=e.COMMENT(\"--\",\"$\"),a=[\"true\",\"false\",\"unknown\"],i=[\"bigint\",\"binary\",\"blob\",\"boolean\",\"char\",\"character\",\"clob\",\"date\",\"dec\",\"decfloat\",\"decimal\",\"float\",\"int\",\"integer\",\"interval\",\"nchar\",\"nclob\",\"national\",\"numeric\",\"real\",\"row\",\"smallint\",\"time\",\"timestamp\",\"varchar\",\"varying\",\"varbinary\"],r=[\"abs\",\"acos\",\"array_agg\",\"asin\",\"atan\",\"avg\",\"cast\",\"ceil\",\"ceiling\",\"coalesce\",\"corr\",\"cos\",\"cosh\",\"count\",\"covar_pop\",\"covar_samp\",\"cume_dist\",\"dense_rank\",\"deref\",\"element\",\"exp\",\"extract\",\"first_value\",\"floor\",\"json_array\",\"json_arrayagg\",\"json_exists\",\"json_object\",\"json_objectagg\",\"json_query\",\"json_table\",\"json_table_primitive\",\"json_value\",\"lag\",\"last_value\",\"lead\",\"listagg\",\"ln\",\"log\",\"log10\",\"lower\",\"max\",\"min\",\"mod\",\"nth_value\",\"ntile\",\"nullif\",\"percent_rank\",\"percentile_cont\",\"percentile_disc\",\"position\",\"position_regex\",\"power\",\"rank\",\"regr_avgx\",\"regr_avgy\",\"regr_count\",\"regr_intercept\",\"regr_r2\",\"regr_slope\",\"regr_sxx\",\"regr_sxy\",\"regr_syy\",\"row_number\",\"sin\",\"sinh\",\"sqrt\",\"stddev_pop\",\"stddev_samp\",\"substring\",\"substring_regex\",\"sum\",\"tan\",\"tanh\",\"translate\",\"translate_regex\",\"treat\",\"trim\",\"trim_array\",\"unnest\",\"upper\",\"value_of\",\"var_pop\",\"var_samp\",\"width_bucket\"],s=[\"create table\",\"insert into\",\"primary key\",\"foreign key\",\"not null\",\"alter table\",\"add constraint\",\"grouping sets\",\"on overflow\",\"character set\",\"respect nulls\",\"ignore nulls\",\"nulls first\",\"nulls last\",\"depth first\",\"breadth first\"],o=r,l=[\"abs\",\"acos\",\"all\",\"allocate\",\"alter\",\"and\",\"any\",\"are\",\"array\",\"array_agg\",\"array_max_cardinality\",\"as\",\"asensitive\",\"asin\",\"asymmetric\",\"at\",\"atan\",\"atomic\",\"authorization\",\"avg\",\"begin\",\"begin_frame\",\"begin_partition\",\"between\",\"bigint\",\"binary\",\"blob\",\"boolean\",\"both\",\"by\",\"call\",\"called\",\"cardinality\",\"cascaded\",\"case\",\"cast\",\"ceil\",\"ceiling\",\"char\",\"char_length\",\"character\",\"character_length\",\"check\",\"classifier\",\"clob\",\"close\",\"coalesce\",\"collate\",\"collect\",\"column\",\"commit\",\"condition\",\"connect\",\"constraint\",\"contains\",\"convert\",\"copy\",\"corr\",\"corresponding\",\"cos\",\"cosh\",\"count\",\"covar_pop\",\"covar_samp\",\"create\",\"cross\",\"cube\",\"cume_dist\",\"current\",\"current_catalog\",\"current_date\",\"current_default_transform_group\",\"current_path\",\"current_role\",\"current_row\",\"current_schema\",\"current_time\",\"current_timestamp\",\"current_path\",\"current_role\",\"current_transform_group_for_type\",\"current_user\",\"cursor\",\"cycle\",\"date\",\"day\",\"deallocate\",\"dec\",\"decimal\",\"decfloat\",\"declare\",\"default\",\"define\",\"delete\",\"dense_rank\",\"deref\",\"describe\",\"deterministic\",\"disconnect\",\"distinct\",\"double\",\"drop\",\"dynamic\",\"each\",\"element\",\"else\",\"empty\",\"end\",\"end_frame\",\"end_partition\",\"end-exec\",\"equals\",\"escape\",\"every\",\"except\",\"exec\",\"execute\",\"exists\",\"exp\",\"external\",\"extract\",\"false\",\"fetch\",\"filter\",\"first_value\",\"float\",\"floor\",\"for\",\"foreign\",\"frame_row\",\"free\",\"from\",\"full\",\"function\",\"fusion\",\"get\",\"global\",\"grant\",\"group\",\"grouping\",\"groups\",\"having\",\"hold\",\"hour\",\"identity\",\"in\",\"indicator\",\"initial\",\"inner\",\"inout\",\"insensitive\",\"insert\",\"int\",\"integer\",\"intersect\",\"intersection\",\"interval\",\"into\",\"is\",\"join\",\"json_array\",\"json_arrayagg\",\"json_exists\",\"json_object\",\"json_objectagg\",\"json_query\",\"json_table\",\"json_table_primitive\",\"json_value\",\"lag\",\"language\",\"large\",\"last_value\",\"lateral\",\"lead\",\"leading\",\"left\",\"like\",\"like_regex\",\"listagg\",\"ln\",\"local\",\"localtime\",\"localtimestamp\",\"log\",\"log10\",\"lower\",\"match\",\"match_number\",\"match_recognize\",\"matches\",\"max\",\"member\",\"merge\",\"method\",\"min\",\"minute\",\"mod\",\"modifies\",\"module\",\"month\",\"multiset\",\"national\",\"natural\",\"nchar\",\"nclob\",\"new\",\"no\",\"none\",\"normalize\",\"not\",\"nth_value\",\"ntile\",\"null\",\"nullif\",\"numeric\",\"octet_length\",\"occurrences_regex\",\"of\",\"offset\",\"old\",\"omit\",\"on\",\"one\",\"only\",\"open\",\"or\",\"order\",\"out\",\"outer\",\"over\",\"overlaps\",\"overlay\",\"parameter\",\"partition\",\"pattern\",\"per\",\"percent\",\"percent_rank\",\"percentile_cont\",\"percentile_disc\",\"period\",\"portion\",\"position\",\"position_regex\",\"power\",\"precedes\",\"precision\",\"prepare\",\"primary\",\"procedure\",\"ptf\",\"range\",\"rank\",\"reads\",\"real\",\"recursive\",\"ref\",\"references\",\"referencing\",\"regr_avgx\",\"regr_avgy\",\"regr_count\",\"regr_intercept\",\"regr_r2\",\"regr_slope\",\"regr_sxx\",\"regr_sxy\",\"regr_syy\",\"release\",\"result\",\"return\",\"returns\",\"revoke\",\"right\",\"rollback\",\"rollup\",\"row\",\"row_number\",\"rows\",\"running\",\"savepoint\",\"scope\",\"scroll\",\"search\",\"second\",\"seek\",\"select\",\"sensitive\",\"session_user\",\"set\",\"show\",\"similar\",\"sin\",\"sinh\",\"skip\",\"smallint\",\"some\",\"specific\",\"specifictype\",\"sql\",\"sqlexception\",\"sqlstate\",\"sqlwarning\",\"sqrt\",\"start\",\"static\",\"stddev_pop\",\"stddev_samp\",\"submultiset\",\"subset\",\"substring\",\"substring_regex\",\"succeeds\",\"sum\",\"symmetric\",\"system\",\"system_time\",\"system_user\",\"table\",\"tablesample\",\"tan\",\"tanh\",\"then\",\"time\",\"timestamp\",\"timezone_hour\",\"timezone_minute\",\"to\",\"trailing\",\"translate\",\"translate_regex\",\"translation\",\"treat\",\"trigger\",\"trim\",\"trim_array\",\"true\",\"truncate\",\"uescape\",\"union\",\"unique\",\"unknown\",\"unnest\",\"update\",\"upper\",\"user\",\"using\",\"value\",\"values\",\"value_of\",\"var_pop\",\"var_samp\",\"varbinary\",\"varchar\",\"varying\",\"versioning\",\"when\",\"whenever\",\"where\",\"width_bucket\",\"window\",\"with\",\"within\",\"without\",\"year\",\"add\",\"asc\",\"collation\",\"desc\",\"final\",\"first\",\"last\",\"view\"].filter((e=>!r.includes(e))),c={\nbegin:n.concat(/\\b/,n.either(...o),/\\s*\\(/),relevance:0,keywords:{built_in:o}}\n;return{name:\"SQL\",case_insensitive:!0,illegal:/[{}]|<\\//,keywords:{\n$pattern:/\\b[\\w\\.]+/,keyword:((e,{exceptions:n,when:t}={})=>{const a=t\n;return n=n||[],e.map((e=>e.match(/\\|\\d+$/)||n.includes(e)?e:a(e)?e+\"|0\":e))\n})(l,{when:e=>e.length<3}),literal:a,type:i,\nbuilt_in:[\"current_catalog\",\"current_date\",\"current_default_transform_group\",\"current_path\",\"current_role\",\"current_schema\",\"current_transform_group_for_type\",\"current_user\",\"session_user\",\"system_time\",\"system_user\",\"current_time\",\"localtime\",\"current_timestamp\",\"localtimestamp\"]\n},contains:[{begin:n.either(...s),relevance:0,keywords:{$pattern:/[\\w\\.]+/,\nkeyword:l.concat(s),literal:a,type:i}},{className:\"type\",\nbegin:n.either(\"double precision\",\"large object\",\"with timezone\",\"without timezone\")\n},c,{className:\"variable\",begin:/@[a-z0-9][a-z0-9_]*/},{className:\"string\",\nvariants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/\"/,end:/\"/,\ncontains:[{begin:/\"\"/}]},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,{\nclassName:\"operator\",begin:/[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\nrelevance:0}]}},grmr_swift:e=>{const n={match:/\\s+/,relevance:0\n},t=e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[\"self\"]}),a=[e.C_LINE_COMMENT_MODE,t],i={\nmatch:[/\\./,m(...xe,...Me)],className:{2:\"keyword\"}},r={match:b(/\\./,m(...Ae)),\nrelevance:0},s=Ae.filter((e=>\"string\"==typeof e)).concat([\"_|0\"]),o={variants:[{\nclassName:\"keyword\",\nmatch:m(...Ae.filter((e=>\"string\"!=typeof e)).concat(Se).map(ke),...Me)}]},l={\n$pattern:m(/\\b\\w+/,/#\\w+/),keyword:s.concat(Re),literal:Ce},c=[i,r,o],g=[{\nmatch:b(/\\./,m(...De)),relevance:0},{className:\"built_in\",\nmatch:b(/\\b/,m(...De),/(?=\\()/)}],u={match:/->/,relevance:0},p=[u,{\nclassName:\"operator\",relevance:0,variants:[{match:Be},{match:`\\\\.(\\\\.|${Le})+`}]\n}],_=\"([0-9]_*)+\",h=\"([0-9a-fA-F]_*)+\",f={className:\"number\",relevance:0,\nvariants:[{match:`\\\\b(${_})(\\\\.(${_}))?([eE][+-]?(${_}))?\\\\b`},{\nmatch:`\\\\b0x(${h})(\\\\.(${h}))?([pP][+-]?(${_}))?\\\\b`},{match:/\\b0o([0-7]_*)+\\b/\n},{match:/\\b0b([01]_*)+\\b/}]},E=(e=\"\")=>({className:\"subst\",variants:[{\nmatch:b(/\\\\/,e,/[0\\\\tnr\"']/)},{match:b(/\\\\/,e,/u\\{[0-9a-fA-F]{1,8}\\}/)}]\n}),y=(e=\"\")=>({className:\"subst\",match:b(/\\\\/,e,/[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n}),N=(e=\"\")=>({className:\"subst\",label:\"interpol\",begin:b(/\\\\/,e,/\\(/),end:/\\)/\n}),w=(e=\"\")=>({begin:b(e,/\"\"\"/),end:b(/\"\"\"/,e),contains:[E(e),y(e),N(e)]\n}),v=(e=\"\")=>({begin:b(e,/\"/),end:b(/\"/,e),contains:[E(e),N(e)]}),O={\nclassName:\"string\",\nvariants:[w(),w(\"#\"),w(\"##\"),w(\"###\"),v(),v(\"#\"),v(\"##\"),v(\"###\")]},k={\nmatch:b(/`/,Fe,/`/)},x=[k,{className:\"variable\",match:/\\$\\d+/},{\nclassName:\"variable\",match:`\\\\$${ze}+`}],M=[{match:/(@|#(un)?)available/,\nclassName:\"keyword\",starts:{contains:[{begin:/\\(/,end:/\\)/,keywords:Pe,\ncontains:[...p,f,O]}]}},{className:\"keyword\",match:b(/@/,m(...je))},{\nclassName:\"meta\",match:b(/@/,Fe)}],S={match:d(/\\b[A-Z]/),relevance:0,contains:[{\nclassName:\"type\",\nmatch:b(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,ze,\"+\")\n},{className:\"type\",match:Ue,relevance:0},{match:/[?!]+/,relevance:0},{\nmatch:/\\.\\.\\./,relevance:0},{match:b(/\\s+&\\s+/,d(Ue)),relevance:0}]},A={\nbegin:/</,end:/>/,keywords:l,contains:[...a,...c,...M,u,S]};S.contains.push(A)\n;const C={begin:/\\(/,end:/\\)/,relevance:0,keywords:l,contains:[\"self\",{\nmatch:b(Fe,/\\s*:/),keywords:\"_|0\",relevance:0\n},...a,...c,...g,...p,f,O,...x,...M,S]},T={begin:/</,end:/>/,contains:[...a,S]\n},R={begin:/\\(/,end:/\\)/,keywords:l,contains:[{\nbegin:m(d(b(Fe,/\\s*:/)),d(b(Fe,/\\s+/,Fe,/\\s*:/))),end:/:/,relevance:0,\ncontains:[{className:\"keyword\",match:/\\b_\\b/},{className:\"params\",match:Fe}]\n},...a,...c,...p,f,O,...M,S,C],endsParent:!0,illegal:/[\"']/},D={\nmatch:[/func/,/\\s+/,m(k.match,Fe,Be)],className:{1:\"keyword\",3:\"title.function\"\n},contains:[T,R,n],illegal:[/\\[/,/%/]},I={\nmatch:[/\\b(?:subscript|init[?!]?)/,/\\s*(?=[<(])/],className:{1:\"keyword\"},\ncontains:[T,R,n],illegal:/\\[|%/},L={match:[/operator/,/\\s+/,Be],className:{\n1:\"keyword\",3:\"title\"}},B={begin:[/precedencegroup/,/\\s+/,Ue],className:{\n1:\"keyword\",3:\"title\"},contains:[S],keywords:[...Te,...Ce],end:/}/}\n;for(const e of O.variants){const n=e.contains.find((e=>\"interpol\"===e.label))\n;n.keywords=l;const t=[...c,...g,...p,f,O,...x];n.contains=[...t,{begin:/\\(/,\nend:/\\)/,contains:[\"self\",...t]}]}return{name:\"Swift\",keywords:l,\ncontains:[...a,D,I,{beginKeywords:\"struct protocol class extension enum actor\",\nend:\"\\\\{\",excludeEnd:!0,keywords:l,contains:[e.inherit(e.TITLE_MODE,{\nclassName:\"title.class\",begin:/[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/}),...c]\n},L,B,{beginKeywords:\"import\",end:/$/,contains:[...a],relevance:0\n},...c,...g,...p,f,O,...x,...M,S,C]}},grmr_typescript:e=>{\nconst n=Oe(e),t=_e,a=[\"any\",\"void\",\"number\",\"boolean\",\"string\",\"object\",\"never\",\"symbol\",\"bigint\",\"unknown\"],i={\nbeginKeywords:\"namespace\",end:/\\{/,excludeEnd:!0,\ncontains:[n.exports.CLASS_REFERENCE]},r={beginKeywords:\"interface\",end:/\\{/,\nexcludeEnd:!0,keywords:{keyword:\"interface extends\",built_in:a},\ncontains:[n.exports.CLASS_REFERENCE]},s={$pattern:_e,\nkeyword:he.concat([\"type\",\"namespace\",\"interface\",\"public\",\"private\",\"protected\",\"implements\",\"declare\",\"abstract\",\"readonly\",\"enum\",\"override\"]),\nliteral:fe,built_in:ve.concat(a),\"variable.language\":we},o={className:\"meta\",\nbegin:\"@\"+t},l=(e,n,t)=>{const a=e.contains.findIndex((e=>e.label===n))\n;if(-1===a)throw Error(\"can not find mode to replace\");e.contains.splice(a,1,t)}\n;return Object.assign(n.keywords,s),\nn.exports.PARAMS_CONTAINS.push(o),n.contains=n.contains.concat([o,i,r]),\nl(n,\"shebang\",e.SHEBANG()),l(n,\"use_strict\",{className:\"meta\",relevance:10,\nbegin:/^\\s*['\"]use strict['\"]/\n}),n.contains.find((e=>\"func.def\"===e.label)).relevance=0,Object.assign(n,{\nname:\"TypeScript\",aliases:[\"ts\",\"tsx\",\"mts\",\"cts\"]}),n},grmr_vbnet:e=>{\nconst n=e.regex,t=/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/,a=/\\d{4}-\\d{1,2}-\\d{1,2}/,i=/(\\d|1[012])(:\\d+){0,2} *(AM|PM)/,r=/\\d{1,2}(:\\d{1,2}){1,2}/,s={\nclassName:\"literal\",variants:[{begin:n.concat(/# */,n.either(a,t),/ *#/)},{\nbegin:n.concat(/# */,r,/ *#/)},{begin:n.concat(/# */,i,/ *#/)},{\nbegin:n.concat(/# */,n.either(a,t),/ +/,n.either(i,r),/ *#/)}]\n},o=e.COMMENT(/'''/,/$/,{contains:[{className:\"doctag\",begin:/<\\/?/,end:/>/}]\n}),l=e.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\\t ]|^)REM(?=\\s)/}]})\n;return{name:\"Visual Basic .NET\",aliases:[\"vb\"],case_insensitive:!0,\nclassNameAliases:{label:\"symbol\"},keywords:{\nkeyword:\"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield\",\nbuilt_in:\"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort\",\ntype:\"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort\",\nliteral:\"true false nothing\"},\nillegal:\"//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ \",contains:[{\nclassName:\"string\",begin:/\"(\"\"|[^/n])\"C\\b/},{className:\"string\",begin:/\"/,\nend:/\"/,illegal:/\\n/,contains:[{begin:/\"\"/}]},s,{className:\"number\",relevance:0,\nvariants:[{begin:/\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/\n},{begin:/\\b\\d[\\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\\dA-F_]+((U?[SIL])|[%&])?/},{\nbegin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]},{\nclassName:\"label\",begin:/^\\w+:/},o,l,{className:\"meta\",\nbegin:/[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\nend:/$/,keywords:{\nkeyword:\"const disable else elseif enable end externalsource if region then\"},\ncontains:[l]}]}},grmr_wasm:e=>{e.regex;const n=e.COMMENT(/\\(;/,/;\\)/)\n;return n.contains.push(\"self\"),{name:\"WebAssembly\",keywords:{$pattern:/[\\w.]+/,\nkeyword:[\"anyfunc\",\"block\",\"br\",\"br_if\",\"br_table\",\"call\",\"call_indirect\",\"data\",\"drop\",\"elem\",\"else\",\"end\",\"export\",\"func\",\"global.get\",\"global.set\",\"local.get\",\"local.set\",\"local.tee\",\"get_global\",\"get_local\",\"global\",\"if\",\"import\",\"local\",\"loop\",\"memory\",\"memory.grow\",\"memory.size\",\"module\",\"mut\",\"nop\",\"offset\",\"param\",\"result\",\"return\",\"select\",\"set_global\",\"set_local\",\"start\",\"table\",\"tee_local\",\"then\",\"type\",\"unreachable\"]\n},contains:[e.COMMENT(/;;/,/$/),n,{match:[/(?:offset|align)/,/\\s*/,/=/],\nclassName:{1:\"keyword\",3:\"operator\"}},{className:\"variable\",begin:/\\$[\\w_]+/},{\nmatch:/(\\((?!;)|\\))+/,className:\"punctuation\",relevance:0},{\nbegin:[/(?:func|call|call_indirect)/,/\\s+/,/\\$[^\\s)]+/],className:{1:\"keyword\",\n3:\"title.function\"}},e.QUOTE_STRING_MODE,{match:/(i32|i64|f32|f64)(?!\\.)/,\nclassName:\"type\"},{className:\"keyword\",\nmatch:/\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n},{className:\"number\",relevance:0,\nmatch:/[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n}]}},grmr_yaml:e=>{\nconst n=\"true false yes no null\",t=\"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\",a={\nclassName:\"string\",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/\n},{begin:/\\S+/}],contains:[e.BACKSLASH_ESCAPE,{className:\"template-variable\",\nvariants:[{begin:/\\{\\{/,end:/\\}\\}/},{begin:/%\\{/,end:/\\}/}]}]},i=e.inherit(a,{\nvariants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/[^\\s,{}[\\]]+/}]}),r={\nend:\",\",endsWithParent:!0,excludeEnd:!0,keywords:n,relevance:0},s={begin:/\\{/,\nend:/\\}/,contains:[r],illegal:\"\\\\n\",relevance:0},o={begin:\"\\\\[\",end:\"\\\\]\",\ncontains:[r],illegal:\"\\\\n\",relevance:0},l=[{className:\"attr\",variants:[{\nbegin:\"\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)\"},{begin:'\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)'},{\nbegin:\"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \\t]|$)\"}]},{className:\"meta\",begin:\"^---\\\\s*$\",\nrelevance:10},{className:\"string\",\nbegin:\"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"},{\nbegin:\"<%[%=-]?\",end:\"[%-]?%>\",subLanguage:\"ruby\",excludeBegin:!0,excludeEnd:!0,\nrelevance:0},{className:\"type\",begin:\"!\\\\w+!\"+t},{className:\"type\",\nbegin:\"!<\"+t+\">\"},{className:\"type\",begin:\"!\"+t},{className:\"type\",begin:\"!!\"+t\n},{className:\"meta\",begin:\"&\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"meta\",\nbegin:\"\\\\*\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"bullet\",begin:\"-(?=[ ]|$)\",\nrelevance:0},e.HASH_COMMENT_MODE,{beginKeywords:n,keywords:{literal:n}},{\nclassName:\"number\",\nbegin:\"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\"\n},{className:\"number\",begin:e.C_NUMBER_RE+\"\\\\b\",relevance:0},s,o,a],c=[...l]\n;return c.pop(),c.push(i),r.contains=c,{name:\"YAML\",case_insensitive:!0,\naliases:[\"yml\"],contains:l}}});const qe=ae;for(const e of Object.keys(Ke)){\nconst n=e.replace(\"grmr_\",\"\").replace(\"_\",\"-\");qe.registerLanguage(n,Ke[e])}\nreturn qe}()\n;\"object\"==typeof exports&&\"undefined\"!=typeof module&&(module.exports=hljs);","export const updateResponsiveClasses = async () => {\n  document.querySelectorAll('.frame').forEach((frame) => {\n    frame\n      .querySelectorAll(\n        '[class^=\"sm:\"], [class^=\"md:\"], [class^=\"lg:\"], [class^=\"xl:\"], [class^=\"2xl:\"],' +\n          '[class*=\"sm:\"], [class*=\"md:\"], [class*=\"lg:\"], [class*=\"xl:\"], [class*=\"2xl:\"]',\n      )\n      .forEach((element) => {\n        Array.from(element.classList).forEach((classItem) => {\n          const split = classItem.split(':');\n\n          if (split.length === 1) {\n            return;\n          }\n\n          if (['sm', 'md', 'lg', 'xl', '2xl'].indexOf(split[0]) === -1) {\n            return;\n          }\n\n          element.classList.add('@' + classItem);\n          element.classList.remove(classItem);\n        });\n      });\n  });\n};\n","export const addContainerQueries = async () => {\n  let rules = {};\n  const querySheet = new CSSStyleSheet();\n  const sheets = Array.from(document.styleSheets);\n  document.adoptedStyleSheets = [querySheet];\n\n  sheets.forEach((sheet) => {\n    const sheetRules = Array.from(sheet.cssRules);\n\n    sheetRules.forEach((sheetRule) => {\n      if (sheetRule.media && sheetRule.cssText.indexOf('@media print') === -1) {\n        const condition = sheetRule.conditionText;\n\n        if (Object.keys(rules).indexOf(condition) === -1) {\n          rules[condition] = [];\n        }\n\n        Array.from(sheetRule.cssRules).forEach((rule) => {\n          const selector = rule.selectorText.replace('.', '.\\\\@');\n          const ruleText = rule.cssText.replace(rule.selectorText, selector);\n          rules[condition].push(ruleText);\n        });\n      }\n    });\n  });\n\n  const rulesText = [];\n\n  Object.keys(rules).forEach((condition) => {\n    rulesText.push('@container ');\n    rulesText.push(condition);\n    rulesText.push(' {');\n    rules[condition].forEach((rule) => {\n      rulesText.push(rule);\n    });\n    rulesText.push(' }');\n  });\n\n  rulesText.push('}');\n\n  const joinedText = rulesText.join('');\n\n  await querySheet.replaceSync(joinedText);\n};\n","import fs from 'fs';\nimport path from 'path';\nimport { bodyScroll, ElementGenerator } from './utilities';\n\nlet generator;\n\nconst loadNavbar = () => {\n  const navbarSelector = 'template-components-header';\n  let navBarJS = fs.readFileSync(\n    path.join(__dirname, '/Components/header.js'),\n    'utf8',\n  );\n  navBarJS = navBarJS.replaceAll('{{selector}}', navbarSelector);\n  navBarJS = navBarJS.replaceAll('{{selector|r}}', navbarSelector);\n  window.eval(navBarJS);\n};\n\nconst hideBuildPanelListener = () => {\n  document\n    .querySelector('#hide-build-panel')\n    .addEventListener('click', function () {\n      hideBuildPanel();\n    });\n};\n\nconst toggleBuildPanel = () => {\n  if (document.querySelector('#build-panel').classList.contains('hidden')) {\n    showBuildPanel();\n\n    return;\n  }\n\n  hideBuildPanel();\n};\n\nconst toggleBuildPanelListener = () => {\n  document\n    .querySelector('#show-build-panel')\n    .addEventListener('click', toggleBuildPanel);\n};\n\nconst cancelBuild = () => {\n  document.querySelectorAll('.add-component-button').forEach((element) => {\n    element.closest('button').classList.add('hidden');\n  });\n\n  clearBuildList();\n\n  hideBuildPanel();\n};\n\nconst cancelButtonListener = () => {\n  document\n    .querySelector('#cancel-build')\n    .addEventListener('click', cancelBuild);\n};\n\nconst showBuildPanel = () => {\n  bodyScroll(true, false);\n  document.querySelector('#build-panel').classList.remove('hidden');\n  document.querySelectorAll('.add-component-button').forEach((element) => {\n    element.closest('button').classList.remove('hidden');\n  });\n};\n\nconst hideBuildPanel = () => {\n  bodyScroll(false);\n  document.querySelector('#build-panel').classList.add('hidden');\n};\n\nconst clearBuildList = () => {\n  document.querySelector('#build-list').innerHTML = null;\n};\n\nconst addComponentListener = async () => {\n  document.querySelectorAll('.add-component-button').forEach((element) => {\n    element.addEventListener('click', (event) => {\n      (async () => {\n        const component = event.target\n          .closest('button')\n          .getAttribute('id')\n          .replace('add-', '');\n\n        const list = document.querySelector('#build-list');\n        const entries = list.querySelectorAll('[data-component]');\n        const numberOfEntries = entries.length;\n\n        let html = await generator.fetchCode(\n          new URL('../Templates/componentBuilderEntry.html', import.meta.url),\n        );\n        html = html.replaceAll(`{{component}}`, component);\n\n        const element = new ElementGenerator()\n          .setContent(html)\n          .setAttributes({\n            'data-component': component,\n            'data-build-list-order': numberOfEntries.toString(),\n          })\n          .setClasses(['build-list-entry'])\n          .append('#build-list')\n          .get();\n\n        addListItemListeners(element);\n      })();\n    });\n  });\n};\n\nconst reorderBuildListByOrder = () => {\n  const buildList = document.querySelector('#build-list');\n  const items = Array.from(buildList.children)\n    .filter((item) => item.getAttribute('data-build-list-order') > -1)\n    .sort((a, b) =>\n      a.getAttribute('data-build-list-order') >\n      b.getAttribute('data-build-list-order')\n        ? 1\n        : -1,\n    );\n\n  const elements = document.createDocumentFragment();\n\n  items.forEach((item) => {\n    const clone = item.cloneNode(true);\n    addListItemListeners(clone);\n    elements.append(clone);\n  });\n\n  buildList.innerHTML = null;\n  buildList.append(elements);\n};\n\nconst addListItemListeners = (element) => {\n  moveComponentUpListener(element);\n  moveComponentDownListener(element);\n  removeComponentListener(element);\n};\n\nconst moveComponentUpListener = (element) => {\n  element\n    .querySelector('[data-action=\"move-up\"]')\n    .addEventListener('click', () => {\n      const parentElement = element.closest('[data-build-list-order]');\n      const currentOrder = parseInt(\n        parentElement.getAttribute('data-build-list-order'),\n      );\n      const previousOrder = currentOrder - 1;\n\n      if (currentOrder === 0) {\n        return;\n      }\n\n      const previousElement = document.querySelector(\n        '[data-build-list-order=\"' + previousOrder + '\"]',\n      );\n      previousElement.setAttribute(\n        'data-build-list-order',\n        currentOrder.toString(),\n      );\n      parentElement.setAttribute(\n        'data-build-list-order',\n        previousOrder.toString(),\n      );\n\n      reorderBuildListByOrder();\n    });\n};\n\nconst moveComponentDownListener = (element) => {\n  element\n    .querySelector('[data-action=\"move-down\"]')\n    .addEventListener('click', () => {\n      const parentElement = element.closest('[data-build-list-order]');\n      const currentOrder = parseInt(\n        parentElement.getAttribute('data-build-list-order'),\n      );\n      const listItemCount =\n        document.querySelector('#build-list').children.length;\n      const nextOrder = currentOrder + 1;\n\n      if (nextOrder === listItemCount) {\n        return;\n      }\n\n      const nextElement = document.querySelector(\n        '[data-build-list-order=\"' + nextOrder + '\"]',\n      );\n      nextElement.setAttribute(\n        'data-build-list-order',\n        currentOrder.toString(),\n      );\n      parentElement.setAttribute('data-build-list-order', nextOrder.toString());\n\n      reorderBuildListByOrder();\n    });\n};\n\nconst removeComponentListener = (element) => {\n  element\n    .querySelector('[data-action=\"remove\"]')\n    .addEventListener('click', () => {\n      const parentElement = element.closest('[data-build-list-order]');\n      parentElement.setAttribute('data-build-list-order', -1);\n      reorderBuildListByOrder();\n    });\n};\n\nexport const loadSiteJS = async (currentGenerator) => {\n  generator = currentGenerator;\n  loadNavbar();\n  hideBuildPanelListener();\n  toggleBuildPanelListener();\n  cancelButtonListener();\n  await addComponentListener();\n};\n","\"use strict\";","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export const ucFirst = (word) => word.charAt(0).toUpperCase() + word.slice(1);\n\nexport const bodyScroll = (prevent = true, large = false) => {\n  if (prevent && large) {\n    document.body.classList.add('overflow-hidden');\n    document.body.classList.remove('lg:overflow-auto');\n\n    return;\n  }\n\n  if (prevent) {\n    document.body.classList.add('overflow-hidden');\n    document.body.classList.add('lg:overflow-auto');\n\n    return;\n  }\n\n  document.body.classList.remove('lg:overflow-auto');\n  document.body.classList.remove('overflow-hidden');\n};\n\nexport const makeId = (length) => {\n  let result = '';\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n};\n\nexport const encodeHTMLEntities = (text) => {\n  let textArea = createElement(text, false, 'textarea');\n  textArea.innerText = text;\n  let encodedOutput = textArea.innerHTML;\n  let arr = encodedOutput.split('<br>');\n  encodedOutput = arr.join('\\n');\n  textArea.remove();\n  return encodedOutput;\n};\n\nexport class ElementGenerator {\n  constructor(tag = 'div', destination = document) {\n    this.element = destination.createElement(tag);\n    this.destination = destination;\n  }\n\n  append = (destinationElement = 'body', all = false) => {\n    if (typeof destinationElement === 'string') {\n      return this.appendToSelector(destinationElement, all);\n    }\n\n    return this.appendToElement(destinationElement);\n  };\n\n  appendToSelector = (selector = 'body', all = false) => {\n    if (all) {\n      this.destination\n        .querySelectorAll(selector)\n        .forEach((element) => element.append(this.element));\n\n      return this;\n    }\n\n    this.destination.querySelector(selector).append(this.element);\n\n    return this;\n  };\n\n  appendToElement = (destinationElement) => {\n    destinationElement.append(this.element);\n\n    return this;\n  };\n\n  get = () => this.element;\n\n  setAttributes = (attributes) => {\n    Object.keys(attributes).forEach((name) =>\n      this.element.setAttribute(name, attributes[name]),\n    );\n\n    return this;\n  };\n\n  setClasses = (classes) => {\n    classes.forEach((name) => this.element.classList.add(name));\n\n    return this;\n  };\n\n  setContent = (content) => {\n    this.element.innerHTML = content;\n\n    return this;\n  };\n}\n\nexport const createElement = (\n  content = '',\n  append = false,\n  tag = 'div',\n  destination = document,\n  destinationElement = 'body',\n  attributes = {},\n  classes = [],\n  createForAll = false,\n) => {\n  const element = new ElementGenerator(tag, destination);\n\n  if (append) {\n    element.append(destinationElement, createForAll);\n  }\n\n  if (Object.keys(attributes).length > 0) {\n    element.setAttributes(attributes);\n  }\n\n  if (classes.length > 0) {\n    element.setClasses(classes);\n  }\n\n  if (content.length > 0) {\n    element.setContent(content);\n  }\n\n  return element.get();\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aN01X\")).toString();","import FontFaceObserver from 'fontfaceobserver';\n\nexport default async () => {\n  const MontserratObserver = new FontFaceObserver('Montserrat');\n  const InterObserver = new FontFaceObserver('Inter');\n\n  Promise.all([MontserratObserver.load(), InterObserver.load()]).then(() => {\n    document\n      .querySelectorAll('.font-sans')\n      .forEach((el) => el.classList.add('fonts-loaded'));\n    document\n      .querySelectorAll('.font-serif')\n      .forEach((el) => el.classList.add('fonts-loaded'));\n  });\n};\n","/* Font Face Observer v2.3.0 - © Bram Stein. License: BSD-3-Clause */(function(){function p(a,c){document.addEventListener?a.addEventListener(\"scroll\",c,!1):a.attachEvent(\"scroll\",c)}function u(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function b(){document.removeEventListener(\"DOMContentLoaded\",b);a()}):document.attachEvent(\"onreadystatechange\",function g(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",g),a()})};function w(a){this.g=document.createElement(\"div\");this.g.setAttribute(\"aria-hidden\",\"true\");this.g.appendChild(document.createTextNode(a));this.h=document.createElement(\"span\");this.i=document.createElement(\"span\");this.m=document.createElement(\"span\");this.j=document.createElement(\"span\");this.l=-1;this.h.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.i.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.j.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.m.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.h.appendChild(this.m);this.i.appendChild(this.j);this.g.appendChild(this.h);this.g.appendChild(this.i)}\nfunction x(a,c){a.g.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\"+c+\";\"}function B(a){var c=a.g.offsetWidth,b=c+100;a.j.style.width=b+\"px\";a.i.scrollLeft=b;a.h.scrollLeft=a.h.scrollWidth+100;return a.l!==c?(a.l=c,!0):!1}function C(a,c){function b(){var e=g;B(e)&&null!==e.g.parentNode&&c(e.l)}var g=a;p(a.h,b);p(a.i,b);B(a)};function D(a,c,b){c=c||{};b=b||window;this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\";this.context=b}var E=null,F=null,G=null,H=null;function I(a){null===F&&(M(a)&&/Apple/.test(window.navigator.vendor)?(a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent),F=!!a&&603>parseInt(a[1],10)):F=!1);return F}function M(a){null===H&&(H=!!a.document.fonts);return H}\nfunction N(a,c){var b=a.style,g=a.weight;if(null===G){var e=document.createElement(\"div\");try{e.style.font=\"condensed 100px sans-serif\"}catch(q){}G=\"\"!==e.style.font}return[b,g,G?a.stretch:\"\",\"100px\",c].join(\" \")}\nD.prototype.load=function(a,c){var b=this,g=a||\"BESbswy\",e=0,q=c||3E3,J=(new Date).getTime();return new Promise(function(K,L){if(M(b.context)&&!I(b.context)){var O=new Promise(function(r,t){function h(){(new Date).getTime()-J>=q?t(Error(\"\"+q+\"ms timeout exceeded\")):b.context.document.fonts.load(N(b,'\"'+b.family+'\"'),g).then(function(n){1<=n.length?r():setTimeout(h,25)},t)}h()}),P=new Promise(function(r,t){e=setTimeout(function(){t(Error(\"\"+q+\"ms timeout exceeded\"))},q)});Promise.race([P,O]).then(function(){clearTimeout(e);\nK(b)},L)}else u(function(){function r(){var d;if(d=-1!=k&&-1!=l||-1!=k&&-1!=m||-1!=l&&-1!=m)(d=k!=l&&k!=m&&l!=m)||(null===E&&(d=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),E=!!d&&(536>parseInt(d[1],10)||536===parseInt(d[1],10)&&11>=parseInt(d[2],10))),d=E&&(k==y&&l==y&&m==y||k==z&&l==z&&m==z||k==A&&l==A&&m==A)),d=!d;d&&(null!==f.parentNode&&f.parentNode.removeChild(f),clearTimeout(e),K(b))}function t(){if((new Date).getTime()-J>=q)null!==f.parentNode&&f.parentNode.removeChild(f),\nL(Error(\"\"+q+\"ms timeout exceeded\"));else{var d=b.context.document.hidden;if(!0===d||void 0===d)k=h.g.offsetWidth,l=n.g.offsetWidth,m=v.g.offsetWidth,r();e=setTimeout(t,50)}}var h=new w(g),n=new w(g),v=new w(g),k=-1,l=-1,m=-1,y=-1,z=-1,A=-1,f=document.createElement(\"div\");f.dir=\"ltr\";x(h,N(b,\"sans-serif\"));x(n,N(b,\"serif\"));x(v,N(b,\"monospace\"));f.appendChild(h.g);f.appendChild(n.g);f.appendChild(v.g);b.context.document.body.appendChild(f);y=h.g.offsetWidth;z=n.g.offsetWidth;A=v.g.offsetWidth;t();\nC(h,function(d){k=d;r()});x(h,N(b,'\"'+b.family+'\",sans-serif'));C(n,function(d){l=d;r()});x(n,N(b,'\"'+b.family+'\",serif'));C(v,function(d){m=d;r()});x(v,N(b,'\"'+b.family+'\",monospace'))})})};\"object\"===typeof module?module.exports=D:(window.FontFaceObserver=D,window.FontFaceObserver.prototype.load=D.prototype.load);}());\n","import {\n  components as componentDefinitions,\n  sections as sectionDefinitions,\n} from './elementDefinitions';\nimport {\n  createElement,\n  encodeHTMLEntities,\n  makeId,\n  ucFirst,\n} from './utilities';\n\nexport default class ComponentGenerator {\n  sections = {};\n  components = {};\n  componentCode = {};\n\n  addSectionsToDom = async () => {\n    Object.keys(this.sections).forEach((sectionName) => {\n      const parents = document.querySelectorAll(\n        '.header-section[data-import = ' + sectionName + ']',\n      );\n\n      parents.forEach((parent) => parent.append(this.sections[sectionName]));\n    });\n  };\n\n  runJS = async (code, destination = window) => {\n    destination.eval(code);\n  };\n\n  addComponentsToDom = async () => {\n    Object.keys(this.components).forEach((componentName) => {\n      const component = this.componentCode[componentName];\n      const componentElement = this.components[componentName];\n      const parents = document.querySelectorAll(\n        '.component-section[data-import = ' + componentName + ']',\n      );\n\n      parents.forEach((parent) => parent.append(componentElement));\n\n      if (!component.js.hasJS) {\n        return;\n      }\n\n      this.runJS(component.js.code);\n\n      componentElement\n        .querySelector('#' + componentName + '-js-show-code')\n        .classList.remove('hidden');\n    });\n  };\n\n  addElementsToDom = async () => {\n    await this.addSectionsToDom();\n    await this.addComponentsToDom();\n\n    return {\n      sections: this.sections,\n      components: this.components,\n      componentCode: this.componentCode,\n    };\n  };\n\n  createSections = async () => {\n    for (const sectionName of Object.keys(sectionDefinitions)) {\n      const resp = await fetch(sectionDefinitions[sectionName]);\n      this.sections[sectionName] = createElement(await resp.text());\n    }\n  };\n\n  fetchCode = async (path) => {\n    const resp = await fetch(path);\n    return await resp.text();\n  };\n\n  replaceProps = (code, props, id = '') => {\n    let replacedCode = code;\n\n    Object.keys(props).forEach((propKey) => {\n      replacedCode = replacedCode.replaceAll(`{{${propKey}}}`, props[propKey]);\n      replacedCode = replacedCode.replaceAll(\n        `{{${propKey}|r}}`,\n        props[propKey] + id,\n      );\n    });\n\n    return replacedCode;\n  };\n\n  generateHTMLForComponent = async (name, id) => {\n    const html = componentDefinitions[name].html;\n    const htmlCode = await this.fetchCode(html.code);\n    const htmlProps = html.properties;\n\n    let replacedHTML = htmlCode;\n    if (htmlProps && Object.keys(htmlProps).length > 0) {\n      replacedHTML = this.replaceProps(replacedHTML, htmlProps, id);\n    }\n\n    return {\n      code: replacedHTML,\n      original: htmlCode,\n      display: this.getHTMLDisplayCode(replacedHTML),\n      name: name,\n      props: htmlProps,\n      hasHTML: true,\n    };\n  };\n\n  generateJSForComponent = async (name, id) => {\n    const response = {\n      code: '',\n      original: '',\n      display: '',\n      name: name,\n      props: {},\n      hasJS: false,\n    };\n\n    const js = componentDefinitions[name].js;\n\n    if (!js || !js.code) {\n      return response;\n    }\n\n    response.hasJS = true;\n\n    const jsCode = js.code;\n    const jsProps = js.properties;\n    response.original = jsCode;\n    response.code = jsCode;\n\n    if (jsProps && Object.keys(jsProps).length > 0) {\n      response.code = this.replaceProps(jsCode, jsProps, id);\n      response.props = jsProps;\n    }\n\n    response.display = response.code;\n\n    return response;\n  };\n\n  generateDataForComponents = async (componentList) => {\n    const componentData = {};\n\n    for (const componentName of componentList) {\n      const id = makeId(5);\n      componentData[componentName] = {\n        html: await this.generateHTMLForComponent(componentName, id),\n        js: await this.generateJSForComponent(componentName, id),\n      };\n    }\n\n    return componentData;\n  };\n\n  createComponents = async () => {\n    const componentTemplateResponse = await fetch(\n      new URL('../Templates/SectionComponent.html', import.meta.url),\n    );\n    const componentTemplate = await componentTemplateResponse.text();\n    const componentList = Object.keys(componentDefinitions);\n    const componentListData =\n      await this.generateDataForComponents(componentList);\n\n    for (const componentName of componentList) {\n      let componentContainer = componentTemplate;\n      componentContainer = componentContainer.replaceAll(\n        '{component}',\n        componentName,\n      );\n      componentContainer = componentContainer.replaceAll(\n        '{Component}',\n        ucFirst(componentName),\n      );\n\n      const containerEl = createElement(componentContainer);\n\n      const frame = containerEl.querySelector('#' + componentName + '-frame');\n\n      const componentData = componentListData[componentName];\n      frame.innerHTML = componentData.html.code;\n      this.components[componentName] = containerEl;\n      this.componentCode[componentName] = componentData;\n    }\n  };\n\n  getHTMLDisplayCode = (code) => {\n    let htmlRoot = createElement(code);\n\n    htmlRoot.querySelectorAll('script').forEach((el) => el.remove());\n\n    return encodeHTMLEntities(htmlRoot.innerHTML);\n  };\n}\n","import fs from 'fs';\nimport path from 'path';\n\nexport const sections = {\n  headers: new URL('../Sections/headers.html', import.meta.url),\n  footers: new URL('../Sections/footers.html', import.meta.url),\n  hero: new URL('../Sections/hero.html', import.meta.url),\n  text: new URL('../Sections/text.html', import.meta.url),\n  services: new URL('../Sections/services.html', import.meta.url),\n  contact: new URL('../Sections/contact.html', import.meta.url),\n  faq: new URL('../Sections/faq.html', import.meta.url),\n};\n\nexport const components = {\n  header1: {\n    html: {\n      code: new URL('../Components/header1.html', import.meta.url),\n      properties: {\n        selector: 'header-1',\n      },\n    },\n    js: {\n      code: fs.readFileSync(\n        path.join(__dirname, '/Components/header.js'),\n        'utf8',\n      ),\n      properties: {\n        selector: 'header-1',\n      },\n    },\n  },\n  header2: {\n    html: {\n      code: new URL('../Components/header2.html', import.meta.url),\n      properties: {\n        selector: 'header-2',\n      },\n    },\n    js: {\n      code: fs.readFileSync(\n        path.join(__dirname, '/Components/header.js'),\n        'utf8',\n      ),\n      properties: {\n        selector: 'header-2',\n      },\n    },\n  },\n  header3: {\n    html: {\n      code: new URL('../Components/header3.html', import.meta.url),\n      properties: {\n        selector: 'header-3',\n      },\n    },\n    js: {\n      code: fs.readFileSync(\n        path.join(__dirname, '/Components/header.js'),\n        'utf8',\n      ),\n      properties: {\n        selector: 'header-3',\n      },\n    },\n  },\n  hero1: {\n    html: {\n      code: new URL('../Components/hero1.html', import.meta.url),\n      properties: {\n        selector: 'hero-1',\n      },\n    },\n    js: {},\n  },\n  text1: {\n    html: {\n      code: new URL('../Components/text1.html', import.meta.url),\n      properties: {\n        selector: 'text-1',\n      },\n    },\n    js: {},\n  },\n  text2: {\n    html: {\n      code: new URL('../Components/text2.html', import.meta.url),\n      properties: {\n        selector: 'text-2',\n      },\n    },\n    js: {},\n  },\n  services1: {\n    html: {\n      code: new URL('../Components/services1.html', import.meta.url),\n      properties: {\n        selector: 'services-1',\n      },\n    },\n    js: {},\n  },\n  contact1: {\n    html: {\n      code: new URL('../Components/contact1.html', import.meta.url),\n      properties: {\n        selector: 'contact-1',\n      },\n    },\n    js: {},\n  },\n  faq1: {\n    html: {\n      code: new URL('../Components/faq1.html', import.meta.url),\n      properties: {\n        selector: 'faq-1',\n      },\n    },\n    js: {\n      code: fs.readFileSync(\n        path.join(__dirname, '/Components/faq1.js'),\n        'utf8',\n      ),\n      properties: {\n        selector: 'faq-1',\n      },\n    },\n  },\n  footer1: {\n    html: {\n      code: new URL('../Components/footer1.html', import.meta.url),\n      properties: {\n        selector: 'footer-1',\n      },\n    },\n    js: {},\n  },\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ie4sz\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7Gi5V\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cPW52\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jrSOU\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"X7EiZ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"l0BmQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"je9l1\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"d4px9\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cfqSr\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5pZOR\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lsSs3\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iwXo9\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3I2k7\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"exlQd\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6u1hH\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dsr0O\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2k5zH\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7Iben\")).toString();","import { handleResizeEvent } from './addEventListeners';\nimport {\n  bodyScroll,\n  createElement,\n  ElementGenerator,\n  makeId,\n} from './utilities';\nconst acorn = require('acorn');\nconst walk = require('acorn-walk');\n\nexport default class PageBuilder {\n  pageCode = {\n    pageHTML: [],\n    displayHTML: [],\n    pageJS: [],\n    displayJS: [],\n  };\n\n  constructor(generator) {\n    this.generator = generator;\n  }\n\n  getBuildList = () => {\n    const listElement = document.querySelector('#build-list');\n    const entryElements = listElement.querySelectorAll('[data-component]');\n\n    return Array.from(entryElements).map((element, index) => ({\n      id: index,\n      name: element.getAttribute('data-component'),\n    }));\n  };\n\n  setPreviewWindowHTML = async () => {\n    if (this.previewWindowHTML) {\n      return;\n    }\n\n    this.previewWindowHTML = await this.generator.fetchCode(\n      new URL('../Templates/PreviewWindow.html', import.meta.url),\n    );\n  };\n\n  registerClosePreview = () =>\n    document\n      .querySelector('#close-preview-button')\n      .addEventListener('click', () => {\n        bodyScroll(false);\n        document.querySelector('#preview-panel-window')?.remove();\n\n        this.pageCode = {\n          pageHTML: [],\n          displayHTML: [],\n          pageJS: [],\n          displayJS: [],\n        };\n      });\n\n  registerDownload = () => {\n    document\n      .querySelector('#download-page-button')\n      .addEventListener('click', () => {\n        const file = new File(\n          [this.frame.contentDocument.documentElement.innerHTML],\n          'page.html',\n          { type: 'text/plain' },\n        );\n        const url = URL.createObjectURL(file);\n\n        const link = new ElementGenerator('a')\n          .setAttributes({ href: url, download: file.name })\n          .appendToSelector('body')\n          .get();\n\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      });\n  };\n\n  registerListeners = async () => {\n    this.registerPreview();\n  };\n\n  registerPreview = () =>\n    document.querySelector('#preview-build').addEventListener('click', () => {\n      (async () => this.previewBuild())();\n    });\n\n  registerResize = () =>\n    document\n      .querySelectorAll('#preview-panel .responsive-button')\n      .forEach((button) => {\n        button.addEventListener('click', (event) =>\n          handleResizeEvent(event, button),\n        );\n      });\n\n  registerLoadedListeners = () => {\n    this.registerResize();\n    this.registerClosePreview();\n    this.registerDownload();\n  };\n\n  getHTMLForComponent = (name, id = '') => {\n    const html = {\n      pageHTML: '',\n      displayHTML: '',\n    };\n\n    const component = this.generator.componentCode[name];\n    if (!component.html.hasHTML) {\n      return html;\n    }\n\n    const replacedCode = this.generator.replaceProps(\n      component.html.original,\n      component.html.props,\n      id,\n    );\n    html.pageHTML = replacedCode;\n    html.displayHTML = this.generator.getHTMLDisplayCode(replacedCode);\n\n    return html;\n  };\n\n  getJSForComponent = (name, id = '') => {\n    const js = {\n      pageJS: '',\n      displayJS: '',\n    };\n\n    const component = this.generator.componentCode[name];\n    if (!component.js.hasJS) {\n      return js;\n    }\n\n    let replacedCode = this.generator.replaceProps(\n      component.js.original,\n      component.js.props,\n      id,\n    );\n\n    const declarations = [];\n    const identifiers = [];\n    walk.full(acorn.parse(replacedCode, { ecmaVersion: 'latest' }), (node) => {\n      if (node.type === 'Identifier') {\n        identifiers.push(node);\n      }\n      if (node.type === 'VariableDeclaration') {\n        declarations.push(node.declarations[0].id.name);\n      }\n    });\n\n    replacedCode = identifiers.reduce((accumulator, currentValue, index) => {\n      const startPosition = index === 0 ? 0 : identifiers[index - 1].end;\n      const toEnd = index === identifiers.length - 1;\n      const wasDeclared = declarations.indexOf(currentValue.name) > -1;\n      accumulator += replacedCode.substring(startPosition, currentValue.end);\n\n      if (wasDeclared) {\n        accumulator += id;\n      }\n\n      if (toEnd) {\n        accumulator += replacedCode.substring(currentValue.end);\n      }\n\n      return accumulator;\n    }, '');\n\n    js.pageJS = replacedCode;\n    js.displayJS = replacedCode;\n\n    return js;\n  };\n\n  constructDocument = () => {\n    createElement(this.previewWindowHTML, true);\n    this.frame = document.querySelector('#preview-panel-frame');\n\n    let doc = document.implementation.createHTMLDocument('Preview Page');\n    new ElementGenerator('div', doc)\n      .setContent(this.pageCode.pageHTML.join(''))\n      .append('body');\n\n    const links = document.querySelectorAll('link');\n    Array.from(links).forEach((link) =>\n      new ElementGenerator('link', doc)\n        .setAttributes({ href: link.href, rel: link.rel })\n        .append('head'),\n    );\n\n    const styles = document.querySelectorAll('style');\n    Array.from(styles).forEach((style) =>\n      new ElementGenerator('style', doc)\n        .setContent(style.innerHTML)\n        .append('head'),\n    );\n\n    const styleString = `\n        .font-sans {\n          font-family: Inter, Nunito, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n        }\n\n        .font-serif {\n          font-family: Montserrat, Georgia, Cambria, \"Times New Roman\", Times, serif;\n        }\n      `;\n\n    new ElementGenerator('style', doc).setContent(styleString).append('head');\n\n    new ElementGenerator('meta', doc)\n      .setAttributes({\n        name: 'viewport',\n        content: 'width=device-width, initial-scale=1.0',\n      })\n      .appendToSelector('head');\n\n    let dest = this.frame.contentDocument;\n    let newNode = dest.importNode(doc.documentElement, true);\n    dest.replaceChild(newNode, dest.documentElement);\n\n    this.frame.contentDocument\n      .querySelectorAll('script')\n      .forEach((el) => el.remove());\n\n    this.pageCode.pageJS.forEach((jsString) => {\n      new ElementGenerator('script', doc)\n        .setContent(jsString)\n        .appendToElement(this.frame.contentDocument.body);\n    });\n  };\n\n  previewBuild = async () => {\n    document.querySelector('#preview-panel')?.remove();\n\n    await this.setPreviewWindowHTML();\n\n    const list = this.getBuildList();\n    const componentNames = list.map((listItem) => listItem.name);\n\n    bodyScroll();\n\n    componentNames.forEach((componentName) => {\n      const id = makeId(5);\n      const html = this.getHTMLForComponent(componentName, id);\n      this.pageCode.pageHTML.push(html.pageHTML);\n      this.pageCode.displayHTML.push(html.displayHTML);\n\n      const js = this.getJSForComponent(componentName, id);\n      this.pageCode.pageJS.push(js.pageJS);\n      this.pageCode.displayJS.push(js.displayJS);\n    });\n\n    this.constructDocument();\n\n    this.registerLoadedListeners();\n  };\n}\n","// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range.\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n  return false\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // By default, the parser will verify that private properties are\n  // only used in places where they are valid and have been declared.\n  // Set this to false to turn such checks off.\n  checkPrivateFields: true,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (!opts || opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92) { return true } // '[', '/'\n  if (context) { return false }\n\n  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseCatchClauseParam = function() {\n  var param = this.parseBindingAtom();\n  var simple = param.type === \"Identifier\";\n  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n  this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n  this.expect(types$1.parenR);\n\n  return param\n};\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseCatchClauseParam();\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n  this.next();\n  this.parseVar(node, false, kind, allowMissingInitializer);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  if (!this.options.checkPrivateFields) { return }\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExportAllDeclaration = function(node, exports) {\n  if (this.options.ecmaVersion >= 11) {\n    if (this.eatContextual(\"as\")) {\n      node.exported = this.parseModuleExportName();\n      this.checkExport(exports, node.exported, this.lastTokStart);\n    } else {\n      node.exported = null;\n    }\n  }\n  this.expectContextual(\"from\");\n  if (this.type !== types$1.string) { this.unexpected(); }\n  node.source = this.parseExprAtom();\n  this.semicolon();\n  return this.finishNode(node, \"ExportAllDeclaration\")\n};\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    return this.parseExportAllDeclaration(node, exports)\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    node.declaration = this.parseExportDefaultDeclaration();\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseExportDeclaration(node);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.parseExportDeclaration = function(node) {\n  return this.parseStatement(null)\n};\n\npp$8.parseExportDefaultDeclaration = function() {\n  var isAsync;\n  if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n    var fNode = this.startNode();\n    this.next();\n    if (isAsync) { this.next(); }\n    return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n  } else if (this.type === types$1._class) {\n    var cNode = this.startNode();\n    return this.parseClass(cNode, \"nullableID\")\n  } else {\n    var declaration = this.parseMaybeAssign();\n    this.semicolon();\n    return declaration\n  }\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifier = function(exports) {\n  var node = this.startNode();\n  node.local = this.parseModuleExportName();\n\n  node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n  this.checkExport(\n    exports,\n    node.exported,\n    node.exported.start\n  );\n\n  return this.finishNode(node, \"ExportSpecifier\")\n};\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseExportSpecifier(exports));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifier = function() {\n  var node = this.startNode();\n  node.imported = this.parseModuleExportName();\n\n  if (this.eatContextual(\"as\")) {\n    node.local = this.parseIdent();\n  } else {\n    this.checkUnreserved(node.imported);\n    node.local = node.imported;\n  }\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n\n  return this.finishNode(node, \"ImportSpecifier\")\n};\n\npp$8.parseImportDefaultSpecifier = function() {\n  // import defaultObj, { x, y as z } from '...'\n  var node = this.startNode();\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportDefaultSpecifier\")\n};\n\npp$8.parseImportNamespaceSpecifier = function() {\n  var node = this.startNode();\n  this.next();\n  this.expectContextual(\"as\");\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportNamespaceSpecifier\")\n};\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    nodes.push(this.parseImportDefaultSpecifier());\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    nodes.push(this.parseImportNamespaceSpecifier());\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseImportSpecifier());\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      elts.push(this.parseAssignableListItem(allowModifiers));\n    }\n  }\n  return elts\n};\n\npp$7.parseAssignableListItem = function(allowModifiers) {\n  var elem = this.parseMaybeDefault(this.start, this.startLoc);\n  this.parseBindingListItem(elem);\n  return elem\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.shouldParseAsyncArrow = function() {\n  return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n};\n\npp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport(forNew)\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    return this.parseExprAtomDefault()\n  }\n};\n\npp$5.parseExprAtomDefault = function() {\n  this.unexpected();\n};\n\npp$5.parseExprImport = function(forNew) {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  if (this.type === types$1.parenL && !forNew) {\n    return this.parseDynamicImport(node)\n  } else if (this.type === types$1.dot) {\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  } else {\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.shouldParseArrow = function(exprList) {\n  return !this.canInsertSemicolon()\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(\n            this.start,\n            \"Comma is not permitted after the rest element\"\n          );\n        }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parseGetterSetter = function(prop) {\n  prop.kind = prop.key.name;\n  this.parsePropertyName(prop);\n  prop.value = this.parseMethod(false);\n  var paramCount = prop.kind === \"get\" ? 0 : 1;\n  if (prop.value.params.length !== paramCount) {\n    var start = prop.value.start;\n    if (prop.kind === \"get\")\n      { this.raiseRecoverable(start, \"getter should have no params\"); }\n    else\n      { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n  } else {\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n  }\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.parseGetterSetter(prop);\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal) {\n  var node = this.parseIdentNode();\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parseIdentNode = function() {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n      (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.options.checkPrivateFields) {\n    if (this.privateNameStack.length === 0) {\n      this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n    } else {\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript specification.\n// The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar ecma14BinaryProperties = ecma13BinaryProperties;\n\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties,\n  14: ecma14BinaryProperties\n};\n\n// #table-binary-unicode-properties-of-strings\nvar ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\nvar unicodeBinaryPropertiesOfStrings = {\n  9: \"\",\n  10: \"\",\n  11: \"\",\n  12: \"\",\n  13: \"\",\n  14: ecma14BinaryPropertiesOfStrings\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar ecma14ScriptValues = ecma13ScriptValues + \" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz\";\n\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues,\n  14: ecma14ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchV = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicodeSets = flags.indexOf(\"v\") !== -1;\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n    this.switchU = true;\n    this.switchV = true;\n    this.switchN = true;\n  } else {\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchV = false;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  }\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\nRegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var pos = this.pos;\n  for (var i = 0, list = chs; i < list.length; i += 1) {\n    var ch = list[i];\n\n      var current = this.at(pos, forceU);\n    if (current === -1 || current !== ch) {\n      return false\n    }\n    pos = this.nextIndex(pos, forceU);\n  }\n  this.pos = pos;\n  return true\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  var u = false;\n  var v = false;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n    if (flag === \"u\") { u = true; }\n    if (flag === \"v\") { v = true; }\n  }\n  if (this.options.ecmaVersion >= 15 && u && v) {\n    this.raise(state.start, \"Invalid regular expression flag\");\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// Return values used by character set parsing methods, needed to\n// forbid negation of sets that can match strings.\nvar CharSetNone = 0; // Nothing parsed\nvar CharSetOk = 1; // Construct parsed, cannot contain strings\nvar CharSetString = 2; // Construct parsed, can contain strings\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return CharSetOk\n  }\n\n  var negate = false;\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    var result;\n    if (\n      state.eat(0x7B /* { */) &&\n      (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n      state.eat(0x7D /* } */)\n    ) {\n      if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n      return result\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return CharSetNone\n};\n\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return CharSetOk\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n  }\n  return CharSetNone\n};\n\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\n\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n  if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n  state.raise(\"Invalid property name\");\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\n\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (!state.eat(0x5D /* ] */))\n      { state.raise(\"Unterminated character class\"); }\n    if (negate && result === CharSetString)\n      { state.raise(\"Negated character class may contain strings\"); }\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassContents\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\npp$1.regexp_classContents = function(state) {\n  if (state.current() === 0x5D /* ] */) { return CharSetOk }\n  if (state.switchV) { return this.regexp_classSetExpression(state) }\n  this.regexp_nonEmptyClassRanges(state);\n  return CharSetOk\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_nonEmptyClassRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetExpression\n// https://tc39.es/ecma262/#prod-ClassUnion\n// https://tc39.es/ecma262/#prod-ClassIntersection\n// https://tc39.es/ecma262/#prod-ClassSubtraction\npp$1.regexp_classSetExpression = function(state) {\n  var result = CharSetOk, subResult;\n  if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n    if (subResult === CharSetString) { result = CharSetString; }\n    // https://tc39.es/ecma262/#prod-ClassIntersection\n    var start = state.pos;\n    while (state.eatChars([0x26, 0x26] /* && */)) {\n      if (\n        state.current() !== 0x26 /* & */ &&\n        (subResult = this.regexp_eatClassSetOperand(state))\n      ) {\n        if (subResult !== CharSetString) { result = CharSetOk; }\n        continue\n      }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n    // https://tc39.es/ecma262/#prod-ClassSubtraction\n    while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n      if (this.regexp_eatClassSetOperand(state)) { continue }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n  } else {\n    state.raise(\"Invalid character in character class\");\n  }\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  for (;;) {\n    if (this.regexp_eatClassSetRange(state)) { continue }\n    subResult = this.regexp_eatClassSetOperand(state);\n    if (!subResult) { return result }\n    if (subResult === CharSetString) { result = CharSetString; }\n  }\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetRange\npp$1.regexp_eatClassSetRange = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatClassSetCharacter(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n      var right = state.lastIntValue;\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetOperand\npp$1.regexp_eatClassSetOperand = function(state) {\n  if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n  return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n};\n\n// https://tc39.es/ecma262/#prod-NestedClass\npp$1.regexp_eatNestedClass = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (state.eat(0x5D /* ] */)) {\n      if (negate && result === CharSetString) {\n        state.raise(\"Negated character class may contain strings\");\n      }\n      return result\n    }\n    state.pos = start;\n  }\n  if (state.eat(0x5C /* \\ */)) {\n    var result$1 = this.regexp_eatCharacterClassEscape(state);\n    if (result$1) {\n      return result$1\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunction\npp$1.regexp_eatClassStringDisjunction = function(state) {\n  var start = state.pos;\n  if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n    if (state.eat(0x7B /* { */)) {\n      var result = this.regexp_classStringDisjunctionContents(state);\n      if (state.eat(0x7D /* } */)) {\n        return result\n      }\n    } else {\n      // Make the same message as V8.\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\npp$1.regexp_classStringDisjunctionContents = function(state) {\n  var result = this.regexp_classString(state);\n  while (state.eat(0x7C /* | */)) {\n    if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n  }\n  return result\n};\n\n// https://tc39.es/ecma262/#prod-ClassString\n// https://tc39.es/ecma262/#prod-NonEmptyClassString\npp$1.regexp_classString = function(state) {\n  var count = 0;\n  while (this.regexp_eatClassSetCharacter(state)) { count++; }\n  return count === 1 ? CharSetOk : CharSetString\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetCharacter\npp$1.regexp_eatClassSetCharacter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (\n      this.regexp_eatCharacterEscape(state) ||\n      this.regexp_eatClassSetReservedPunctuator(state)\n    ) {\n      return true\n    }\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n    state.pos = start;\n    return false\n  }\n  var ch = state.current();\n  if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n  if (isClassSetSyntaxCharacter(ch)) { return false }\n  state.advance();\n  state.lastIntValue = ch;\n  return true\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\nfunction isClassSetReservedDoublePunctuatorCharacter(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n    ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n    ch === 0x2E /* . */ ||\n    ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n    ch === 0x5E /* ^ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\nfunction isClassSetSyntaxCharacter(ch) {\n  return (\n    ch === 0x28 /* ( */ ||\n    ch === 0x29 /* ) */ ||\n    ch === 0x2D /* - */ ||\n    ch === 0x2F /* / */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\npp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n  var ch = state.current();\n  if (isClassSetReservedPunctuator(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\nfunction isClassSetReservedPunctuator(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch === 0x23 /* # */ ||\n    ch === 0x25 /* % */ ||\n    ch === 0x26 /* & */ ||\n    ch === 0x2C /* , */ ||\n    ch === 0x2D /* - */ ||\n    ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n    ch === 0x40 /* @ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\n\n\nvar version = \"8.10.0\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n","// AST walker module for Mozilla Parser API compatible trees\n\n// A simple walk is one where you simply specify callbacks to be\n// called on specific nodes. The last two arguments are optional. A\n// simple use would be\n//\n//     walk.simple(myTree, {\n//         Expression: function(node) { ... }\n//     });\n//\n// to do something with all expressions. All Parser API node types\n// can be used to identify node types, as well as Expression and\n// Statement, which denote categories of nodes.\n//\n// The base argument can be used to pass a custom (recursive)\n// walker, and state can be used to give this walked an initial\n// state.\n\nfunction simple(node, visitors, baseVisitor, state, override) {\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type, found = visitors[type];\n    baseVisitor[type](node, st, c);\n    if (found) { found(node, st); }\n  })(node, state, override);\n}\n\n// An ancestor walk keeps an array of ancestor nodes (including the\n// current node) and passes them to the callback as third parameter\n// (and also as state parameter when no other state is present).\nfunction ancestor(node, visitors, baseVisitor, state, override) {\n  var ancestors = [];\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type, found = visitors[type];\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (found) { found(node, st || ancestors, ancestors); }\n    if (isNew) { ancestors.pop(); }\n  })(node, state, override);\n}\n\n// A recursive walk is one where your functions override the default\n// walkers. They can modify and replace the state parameter that's\n// threaded through the walk, and can opt how and whether to walk\n// their child nodes (by calling their third argument on these\n// nodes).\nfunction recursive(node, state, funcs, baseVisitor, override) {\n  var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor\n  ;(function c(node, st, override) {\n    visitor[override || node.type](node, st, c);\n  })(node, state, override);\n}\n\nfunction makeTest(test) {\n  if (typeof test === \"string\")\n    { return function (type) { return type === test; } }\n  else if (!test)\n    { return function () { return true; } }\n  else\n    { return test }\n}\n\nvar Found = function Found(node, state) { this.node = node; this.state = state; };\n\n// A full walk triggers the callback on each node\nfunction full(node, callback, baseVisitor, state, override) {\n  if (!baseVisitor) { baseVisitor = base; }\n  var last\n  ;(function c(node, st, override) {\n    var type = override || node.type;\n    baseVisitor[type](node, st, c);\n    if (last !== node) {\n      callback(node, st, type);\n      last = node;\n    }\n  })(node, state, override);\n}\n\n// An fullAncestor walk is like an ancestor walk, but triggers\n// the callback on each node\nfunction fullAncestor(node, callback, baseVisitor, state) {\n  if (!baseVisitor) { baseVisitor = base; }\n  var ancestors = [], last\n  ;(function c(node, st, override) {\n    var type = override || node.type;\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (last !== node) {\n      callback(node, st || ancestors, ancestors, type);\n      last = node;\n    }\n    if (isNew) { ancestors.pop(); }\n  })(node, state);\n}\n\n// Find a node with a given start, end, and type (all are optional,\n// null can be used as wildcard). Returns a {node, state} object, or\n// undefined when it doesn't find a matching node.\nfunction findNodeAt(node, start, end, test, baseVisitor, state) {\n  if (!baseVisitor) { baseVisitor = base; }\n  test = makeTest(test);\n  try {\n    (function c(node, st, override) {\n      var type = override || node.type;\n      if ((start == null || node.start <= start) &&\n          (end == null || node.end >= end))\n        { baseVisitor[type](node, st, c); }\n      if ((start == null || node.start === start) &&\n          (end == null || node.end === end) &&\n          test(type, node))\n        { throw new Found(node, st) }\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the innermost node of a given type that contains the given\n// position. Interface similar to findNodeAt.\nfunction findNodeAround(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  try {\n    (function c(node, st, override) {\n      var type = override || node.type;\n      if (node.start > pos || node.end < pos) { return }\n      baseVisitor[type](node, st, c);\n      if (test(type, node)) { throw new Found(node, st) }\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the outermost matching node after a given position.\nfunction findNodeAfter(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  try {\n    (function c(node, st, override) {\n      if (node.end < pos) { return }\n      var type = override || node.type;\n      if (node.start >= pos && test(type, node)) { throw new Found(node, st) }\n      baseVisitor[type](node, st, c);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the outermost matching node before a given position.\nfunction findNodeBefore(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  var max\n  ;(function c(node, st, override) {\n    if (node.start > pos) { return }\n    var type = override || node.type;\n    if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))\n      { max = new Found(node, st); }\n    baseVisitor[type](node, st, c);\n  })(node, state);\n  return max\n}\n\n// Used to create a custom walker. Will fill in all missing node\n// type properties with the defaults.\nfunction make(funcs, baseVisitor) {\n  var visitor = Object.create(baseVisitor || base);\n  for (var type in funcs) { visitor[type] = funcs[type]; }\n  return visitor\n}\n\nfunction skipThrough(node, st, c) { c(node, st); }\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base = {};\n\nbase.Program = base.BlockStatement = base.StaticBlock = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var stmt = list[i];\n\n    c(stmt, st, \"Statement\");\n  }\n};\nbase.Statement = skipThrough;\nbase.EmptyStatement = ignore;\nbase.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\n  function (node, st, c) { return c(node.expression, st, \"Expression\"); };\nbase.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n};\nbase.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\nbase.BreakStatement = base.ContinueStatement = ignore;\nbase.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n    var cs = list$1[i$1];\n\n    if (cs.test) { c(cs.test, st, \"Expression\"); }\n    for (var i = 0, list = cs.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, \"Statement\");\n    }\n  }\n};\nbase.SwitchCase = function (node, st, c) {\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  for (var i = 0, list = node.consequent; i < list.length; i += 1)\n    {\n    var cons = list[i];\n\n    c(cons, st, \"Statement\");\n  }\n};\nbase.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n  if (node.argument) { c(node.argument, st, \"Expression\"); }\n};\nbase.ThrowStatement = base.SpreadElement =\n  function (node, st, c) { return c(node.argument, st, \"Expression\"); };\nbase.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) { c(node.handler, st); }\n  if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n};\nbase.CatchClause = function (node, st, c) {\n  if (node.param) { c(node.param, st, \"Pattern\"); }\n  c(node.body, st, \"Statement\");\n};\nbase.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForStatement = function (node, st, c) {\n  if (node.init) { c(node.init, st, \"ForInit\"); }\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  if (node.update) { c(node.update, st, \"Expression\"); }\n  c(node.body, st, \"Statement\");\n};\nbase.ForInStatement = base.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInit = function (node, st, c) {\n  if (node.type === \"VariableDeclaration\") { c(node, st); }\n  else { c(node, st, \"Expression\"); }\n};\nbase.DebuggerStatement = ignore;\n\nbase.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\nbase.VariableDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.declarations; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    c(decl, st);\n  }\n};\nbase.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) { c(node.init, st, \"Expression\"); }\n};\n\nbase.Function = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    c(param, st, \"Pattern\");\n  }\n  c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n};\n\nbase.Pattern = function (node, st, c) {\n  if (node.type === \"Identifier\")\n    { c(node, st, \"VariablePattern\"); }\n  else if (node.type === \"MemberExpression\")\n    { c(node, st, \"MemberPattern\"); }\n  else\n    { c(node, st); }\n};\nbase.VariablePattern = ignore;\nbase.MemberPattern = skipThrough;\nbase.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\nbase.ArrayPattern = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Pattern\"); }\n  }\n};\nbase.ObjectPattern = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n\n    if (prop.type === \"Property\") {\n      if (prop.computed) { c(prop.key, st, \"Expression\"); }\n      c(prop.value, st, \"Pattern\");\n    } else if (prop.type === \"RestElement\") {\n      c(prop.argument, st, \"Pattern\");\n    }\n  }\n};\n\nbase.Expression = skipThrough;\nbase.ThisExpression = base.Super = base.MetaProperty = ignore;\nbase.ArrayExpression = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Expression\"); }\n  }\n};\nbase.ObjectExpression = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1)\n    {\n    var prop = list[i];\n\n    c(prop, st);\n  }\n};\nbase.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\nbase.SequenceExpression = function (node, st, c) {\n  for (var i = 0, list = node.expressions; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase.TemplateLiteral = function (node, st, c) {\n  for (var i = 0, list = node.quasis; i < list.length; i += 1)\n    {\n    var quasi = list[i];\n\n    c(quasi, st);\n  }\n\n  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n    {\n    var expr = list$1[i$1];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase.TemplateElement = ignore;\nbase.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase.NewExpression = base.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments)\n    { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n      {\n        var arg = list[i];\n\n        c(arg, st, \"Expression\");\n      } }\n};\nbase.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) { c(node.property, st, \"Expression\"); }\n};\nbase.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration)\n    { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n  if (node.source) { c(node.source, st, \"Expression\"); }\n};\nbase.ExportAllDeclaration = function (node, st, c) {\n  if (node.exported)\n    { c(node.exported, st); }\n  c(node.source, st, \"Expression\");\n};\nbase.ImportDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n    {\n    var spec = list[i];\n\n    c(spec, st);\n  }\n  c(node.source, st, \"Expression\");\n};\nbase.ImportExpression = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;\n\nbase.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st, \"Expression\");\n};\nbase.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\nbase.Class = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n  c(node.body, st);\n};\nbase.ClassBody = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var elt = list[i];\n\n    c(elt, st);\n  }\n};\nbase.MethodDefinition = base.PropertyDefinition = base.Property = function (node, st, c) {\n  if (node.computed) { c(node.key, st, \"Expression\"); }\n  if (node.value) { c(node.value, st, \"Expression\"); }\n};\n\nexport { ancestor, base, findNodeAfter, findNodeAround, findNodeAt, findNodeBefore, full, fullAncestor, make, recursive, simple };\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gHDI2\")).toString();"],"names":["$6ae7ca1574e23880$var$generator","$56f957b869ed1078$var$generator","$parcel$interopDefault","a","__esModule","default","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$9ffb2da3f7eeeaad$exports","n","constructor","e","data","isMatchIgnored","ignoreMatch","t","replace","Object","create","forEach","i","scope","r","buffer","classPrefix","walk","addText","openNode","prefix","startsWith","includes","split","shift","map","repeat","join","span","closeNode","value","s","children","assign","o","rootNode","stack","top","length","root","add","push","pop","closeAllNodes","toJSON","JSON","stringify","_walk","_collapse","every","l","options","startScope","endScope","__addSublanguage","toHTML","finalize","c","source","d","b","g","u","m","splice","capture","p","RegExp","toString","exec","_","h","joinWith","substring","index","Number","f","E","y","N","w","v","begin","relevance","x","end","contains","excludeBegin","M","S","A","C","freeze","__proto__","MATCH_NOTHING_RE","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","SHEBANG","binary","BACKSLASH_ESCAPE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","END_SAME_AS_BEGIN","_beginMatch","T","input","R","className","D","beginKeywords","__beforeBegin","keywords","I","Array","isArray","L","match","B","$","beforeMatch","starts","keys","endsParent","z","P","K","console","error","q","log","H","G","Z","key","_emit","_multi","W","beginScope","_wrap","skip","returnBegin","excludeEnd","returnEnd","V","name","html","ee","Symbol","ne","disableAutodetect","ignoreUnescapedHTML","throwUnescapedHTML","noHighlightRe","languageDetectRe","cssSelector","languages","__emitter","test","ignoreIllegals","language","result","keywordPatternRe","lastIndex","case_insensitive","toLowerCase","classNameAliases","subLanguage","_top","_emitter","parent","type","slice","languageName","badRule","rule","matcher","regexIndex","mode","endRe","endsWithParent","O","Q","unicodeRegex","matchIndexes","regexes","matchAt","position","addRule","compile","matcherRe","findIndex","rules","multiRegexes","count","getMatcher","resumingScanAtSamePosition","considerAll","compilerExtensions","isCompiled","$pattern","U","beginRe","terminatorEnd","illegalRe","concat","variants","cachedVariants","X","isFrozen","k","unshift","__emitTokens","message","J","_illegalBy","context","resultSoFar","errorRaised","filter","sort","supersetOf","secondBest","parentNode","find","el","warn","innerHTML","textContent","classList","re","text","document","readyState","querySelectorAll","addEventListener","highlight","highlightAuto","highlightAll","highlightElement","highlightBlock","configure","Y","initHighlighting","initHighlightingOnLoad","registerLanguage","rawDefinition","bind","aliases","unregisterLanguage","listLanguages","getLanguage","registerAliases","autoDetection","inherit","addPlugin","block","removePlugin","indexOf","debugMode","safeMode","versionString","regex","lookahead","either","optional","anyNumberOfTimes","Map","clear","delete","set","Set","getOwnPropertyNames","te","newInstance","ie","IMPORTANT","BLOCK_COMMENT","HEXCOLOR","FUNCTION_DISPATCH","ATTRIBUTE_SELECTOR_MODE","CSS_NUMBER_MODE","CSS_VARIABLE","se","oe","le","ce","reverse","de","ge","ue","be","me","_e","he","fe","Ee","ye","Ne","we","ve","Oe","isTrulyOpeningTag","after","keyword","literal","built_in","PARAMS_CONTAINS","CLASS_REFERENCE","label","ke","xe","Me","Se","Ae","Ce","Te","Re","De","Ie","Le","Be","$e","ze","Fe","Ue","je","Pe","Ke","grmr_bash","grmr_c","preprocessor","strings","grmr_cpp","_type_hints","_hint","grmr_csharp","grmr_css","keyframePosition","attribute","grmr_diff","grmr_go","grmr_graphql","grmr_ini","grmr_java","pe","grmr_javascript","grmr_json","grmr_kotlin","grmr_less","grmr_lua","grmr_makefile","grmr_xml","grmr_markdown","grmr_objectivec","grmr_perl","grmr_php","toUpperCase","grmr_php_template","grmr_plaintext","grmr_python","grmr_python_repl","grmr_r","grmr_ruby","grmr_rust","grmr_scss","grmr_shell","grmr_sql","exceptions","when","grmr_swift","grmr_typescript","grmr_vbnet","grmr_wasm","grmr_yaml","qe","$6ae7ca1574e23880$var$toggleCodeSection","element","componentNameWithType","getAttribute","exploded","componentType","componentName","codeElement","querySelector","componentCode","display","pre","parentElement","visible","remove","$6ae7ca1574e23880$var$toggleSection","$6ae7ca1574e23880$var$toggleSectionByElement","$6ae7ca1574e23880$var$sizes","mobile","width","height","tablet","desktop","$6ae7ca1574e23880$var$resetScreenSize","style","transform","marginTop","marginBottom","resize","marginLeft","marginRight","$6ae7ca1574e23880$export$8852a3a74dbd2105","screen","ratio","rotate","wrapper","closest","removeAttribute","hasAttribute","setAttribute","component","componentWidth","getBoundingClientRect","targetScreenSize","frameDimensions","frameHeight","frameWidth","windowHeight","innerHeight","currentScale","scale","scaledWidth","Math","min","toFixed","componentHeight","heightDifference","marginShift","$6ae7ca1574e23880$export$60494ee081c59977","event","button","buttonElement","target","dataButtonId","componentElement","frameElement","targetScreenSizeName","$6ae7ca1574e23880$var$addResizeListener","$6ae7ca1574e23880$var$toggleAllSections","headers","from","closedSections","header","section","hidden","$6ae7ca1574e23880$export$40a4ed63e5cb7043","currentGenerator","$d775a96c091f473d$export$472c574c6324eb38","frame","classItem","$9232f11285a88cf6$export$a60ec1be5561a385","querySheet","CSSStyleSheet","sheets","styleSheets","adoptedStyleSheets","sheet","sheetRules","cssRules","sheetRule","media","cssText","condition","conditionText","selector","selectorText","ruleText","rulesText","joinedText","replaceSync","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","clearTimeout","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","$3bfdb7183e8721d6$var$assertPath","path","TypeError","$3bfdb7183e8721d6$var$normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","nextTick","args","arguments","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$3bfdb7183e8721d6$var$posix","resolve","resolvedPath","resolvedAbsolute","undefined","normalize","isAbsolute","trailingSeparator","joined","arg","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","toEnd","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","base","parse","ret","sep","delimiter","win32","posix","$6a5576a59b27a0c5$export$7ed1f9803f634414","word","charAt","$6a5576a59b27a0c5$export$299555b746278f2e","prevent","large","body","$6a5576a59b27a0c5$export$e641f6957555d732","characters","charactersLength","counter","floor","random","$6a5576a59b27a0c5$export$9adb60ba67eebe15","textArea","$6a5576a59b27a0c5$export$c8a8987d4410bf2d","innerText","encodedOutput","arr","$6a5576a59b27a0c5$export$fa842e381e70fc1a","tag","destination","createElement","append","destinationElement","all","appendToSelector","appendToElement","get","setAttributes","attributes","setClasses","classes","setContent","content","createForAll","$56f957b869ed1078$var$loadNavbar","navbarSelector","navBarJS","replaceAll","eval","$56f957b869ed1078$var$hideBuildPanelListener","$56f957b869ed1078$var$hideBuildPanel","$56f957b869ed1078$var$toggleBuildPanel","$56f957b869ed1078$var$showBuildPanel","$56f957b869ed1078$var$toggleBuildPanelListener","$56f957b869ed1078$var$cancelBuild","$56f957b869ed1078$var$clearBuildList","$56f957b869ed1078$var$cancelButtonListener","$464fdb2abee874d6$exports","URL","url","$56f957b869ed1078$var$addComponentListener","list","entries","numberOfEntries","fetchCode","$56f957b869ed1078$var$addListItemListeners","$56f957b869ed1078$var$reorderBuildListByOrder","buildList","items","item","elements","createDocumentFragment","clone","cloneNode","$56f957b869ed1078$var$moveComponentUpListener","$56f957b869ed1078$var$moveComponentDownListener","$56f957b869ed1078$var$removeComponentListener","currentOrder","parseInt","previousOrder","previousElement","listItemCount","nextOrder","nextElement","$56f957b869ed1078$export$df183c22db917802","$e000fdea42d59506$exports","attachEvent","appendChild","createTextNode","j","offsetWidth","scrollLeft","scrollWidth","family","weight","stretch","F","fonts","font","load","Date","getTime","Promise","navigator","vendor","userAgent","then","race","removeChild","removeEventListener","detachEvent","$795b7bc1569fb947$export$2e2bcd8739ae039","MontserratObserver","InterObserver","$a0dd7684fc35cbab$exports","$27f2a89577faa352$exports","$f276a7f2ff98d0cd$exports","$a5287944a2efc9df$exports","$9909afe4f45b1c74$exports","$6e05cf2c2e2afe1c$exports","$0f9040f9397ad842$exports","$bf49995c935cdaaa$export$5a1dbaa3e4449344","footers","hero","services","contact","faq","$46ff5524706fdb1a$exports","$fa12c59d00597c5d$exports","$8f7f6ce5fbde2c73$exports","$472ea6e913ce04e2$exports","$96028a69ed78de7e$exports","$a8fd5e703201a32c$exports","$d582566456a938fb$exports","$3015ab40a8c486c1$exports","$58d328442f165fb7$exports","$222677629d73214a$exports","$bf49995c935cdaaa$export$9b5ac10f59f76296","header1","properties","js","header2","header3","hero1","text1","text2","services1","contact1","faq1","footer1","$dfb68899f55c7469$exports","$d184995ea4e545a3$var$astralIdentifierCodes","$d184995ea4e545a3$var$astralIdentifierStartCodes","$d184995ea4e545a3$var$nonASCIIidentifierStartChars","$d184995ea4e545a3$var$reservedWords","strict","strictBind","$d184995ea4e545a3$var$ecma5AndLessKeywords","$d184995ea4e545a3$var$keywords$1","$d184995ea4e545a3$var$keywordRelationalOperator","$d184995ea4e545a3$var$nonASCIIidentifierStart","$d184995ea4e545a3$var$nonASCIIidentifier","$d184995ea4e545a3$var$isInAstralSet","pos","$d184995ea4e545a3$export$56b48cc5d7560ffb","astral","String","fromCharCode","$d184995ea4e545a3$export$332f4d7bee38db93","$d184995ea4e545a3$export$f435f793048e7a0f","conf","beforeExpr","startsExpr","isLoop","isAssign","postfix","binop","updateContext","$d184995ea4e545a3$var$binop","prec","$d184995ea4e545a3$var$beforeExpr","$d184995ea4e545a3$var$startsExpr","$d184995ea4e545a3$export$d53f8326294b31d8","$d184995ea4e545a3$var$kw","$d184995ea4e545a3$export$b54c7ea7aabba5c8","num","regexp","string","privateId","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","questionDot","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","coalesce","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","$d184995ea4e545a3$export$a1aa2dd4ad0d3f6","$d184995ea4e545a3$export$866e20207bbc41f2","$d184995ea4e545a3$export$2c19a3e3b4008fff","$d184995ea4e545a3$var$nextLineBreak","next","$d184995ea4e545a3$export$268622f0f1cbc82b","$d184995ea4e545a3$var$skipWhiteSpace","$d184995ea4e545a3$var$ref","$d184995ea4e545a3$var$hasOwnProperty","hasOwnProperty","$d184995ea4e545a3$var$toString","$d184995ea4e545a3$var$hasOwn","hasOwn","obj","propName","$d184995ea4e545a3$var$isArray","$d184995ea4e545a3$var$wordsRegexp","words","$d184995ea4e545a3$var$codePointToString","$d184995ea4e545a3$var$loneSurrogate","$d184995ea4e545a3$export$13807d9ee5a34a42","line","col","column","offset","$d184995ea4e545a3$export$7387db7caf96fcdb","sourceFile","$d184995ea4e545a3$export$7af82191547c5ff7","cur","nextBreak","$d184995ea4e545a3$export$ba43bf67f3d48107","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowSuperOutsideMethod","allowHashBang","checkPrivateFields","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","$d184995ea4e545a3$var$warnedAboutEcmaVersion","$d184995ea4e545a3$var$functionFlags","async","generator","$d184995ea4e545a3$var$SCOPE_FUNCTION","$d184995ea4e545a3$export$7acfa6ed01010e37","startPos","$d184995ea4e545a3$var$getOptions","opts","opt","tokens","token","startLoc","endLoc","comment","loc","range","reserved","reservedWords","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","potentialArrowInForAwait","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","privateNameStack","$d184995ea4e545a3$var$prototypeAccessors","inFunction","configurable","inGenerator","inAsync","canAwait","allowSuper","allowDirectSuper","treatFunctionsAsVar","allowNewDotTarget","inClassStaticBlock","node","startNode","nextToken","parseTopLevel","currentVarScope","flags","inClassFieldInit","ref","currentThisScope","treatFunctionsAsVarInScope","currentScope","extend","plugins","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","$d184995ea4e545a3$var$pp$9","$d184995ea4e545a3$var$literal","spaceAfter","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","$d184995ea4e545a3$var$DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","$d184995ea4e545a3$var$pp$8","stmt","parseStatement","adaptDirectivePrologue","finishNode","$d184995ea4e545a3$var$loopLabel","kind","$d184995ea4e545a3$var$switchLabel","isLet","nextCh","ident","isAsyncFunction","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","startsWithLet","isForOf","toAssignable","checkLValPattern","isAsync","declarationPosition","parseFunction","$d184995ea4e545a3$var$FUNC_STATEMENT","$d184995ea4e545a3$var$FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","$d184995ea4e545a3$var$empty$1","parseCatchClauseParam","param","parseBindingAtom","simple","handler","clause","finalizer","allowMissingInitializer","object","i$1","label$1","statementStart","createNewLexicalScope","exitStrict","update","isForIn","left","right","parseMaybeAssign","isFor","decl","parseVarId","$d184995ea4e545a3$var$checkKeyName","computed","statement","allowExpressionBody","forInit","initFunction","checkLValSimple","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","privateNameMap","enterClassBody","classBody","hadConstructor","parseClassElement","superClass","$d184995ea4e545a3$var$isPrivateNameConflicted","curr","static","exitClassBody","constructorAllowsSuper","keyName","isGenerator","isStatic","parseClassStaticBlock","isClassElementNameStart","lastValue","startNodeAt","parseClassElementName","isConstructor","allowsDirectSuper","parseClassMethod","parseClassField","parsePrivateIdent","parsePropertyName","method","parseMethod","field","oldLabels","$d184995ea4e545a3$var$SCOPE_CLASS_STATIC_BLOCK","parseExprSubscripts","declared","used","parseExportAllDeclaration","exported","parseModuleExportName","checkExport","parseExprAtom","declaration","parseExportDefaultDeclaration","shouldParseExportStatement","parseExportDeclaration","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","fNode","cNode","checkPatternExport","pat","prop","list$1","elt","decls","parseExportSpecifier","nodes","first","parseImportSpecifiers","parseImportSpecifier","imported","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","stringLiteral","parseLiteral","statements","isDirectiveCandidate","directive","raw","$d184995ea4e545a3$var$pp$7","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","allowModifiers","elts","rest","parseBindingListItem","parseAssignableListItem","elem","parseMaybeDefault","bindingType","checkClashes","isBind","declareName","checkLValInnerPattern","$d184995ea4e545a3$export$68e7b4c4d99215d9","isExpr","preserveSpace","override","$d184995ea4e545a3$export$2b5f701edfbd6f00","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","$d184995ea4e545a3$var$pp$6","curContext","braceIsBlock","prevType","inGeneratorContext","overrideContext","tokenCtx","statementParens","allowed","$d184995ea4e545a3$var$pp$5","checkPropClash","propHash","shorthand","proto","other","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldDoubleProto","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","$d184995ea4e545a3$var$isPrivateFieldAccess","property","node$1","parseSubscripts","noCalls","maybeAsyncArrow","optionalChained","parseSubscript","chainNode","shouldParseAsyncArrow","parseSubscriptAsyncArrow","parseArrowExpression","optionalSupported","parseExprList","callee","node$2","quasi","parseTemplate","isTagged","forNew","readRegexp","canBeArrow","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseExprAtomDefault","meta","parseImportMeta","parseDynamicImport","errorPos","bigint","val","shouldParseArrow","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","$d184995ea4e545a3$var$empty","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","parseGetterSetter","paramCount","copyNode","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","allowDuplicates","nameHash","liberal","parseIdentNode","delegate","$d184995ea4e545a3$var$pp$4","SyntaxError","raisedAt","$d184995ea4e545a3$var$pp$3","$d184995ea4e545a3$var$Scope","var","lexical","functions","redeclared","scope$1","scope$2","scope$3","$d184995ea4e545a3$var$SCOPE_TOP","$d184995ea4e545a3$export$85c928794f8d04d4","$d184995ea4e545a3$var$pp$2","$d184995ea4e545a3$var$finishNodeAt","newNode","$d184995ea4e545a3$var$ecma9BinaryProperties","$d184995ea4e545a3$var$ecma10BinaryProperties","$d184995ea4e545a3$var$ecma12BinaryProperties","$d184995ea4e545a3$var$ecma11BinaryProperties","$d184995ea4e545a3$var$unicodeBinaryProperties","$d184995ea4e545a3$var$unicodeBinaryPropertiesOfStrings","$d184995ea4e545a3$var$unicodeGeneralCategoryValues","$d184995ea4e545a3$var$ecma9ScriptValues","$d184995ea4e545a3$var$ecma10ScriptValues","$d184995ea4e545a3$var$ecma11ScriptValues","$d184995ea4e545a3$var$ecma12ScriptValues","$d184995ea4e545a3$var$ecma13ScriptValues","$d184995ea4e545a3$var$unicodeScriptValues","$d184995ea4e545a3$var$data","$d184995ea4e545a3$var$i","$d184995ea4e545a3$var$list","$d184995ea4e545a3$var$buildUnicodeData","binaryOfStrings","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","$d184995ea4e545a3$var$pp$1","$d184995ea4e545a3$var$RegExpValidationState","validFlags","unicodeProperties","switchU","switchV","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","$d184995ea4e545a3$var$isSyntaxCharacter","ch","$d184995ea4e545a3$var$isControlLetter","$d184995ea4e545a3$var$isUnicodePropertyNameCharacter","$d184995ea4e545a3$var$isDecimalDigit","$d184995ea4e545a3$var$isHexDigit","$d184995ea4e545a3$var$hexToInt","$d184995ea4e545a3$var$isOctalDigit","reset","unicodeSets","unicode","at","forceU","nextIndex","current","advance","eatChars","chs","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","negate","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classContents","regexp_classSetExpression","regexp_nonEmptyClassRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","subResult","regexp_eatClassSetRange","regexp_eatClassSetOperand","regexp_eatClassSetCharacter","regexp_eatClassStringDisjunction","regexp_eatNestedClass","result$1","regexp_classStringDisjunctionContents","regexp_classString","regexp_eatClassSetReservedPunctuator","regexp_eatOctalDigit","n1","n2","$d184995ea4e545a3$export$50792b0e93539fde","$d184995ea4e545a3$var$pp","$d184995ea4e545a3$var$stringToBigInt","str","BigInt","ignoreEscapeSequenceInKeyword","getToken","iterator","this$1$1","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","next2$1","readToken_numberSign","readWord1","readRadixNumber","readString","escaped","inClass","flagsStart","readInt","radix","maybeLegacyOctalNumericLiteral","allowSeparators","isLegacyOctalNumericLiteral","total","lastCode","Infinity","startsWithDot","octal","val$1","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","$d184995ea4e545a3$var$INVALID_TEMPLATE_ESCAPE_ERROR","$e07c7226482a0f6f$var$skipThrough","st","$e07c7226482a0f6f$var$ignore","_node","_st","_c","inTemplateElement","readTmplToken","readInvalidTemplateToken","inTemplate","octalStr","substr","escStart","esc","acorn","Parser","defaultOptions","Position","SourceLocation","getLineInfo","Node","TokenType","tokTypes","keywordTypes","TokContext","tokContexts","isIdentifierChar","isIdentifierStart","Token","isNewLine","lineBreak","lineBreakG","nonASCIIwhitespace","$e07c7226482a0f6f$export$e2253033e6e1df16","Program","BlockStatement","StaticBlock","Statement","EmptyStatement","ExpressionStatement","ParenthesizedExpression","ChainExpression","IfStatement","LabeledStatement","BreakStatement","ContinueStatement","WithStatement","SwitchStatement","cs","SwitchCase","ReturnStatement","YieldExpression","AwaitExpression","ThrowStatement","SpreadElement","TryStatement","CatchClause","WhileStatement","DoWhileStatement","ForStatement","ForInStatement","ForOfStatement","ForInit","DebuggerStatement","FunctionDeclaration","VariableDeclaration","VariableDeclarator","Function","Pattern","VariablePattern","MemberPattern","RestElement","ArrayPattern","ObjectPattern","Expression","ThisExpression","Super","MetaProperty","ArrayExpression","ObjectExpression","FunctionExpression","ArrowFunctionExpression","SequenceExpression","TemplateLiteral","TemplateElement","UnaryExpression","UpdateExpression","BinaryExpression","LogicalExpression","AssignmentExpression","AssignmentPattern","ConditionalExpression","NewExpression","CallExpression","MemberExpression","ExportNamedDeclaration","ExportDefaultDeclaration","ExportAllDeclaration","ImportDeclaration","ImportExpression","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","Identifier","PrivateIdentifier","Literal","TaggedTemplateExpression","ClassDeclaration","ClassExpression","Class","ClassBody","MethodDefinition","PropertyDefinition","Property","$0122e47586e40ba6$exports","$54b47fc030b7b21e$var$generator","sections","components","addSectionsToDom","sectionName","parents","runJS","addComponentsToDom","hasJS","addElementsToDom","createSections","resp","fetch","replaceProps","props","replacedCode","propKey","generateHTMLForComponent","htmlCode","htmlProps","replacedHTML","original","getHTMLDisplayCode","hasHTML","generateJSForComponent","response","jsCode","jsProps","generateDataForComponents","componentList","componentData","createComponents","componentTemplateResponse","componentTemplate","componentListData","componentContainer","containerEl","htmlRoot","$54b47fc030b7b21e$var$pageBuilder","pageCode","pageHTML","displayHTML","pageJS","displayJS","getBuildList","listElement","entryElements","setPreviewWindowHTML","previewWindowHTML","registerClosePreview","registerDownload","file","File","contentDocument","documentElement","createObjectURL","link","href","download","click","revokeObjectURL","registerListeners","registerPreview","previewBuild","registerResize","registerLoadedListeners","getHTMLForComponent","getJSForComponent","callback","baseVisitor","identifiers","reduce","accumulator","currentValue","startPosition","wasDeclared","constructDocument","doc","implementation","createHTMLDocument","links","rel","styles","styleString","dest","importNode","replaceChild","jsString","componentNames","listItem"],"version":3,"file":"index.5464ba48.js.map"}